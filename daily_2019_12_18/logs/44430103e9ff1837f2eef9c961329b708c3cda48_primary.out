cset: moving following pidspec: 12670
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.29459011 seconds)
loading group "string"... done (took 0.640940126 seconds)
loading group "linalg"... done (took 7.384300541 seconds)
loading group "parallel"... done (took 0.161197886 seconds)
loading group "find"... done (took 1.169509699 seconds)
loading group "tuple"... done (took 1.831232177 seconds)
loading group "dates"... done (took 1.333889825 seconds)
loading group "micro"... done (took 0.223299079 seconds)
loading group "io"... done (took 0.967623902 seconds)
loading group "scalar"... done (took 39.130352618 seconds)
loading group "sparse"... done (took 11.880443978 seconds)
loading group "broadcast"... done (took 0.946882602 seconds)
loading group "union"... done (took 12.377776599 seconds)
loading group "simd"... done (took 4.485595038 seconds)
loading group "random"... done (took 9.06399189 seconds)
loading group "problem"... done (took 1.838690779 seconds)
loading group "array"... done (took 20.858720662 seconds)
loading group "misc"... done (took 1.693266725 seconds)
loading group "sort"... done (took 3.339379262 seconds)
loading group "collection"... done (took 17.430749589 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524722802 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125538213 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118546351 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12044162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148487777 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112961452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125950876 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086286963 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.791765811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148324735 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117711672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431249572 seconds)
done (took 5.169685474 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175818175 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083760851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.0844447 seconds)
  done (took 1.302237017 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065666801 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122336561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067531859 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066581578 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067797991 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066758581 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066767983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066263462 seconds)
  done (took 1.658196358 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073489897 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06951964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066162012 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068395203 seconds)
  done (took 1.413755407 seconds)
done (took 5.766578542 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.790791787 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204881098 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187154983 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416753916 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130861285 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159437411 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64953202 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344340558 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193456581 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081614216 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109507119 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330173237 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111760846 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632685624 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07505507 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090717995 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13740883 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438658623 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067903671 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082594945 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08888191 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128921996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0855278 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074699462 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146638574 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068686467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136707249 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081064759 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066270903 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213717615 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172856533 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661414443 seconds)
  done (took 10.337125138 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097489578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097858151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068701939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12344751 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09701338 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070095189 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071315173 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067918227 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087404924 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128647517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089604013 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102082914 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065793946 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068586896 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085444256 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205291478 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083585739 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084884773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072029112 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076582536 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105847086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07967062 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07735769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077304661 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129435165 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179860684 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096411079 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097950994 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069682428 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082573879 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117330765 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128221389 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065726494 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066296146 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124171489 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094637913 seconds)
  done (took 4.606109795 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004894805 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143806052 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090372511 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134721505 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064689618 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108769519 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065796079 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081076125 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209927761 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.459477304 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.589234962 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111535932 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104499841 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067952749 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068410701 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067102955 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111466184 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.500261036 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107728793 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096420091 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081807912 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070465586 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068994033 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068693448 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064215576 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068748426 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110674028 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299685419 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126147809 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068536155 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.954949695 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0643817 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12666888 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067298915 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102297977 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162113207 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090000029 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275421264 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069329054 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064981727 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153289461 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070930071 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066218895 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083915119 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103524681 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113759559 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066666924 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066862727 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164910422 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064928651 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080718495 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.669960801 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156008164 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078487892 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06470094 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25549321 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088365095 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070323871 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064943578 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188971539 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134055505 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069325156 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066928846 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069604555 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065716638 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069473083 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374576962 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068434509 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.163945462 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06855221 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07756607 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06463927 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070255525 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069942591 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073596659 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073323652 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087763082 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066602331 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075694004 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066476871 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067267992 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067764316 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084095253 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376450136 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067676179 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068725006 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065613879 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089579946 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097356276 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067070288 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066077076 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100315032 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068799384 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066760795 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107399997 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066527518 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083795331 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069523879 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113291466 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069326102 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206634127 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06791242 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096700787 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070138054 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099793547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080322719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070944882 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417398757 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065543907 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066047999 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068279152 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065696939 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067518794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067779214 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08053212 seconds)
  done (took 21.501226394 seconds)
done (took 38.589950334 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237965037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079749385 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074500003 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077275085 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074538961 seconds)
  done (took 1.7717404 seconds)
done (took 2.982383767 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123450856 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101246868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064158383 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096900134 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064658517 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102231691 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103950067 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082198166 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100903786 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0644674 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098130701 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064836107 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065027619 seconds)
  done (took 2.368267123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084611505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084589587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070271687 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084538219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063786504 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082821512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081674842 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090323736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082114099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075040414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065645904 seconds)
  done (took 2.068981655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083415565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084363674 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070800791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082757723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06436994 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083002161 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082299457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08843851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083666435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076546235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064902709 seconds)
  done (took 2.062254323 seconds)
done (took 7.706503086 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078812392 seconds)
  done (took 1.266494772 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594167496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.101191992 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082011242 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112914806 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190799422 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119388667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273467801 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08749388 seconds)
  done (took 8.933674555 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102754331 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068951753 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06991297 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072870333 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069626895 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07092703 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068637255 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07171302 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068818 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070074319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071770619 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069928083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071084866 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07188716 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072051465 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068724038 seconds)
  done (took 2.418202122 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093323052 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092460317 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075418923 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075210478 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072897315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072386023 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07454587 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073776483 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071153355 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072674126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074725211 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073775538 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072027303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064744379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074803281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075445863 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071158972 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074207219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074581978 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075274543 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074911888 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064971171 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07201402 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074300861 seconds)
  done (took 3.092656674 seconds)
done (took 16.911716107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116166358 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071404246 seconds)
  done (took 1.373765477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082829215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083150151 seconds)
  done (took 1.359838577 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084071394 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065520817 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090346014 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078486178 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065934971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066387181 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088111805 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066409689 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066494567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066735455 seconds)
  done (took 1.934387589 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069074717 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077917868 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071138055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081696149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073858295 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064452989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072301127 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067747248 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077538724 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063102847 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071273454 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083403185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071141005 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084820051 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071800828 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069130882 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071512447 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067718319 seconds)
  done (took 2.509114864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06667534 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067049715 seconds)
  done (took 1.339733512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068342081 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064252197 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067007256 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066937283 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063740675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062593544 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063426344 seconds)
  done (took 1.659078028 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388252609 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114429061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311928023 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071148439 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081898944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257585996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065781658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070799252 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071433905 seconds)
  done (took 2.677021584 seconds)
done (took 14.061789556 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082556296 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08763174 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096427311 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377446154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092216249 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066297825 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114365789 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189992303 seconds)
done (took 2.330342628 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216197049 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641438767 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404075747 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204778935 seconds)
  done (took 2.463344902 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348636712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088899826 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05859968 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067194569 seconds)
  done (took 1.784596219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068079488 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069091582 seconds)
  done (took 1.351821363 seconds)
done (took 7.044442488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067967848 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067017074 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083786057 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063762744 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065852997 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063688599 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064023487 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066337758 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066352186 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066693362 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06730319 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065931697 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066812163 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066750462 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063994081 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064040945 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066141628 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064081092 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063760438 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063929614 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066661412 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06626432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063590583 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064047509 seconds)
  done (took 2.835903334 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08712139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066569123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072821113 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071604161 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06932411 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070791734 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071371378 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066011854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071076641 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068181352 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069060545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06977639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068220185 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069467853 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068791511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069736673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071173789 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066521577 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06839368 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069572142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071419426 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06633375 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070048523 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071249598 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069189504 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070422415 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069194335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066441323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07120299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069785851 seconds)
  done (took 3.32744001 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070658795 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063407061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064254678 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071144695 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064722885 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064346451 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063970197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063981502 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064308946 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063475642 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064775721 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063218738 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0641555 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064927396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06421375 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067343688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079810756 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063873954 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063626013 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06417898 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067005124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06380234 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063675205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063221963 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063549814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063674339 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063942787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063591034 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065011815 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063871823 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066683761 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06803859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063342395 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07065991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067487024 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063884807 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068181513 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063641089 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064307496 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063211655 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063704652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063608058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063559521 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07071444 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064409139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065333798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064177664 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06502546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064769916 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.174375666 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063155504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063753258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06576209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064978807 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067308462 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063315409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06418959 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063110467 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064461605 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06328508 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062937251 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063293286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066426722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064104654 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078929563 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070384545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063849831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065740805 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064329308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066449186 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064965703 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077466312 seconds)
  done (took 6.04773775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093050021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087991794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065722789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065217876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061852373 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064108723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070315464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064271175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0653713 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082046621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064311529 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06516329 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06564736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068055363 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064223418 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065404123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072453972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062241478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063783682 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067564834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064470922 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069788537 seconds)
  done (took 2.748468713 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157064432 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07091322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106205544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075889659 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069782709 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075235765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069880768 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070832916 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070371562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067391794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067982724 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070050032 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069837323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068203573 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06759182 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068005301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070194452 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068143864 seconds)
  done (took 2.614318133 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079071425 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066735663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08764404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066019431 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06629279 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068898342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070769952 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074355817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068682747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066563373 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074166837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068598228 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068065552 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066072086 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06885684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066850062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068912517 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065873926 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073910188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070731863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070331355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073856905 seconds)
  done (took 2.780104133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081382365 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068390792 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081884655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068725245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062048476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064575818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070336447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065526391 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070234037 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067820915 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065445437 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06449183 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069114411 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065972699 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069202016 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065584341 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067626076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065848918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067776751 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061974001 seconds)
  done (took 2.596826973 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087518612 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068446663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068486222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076525903 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067920282 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068006012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075528723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067491879 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068380666 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088389061 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067636363 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067422785 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076042628 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072166117 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067524811 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075340123 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074941168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075178533 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068086945 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068196993 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088902392 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067572823 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075240769 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068286141 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06772192 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067994677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067874062 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072343277 seconds)
  done (took 3.259069728 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069467696 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06731396 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064436935 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063784339 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064038958 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064540931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063640252 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063861704 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066122025 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064325653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066772761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066300172 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066233597 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065808946 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066647366 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066495831 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065731179 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06400472 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06380873 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06357206 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066757706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066478458 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06619179 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063816417 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063659252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066459404 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063679359 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063888399 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066237823 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063560474 seconds)
  done (took 3.1935856 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078121645 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073897608 seconds)
  done (took 1.389933208 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067043237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081546524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063724157 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07084157 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070104436 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066667437 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07339442 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070574344 seconds)
  done (took 1.797388377 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086180404 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077924414 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067346972 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079873661 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07714004 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084429466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136186399 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067600025 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074058869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064914718 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080633839 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066637445 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073320077 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067694011 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07300193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073219475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064130591 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072146205 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069444918 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065081186 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068512959 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075121847 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069497302 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062199999 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067853026 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088952505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077564661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066448532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06929878 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073940466 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072178232 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060127611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065989922 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066661949 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064085942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076272069 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081444532 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069694087 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074884813 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067138946 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076008381 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060977604 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07133135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072989598 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076674003 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067054608 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066898128 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061460439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064243274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068724412 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061402345 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069119231 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06084795 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073184903 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069772459 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076979688 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064962254 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068030876 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069819445 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06984034 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072844596 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068128427 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069150045 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06640995 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076359404 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071114639 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075437526 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061789622 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060819172 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064671864 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076851517 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090013647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073153629 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067185152 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067141472 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064150226 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069769929 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066927321 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072162778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07332758 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06630128 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07181686 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073607999 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066858031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069029346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074076745 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064756405 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069136313 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064298974 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083354095 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065231051 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064523375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065142021 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077518663 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069856523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066353596 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064479818 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074803309 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060611798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066568416 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067844625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067009197 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07737998 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070986149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070399281 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074365057 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072469484 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06558582 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068377753 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062418433 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066502842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064698758 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07273196 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059836742 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068252577 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066676914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065736083 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074103496 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063963172 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065013376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072858988 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07129879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190789718 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063942851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070604248 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067915532 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071370964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07471059 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065511526 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061553141 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061635602 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071717431 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067213512 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070840936 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070744937 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069690352 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061401715 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064875077 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071849587 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075867708 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068219138 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067899656 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073232963 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068836934 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066215625 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073917078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07018599 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06623444 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072650109 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068139597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062231333 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07017688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06937575 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065968577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07116416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070036387 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068945483 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068053376 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065991781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074072443 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067210834 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066396522 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067279172 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065668306 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077796554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068671127 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061972902 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063351033 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076280861 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065062477 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066661347 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06607745 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069455871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067763782 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065573925 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065996471 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06972558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077756566 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071101194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067375071 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072465604 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077898416 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066131207 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069456864 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067323439 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067605331 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067080077 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075962888 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072748251 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071058858 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069846269 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062918072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072084744 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075151761 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066344583 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064274187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065060333 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070109109 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072197094 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070890138 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066838857 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06440161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067804472 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069429783 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068886169 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06593935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066097607 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072207892 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064406431 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072926926 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06708976 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076901005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069867889 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061323302 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069279899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064887973 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073036669 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06138902 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064617183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066463645 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066988146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066274826 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069701378 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061170415 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073621389 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074600803 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067003875 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065792951 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066307705 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074214383 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068221869 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070787094 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069449755 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072083533 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076320003 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064551223 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068862951 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075677494 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064806441 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059513589 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071106931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064049618 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063774896 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064126631 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063831044 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068146215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073275547 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072025914 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.190291726 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070070031 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065966373 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066550122 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06279918 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072136654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069786698 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067904484 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074835446 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067736876 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067016512 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071039105 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066702446 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06724236 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068118295 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070439929 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068584484 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069485992 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065873782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069923831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066001168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064735583 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068754476 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067177595 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068001049 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072268843 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066791496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067713964 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070329785 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068307047 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067950084 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066884103 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066761401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070070016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068079402 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06764842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06953081 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061704145 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074661467 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066564714 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074148418 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067582161 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063885862 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073873623 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068840012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072174535 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067920079 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067065043 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068202265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066301482 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069336726 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073666409 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064478873 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078300682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074971927 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067552613 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070431343 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067982432 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068600819 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066026484 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06807225 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067590242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067549152 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066556814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071708554 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070262627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067378276 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068898239 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067833527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06737056 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068537559 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060524226 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065529379 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066493184 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067311755 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076120583 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066859025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06666118 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065888418 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067669997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066242994 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063370839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074191505 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074846057 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06747555 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073854149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066038256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06817266 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07769034 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061208459 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065351691 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064509889 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064874131 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074780179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067688765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076102997 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067595806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066632099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064085163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067926261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065571276 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060796004 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064267293 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071049718 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066332887 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066366665 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066377135 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068949157 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067603919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075913152 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066428919 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067432234 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067297806 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063668776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065176469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065518123 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06827478 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066200091 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063864165 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062684977 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065533099 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066619425 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066872256 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067603853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0670545 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072438835 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065327855 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068010139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068361717 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060029661 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.202860121 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066927254 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067298925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067066359 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071480182 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071250275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067082283 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075442481 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067343667 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067335489 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067871252 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064272866 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066692261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067506864 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067135125 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066168066 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068647377 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07550944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065160585 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070248979 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067400123 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06787637 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073438805 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067752922 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070007821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074450792 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067474602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069801268 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075259838 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071076668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070008686 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06770579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069217051 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072562099 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066008774 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074340678 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067811264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067686891 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069244319 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064657782 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066552268 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066414595 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066800231 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072928001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067856842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066756374 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066661838 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064070515 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068006987 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070129842 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075732012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069199975 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069849337 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062101578 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064470717 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067505592 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065311601 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068059632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069066142 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073408076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069598413 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067096932 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066793543 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076137751 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072843544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070869151 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065020803 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070689334 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06785263 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069783513 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068259132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067616602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06742998 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070963005 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06914884 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065828064 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074025056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069956375 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068115222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068061002 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067861819 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067472952 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0616735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066700222 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069050311 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071824204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069279605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066968023 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077182727 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064456416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067871268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069288585 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065268434 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070865666 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061334397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068607489 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067871509 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067516563 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062109494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065860566 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064484587 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069494531 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065969746 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061757904 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077697511 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075662361 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07014109 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066264523 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065002375 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061878769 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061555274 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066789751 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067518276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068203761 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076405994 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065699633 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065735911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061010758 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065539141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068884346 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069658914 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063359687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060910243 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065021954 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069636345 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071456647 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064167061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065377091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069351963 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068166077 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.197864415 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071115117 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064658696 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071316634 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080536845 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067638422 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068685394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073460075 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075392211 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066691943 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062503062 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068131522 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070066496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06804305 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068386084 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067762182 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082438142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070688707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066332976 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066608104 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070567284 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067105294 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075349714 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068526078 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067239891 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071930049 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069080163 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076193001 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069724769 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074920538 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069930381 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070093206 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065947039 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067766634 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065567618 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066365941 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068331365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06793295 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072108344 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074777677 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066638227 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077429288 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076740717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069359512 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064383706 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066378222 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067157286 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062986871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068999571 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064998463 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0649382 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065466234 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065341769 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068507391 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073036725 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068370585 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067648195 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066679252 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062016763 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069326242 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069444019 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067241926 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063590955 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067400215 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067800385 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071193348 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07060266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064857894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069351129 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068105921 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068245125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061984688 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073661889 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0657317 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069151425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066792448 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067184083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066886918 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070895157 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072033088 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06762702 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069299834 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070695658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068826382 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064201211 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063750166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072548434 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06462248 seconds)
  done (took 42.791676839 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104537357 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063300358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062814953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062420003 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073167559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063591475 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062231193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063481738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063782902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065206474 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061710031 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061885772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07080665 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077462346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073149432 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066734073 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061862561 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062816169 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061648907 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06275171 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070123547 seconds)
  done (took 2.744643855 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07633552 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0781087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076045374 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082756972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071386424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07042698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075967096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070621015 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078426685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072286982 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078096451 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070677923 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072570221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07242175 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072589472 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070355725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078574671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070863291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069998633 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075419429 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070592972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0754757 seconds)
  done (took 2.940070107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069842915 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067504671 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068728502 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06143549 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066172926 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061741589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06946738 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064027483 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069311986 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065952524 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065712963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065547776 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068034408 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061588359 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066669189 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06384511 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108621957 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069253568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066310734 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067451319 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062744297 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068169679 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061676664 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062133248 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065801007 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069493435 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067253533 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064307729 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066118227 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065134231 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066390082 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064104666 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067432352 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066715058 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065479047 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065946947 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06600061 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065782466 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061808901 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063908136 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067227521 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06180293 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066784399 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067171024 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063512393 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063744903 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067411682 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065812617 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061307474 seconds)
  done (took 4.569475972 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08014822 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110254897 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067470277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090731751 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079487438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07283634 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070009064 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090248827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063741205 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064872366 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081183558 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078796657 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06559061 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070436764 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072323682 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066014701 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066810353 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064813796 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069082414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065125565 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069491835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072370448 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079690886 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078173294 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069540014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064884626 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065160355 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069896181 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077439919 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070017636 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069629628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071007622 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07981232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067044905 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065043376 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067654725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081713852 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065695359 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067604869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063554079 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068763769 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069982901 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072230939 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082618316 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065761457 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071222954 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065932322 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062855778 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077913579 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06793018 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073241225 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079053772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069820375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065919548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070273477 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080708553 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065356879 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063912359 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069137854 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077940773 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063807065 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069365504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0786769 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068101424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073088086 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078922071 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070739758 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06959706 seconds)
  done (took 6.351177995 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077853724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096965964 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084513665 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083254695 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07596169 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077345337 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076302832 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075689697 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076082587 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080563807 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075777556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115920428 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071385276 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07865497 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076527838 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076150227 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076329205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076065959 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07584074 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075941086 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075970283 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083486181 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075872354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082941973 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080223238 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07121071 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07579969 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075236776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083819505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084148499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080234573 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076369338 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076161512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083301809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080577264 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075432974 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066346151 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075350703 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075916023 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0762848 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071704425 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083433039 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076194232 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070901281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075731947 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075390515 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083356203 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080078584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078059428 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080479684 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076389628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083273872 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075738605 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075931937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083586591 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085912369 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083576722 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083520569 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075828813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083115921 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083579749 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085593816 seconds)
  done (took 6.244815898 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086164922 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075493528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082237023 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061472027 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064368523 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072562834 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064399255 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064346908 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074279146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074579047 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076685418 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071909928 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074610162 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076793594 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072179177 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074825936 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072502039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072197329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074268874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072062737 seconds)
  done (took 2.794055454 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076754351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083832602 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067314414 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07267172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069701375 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071626212 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068708987 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069818426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067131766 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069957114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076364469 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075978398 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067146749 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072355018 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075702334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072134182 seconds)
  done (took 2.486874377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087186498 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073642066 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080401232 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06782623 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067520336 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062805094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065950011 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061867714 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063443582 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078477143 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066164841 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076415857 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066320229 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064846757 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063249142 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071394711 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063195147 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06338458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066011168 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078777245 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069689696 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064164853 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069499129 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06563204 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068260394 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070233717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065870861 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066075453 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062884611 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066200729 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068827624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069211886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06366242 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063636247 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064669528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06294761 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065841982 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066324298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071383419 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065859133 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063868868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067527422 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065424497 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066753455 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062220991 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066091055 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061937204 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067831928 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06360124 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067844533 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065698986 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067990698 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066038349 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072436963 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068801366 seconds)
  done (took 5.041649802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0816574 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069294731 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062204236 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063891189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069423357 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067348324 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069260153 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067206264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067468972 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064102075 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067447548 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069608452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067785145 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069153454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067151936 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069405935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061785645 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067196205 seconds)
  done (took 2.5600657 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074644423 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067339137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073254739 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066443402 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066211772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068731877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062390868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064683714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065072308 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066687459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066052177 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068730277 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064827532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068251191 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066279537 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065948253 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068602114 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064359159 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065723022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061876088 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0708993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06465782 seconds)
  done (took 2.804747461 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097675948 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084509197 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141268921 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078944865 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084443298 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071756764 seconds)
  done (took 1.896395022 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094239162 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103247822 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066662075 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069875515 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076439121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070246416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070074711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070605731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078837246 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07588742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070265598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078811571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077940648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077755532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075537795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075903627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070516167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070218094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065926688 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083867633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070520121 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078433773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069960625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069618386 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069990553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077527975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079008311 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076058908 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069429384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078500938 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075930728 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069907389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078516229 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075746676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069326936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078146665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070665179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083519507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075550128 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077493252 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068963662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076548792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078049025 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074344229 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078381187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070139136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075022507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070068454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070446074 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085852756 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075931938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077802967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078636954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079402563 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078568608 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085923961 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076450995 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077711604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075515816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076157167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077574048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075675715 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077775495 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076845415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075848606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077926246 seconds)
  done (took 6.350170155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107698423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06968346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070600091 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077863383 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07745607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070251198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070201933 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07019395 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070405711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06740461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10787747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070594671 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077755649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077856307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07099074 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070900746 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070342435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078098168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067091308 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086331875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069746268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07817221 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077831012 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077236601 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07682048 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076048678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070766901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070197114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070169223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070010385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075654551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070764093 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078240595 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068931337 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078305309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072157759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072022972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076958355 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071740065 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076610433 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077466255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083663528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070086746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069748997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07595572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070059261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069948089 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066767189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070292734 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067507268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076148661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075959198 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076483986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077495948 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07013414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070292889 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070486485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070137933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070727417 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075899318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078116739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069990974 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085604194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070216491 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070587605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078091179 seconds)
  done (took 6.272414445 seconds)
done (took 129.653826695 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191097575 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165314023 seconds)
  done (took 1.686422328 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072277079 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100194165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077734654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128434748 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067049065 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100423801 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099396199 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078268363 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065918085 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066161687 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066219966 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069454861 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131406023 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066750706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066282295 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069028959 seconds)
  done (took 2.669530132 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102542377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164323175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103010346 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065101387 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099834154 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072988295 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065904488 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076173185 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07133392 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065248023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073479993 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071102755 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064901097 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0707826 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071285736 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072964651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06569146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073156229 seconds)
  done (took 2.796985241 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103387168 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093145429 seconds)
  done (took 1.547941553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159167682 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105954026 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147307418 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352411992 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165166276 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14873809 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145827807 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145337824 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12601914 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139212591 seconds)
  done (took 2.983851103 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101465577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154505945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267220076 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12018737 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073392196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094595881 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119287895 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080398207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080267398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080505471 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080644782 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076915635 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100561419 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073933443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07391351 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076415317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103721852 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072933267 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074855637 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076841776 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100495372 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065866489 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073671732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073060129 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077684085 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077902892 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065861146 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065390919 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076747922 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074865676 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077393789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093662093 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077138824 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106663544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071182999 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107988805 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076883872 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073918207 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074551489 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073803222 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078555086 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078577014 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073620359 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076587168 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067420612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076977642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066239643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066132483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078082833 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066956439 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078143798 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077000701 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106794856 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06715187 seconds)
  done (took 6.000748468 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106496151 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106330093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072763392 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113186356 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103146854 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072461096 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102681585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096255738 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104253377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070267866 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068849065 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070839616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081705018 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083100581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114918203 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107172842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074278362 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071615862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106407262 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105292873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068675593 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097949444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091479299 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103741468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067641262 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070513077 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068203089 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070478306 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076936545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078181719 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070511493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081050339 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085496722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07805957 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067218239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068298373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068722756 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079457929 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079396381 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078974413 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077699059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068111014 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068485279 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069883439 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070110357 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067838665 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079456609 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080605667 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079118097 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069965911 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070304126 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068819268 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069659766 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080257748 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078255286 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080891793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079648976 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068454642 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068249234 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073146034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080715629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079669543 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079762032 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070135122 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078804081 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068953504 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0805229 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083791954 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068374213 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070207837 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068800628 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069844072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071229048 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079540908 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078666087 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069652893 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069916799 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068741155 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080438877 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078213933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068228102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076764994 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067630272 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068967228 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070121082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069892224 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077784974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080644459 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070273484 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068479733 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06978225 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068826406 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067401291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078251093 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081008485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079788507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077925487 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068874303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077770755 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077415809 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069141461 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078406808 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068137333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069055091 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068848971 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077962383 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075713575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078207033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.200444601 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069088302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07911986 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081804615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069337273 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079119759 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081126921 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079906574 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06937334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081291428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06943549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079711784 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069687647 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079819853 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069465496 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080858207 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06880335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068517004 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069618179 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080072934 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072515697 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068491963 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071046025 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070740254 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079486458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082701505 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071286007 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079006365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078724052 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070839912 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080131449 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069563727 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079167712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070517479 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070253884 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068321547 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082347843 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069008544 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069356213 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06996795 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080824737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069210803 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080197044 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077496842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068856416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081653685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081514152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077184952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08024952 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070706986 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069176688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069775958 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069902286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07956762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080465905 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070327522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069639168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078442996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079636124 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068326284 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078022334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079214585 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079070952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069644042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070516424 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081346729 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080922788 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078613705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078377603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078501928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069376499 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077745787 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078942622 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068248064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083788929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068933304 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083810194 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07914931 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077047781 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0791825 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080683306 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080573181 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080419785 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083332146 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068807682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068824029 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080151551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068986081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0699835 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078838114 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070259758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069767167 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083369312 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069040667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079871049 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068259839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079295539 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067551729 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07009479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082594187 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06805611 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068882569 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078243316 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06966107 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076951048 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079227841 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076745066 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067561944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069242361 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212208791 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081807206 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069813214 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069650069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071075572 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079414208 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077765604 seconds)
  done (took 18.733712783 seconds)
done (took 37.781138029 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213587657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155037262 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184510934 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119437485 seconds)
  done (took 2.118393449 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119819712 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102138522 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093936751 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065750301 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100475281 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065786943 seconds)
  done (took 1.933521512 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317027762 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212806075 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190292608 seconds)
  done (took 2.102717209 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205334472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191525688 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423719324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266221215 seconds)
  done (took 2.582944595 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145567767 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08943132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068241997 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084890712 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135794547 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162560831 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101806468 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126724951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079673135 seconds)
  done (took 2.432000193 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150970764 seconds)
done (took 12.715617291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.218369688 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104350084 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077107079 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082241485 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.232777867 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077626946 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.209355955 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113006858 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083634313 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096176379 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085483715 seconds)
    (12/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185073725 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079197576 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109168516 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200746517 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12754179 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164454047 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074680152 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204347153 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203286927 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074408277 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074283086 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095869552 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.157304409 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0818582 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193000537 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146138015 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093708985 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10484092 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.163184216 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218142983 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189825145 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196741062 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121881052 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071917901 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065812412 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156823635 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178217102 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090143923 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078289111 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072937483 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09424545 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075277606 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172956957 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18024257 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074842801 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074263071 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066209447 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157341569 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10203062 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075138636 seconds)
    (52/309) benchmarking ("sort", Int8, false)...
    done (took 0.14396025 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07350027 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092563832 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075436957 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.114261728 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092061444 seconds)
    (58/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064828867 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092447506 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.213237819 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070328493 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093647454 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076370114 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.190754256 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187590549 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094276702 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072332952 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068445372 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104761975 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104269217 seconds)
    (71/309) benchmarking ("sort", Float64, false)...
    done (took 0.132941886 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075168605 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066897554 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072872687 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073452631 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090986396 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.168322364 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153050302 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069857163 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182947974 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211431121 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.113377766 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.068462886 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177082193 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068628473 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054855259 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178572313 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157868066 seconds)
    (89/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077628288 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078086343 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066057348 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053004969 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066290662 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21214846 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096504853 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097133445 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203594591 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0762124 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089524081 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089332918 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063639639 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069306499 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069403922 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128299632 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152886552 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052035961 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073578319 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050393877 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060299863 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072171933 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0649609 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071465306 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146165384 seconds)
    (114/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154684573 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140897427 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052295418 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052406797 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05003764 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050071358 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064275394 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071568322 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07386536 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111495353 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120211963 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.133137774 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072358847 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073690612 seconds)
    (128/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087274276 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0602454 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071989784 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10857 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063911247 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090341794 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0704106 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124389589 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070714463 seconds)
    (137/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049975326 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073731405 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076635209 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05374016 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127046486 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072657984 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06647206 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070671849 seconds)
    (145/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079387647 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141934732 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050176835 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064090224 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071229432 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158783132 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063813011 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090416191 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051668216 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065066146 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07188016 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051079113 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096139848 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063531299 seconds)
    (159/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078512998 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069274567 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051142789 seconds)
    (162/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068533926 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122605745 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064580237 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064578727 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.395130777 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111554204 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064215996 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050054823 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.049672908 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050774307 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059786845 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064874211 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050240171 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064472469 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099644251 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137771656 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065321488 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050973759 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107628408 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147212255 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07070221 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051128045 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060112563 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098364548 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072379777 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06147907 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.062710079 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.171289811 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.049892518 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07392116 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049257828 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071626615 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050401349 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174789722 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078313904 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066924079 seconds)
    (198/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079089638 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064489533 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062716012 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06427521 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100020093 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064561321 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.47701415 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071035796 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078097941 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076655296 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114422285 seconds)
    (209/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053318969 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09546623 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056711989 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068080933 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052878737 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054328378 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146871426 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185320256 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053360663 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066305267 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.0920512 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06553254 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094160557 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052201729 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070890484 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066031463 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072987907 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078268634 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070917027 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065845574 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099844318 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073595365 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074136816 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1441822 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09006344 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135770075 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07239318 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186091085 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175593768 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053081759 seconds)
    (239/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090649083 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051743172 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052982829 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0854026 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075636601 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091098319 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075599046 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053317185 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088562939 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053574436 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200043471 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052472561 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05154039 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186530197 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066688375 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052973677 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067191472 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06683276 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088960833 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052989042 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067896282 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073631029 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12212433 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073558879 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07557106 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051692814 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069936372 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073038013 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068180429 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068464899 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091860649 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090482684 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06814915 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06880597 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113203802 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088782432 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07524965 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06444725 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 0.134689551 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052294891 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065286111 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052312579 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074076562 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05446558 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074157928 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052386211 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077897438 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091926418 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142532314 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051160977 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053935448 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109248263 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079736063 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072943483 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064027274 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066488708 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054558043 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152002426 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052482514 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066919793 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0738926 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094045688 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053142712 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066275101 seconds)
    (303/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063010732 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071871319 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051987823 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074995725 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06452813 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052514877 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053095156 seconds)
  done (took 31.101520611 seconds)
done (took 32.502981929 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091310861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096805421 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077568909 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096045624 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083311119 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078469624 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074434204 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080788167 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082053709 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083399781 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080123818 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055448335 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0757476 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075981847 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075706625 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093263823 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080453215 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074026173 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074304846 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065505597 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074523524 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066396358 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067965412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054893766 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079810749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072953345 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072952829 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075093142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066294752 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066324638 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070246696 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074282522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065782638 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079217169 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073839441 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073653248 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076261076 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077596304 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067912344 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066373098 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074981604 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06624572 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074040874 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074416133 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073085524 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07240674 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074399848 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078640303 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092213673 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069003117 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075802668 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077788142 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077683468 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074325639 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070740408 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074182352 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072100162 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093049365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074847353 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068560672 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075081304 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07510014 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072120526 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074285507 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074193373 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07616948 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076787757 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072297155 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075691789 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073495511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066014909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073927961 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070099352 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066921638 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077609412 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07812862 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065928615 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072508047 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073443075 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072197606 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065847007 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067673366 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067368702 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072395492 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068104015 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055307253 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069853128 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072630421 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065155779 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074834378 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073158429 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073212798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067559454 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077312852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065429814 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071979645 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066568096 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066669759 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067864573 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070054301 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066421602 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067610012 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075176633 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067237724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072517363 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079517608 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06627711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072702002 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064965468 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065103438 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080237283 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076015869 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066234121 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06819151 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065094437 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073306051 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064840203 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066127356 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065955231 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065968145 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072011599 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065904844 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067555469 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073463005 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079210478 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06623762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069122384 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067441287 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065885725 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071808374 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065663927 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065573957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067116342 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062241933 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067473959 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065625711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073200205 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068125897 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205174082 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06824857 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074514563 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071712526 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072232361 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072022056 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064420343 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06051027 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068385782 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068050509 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068257925 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066071615 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067011211 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065976833 seconds)
done (took 12.661525022 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070102569 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142555672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098388646 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096476671 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086764766 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067086265 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076586288 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102048051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068552219 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102312725 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08891241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086731023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115596635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064805237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066281178 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07052134 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06757059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082295857 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101987027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087278731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116314278 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065876316 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093364653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089875517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08915216 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104924565 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070141005 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070244225 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070361998 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094553177 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089346382 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070832148 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067280052 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099260208 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095526178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085314596 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066966447 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083927198 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067027101 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066911882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068547716 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100618287 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081266574 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081777949 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070565112 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070169738 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067398724 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084491769 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091149549 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080331875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087018901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102479589 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069455607 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065762167 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064863662 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086822177 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065497982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069839296 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06704586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070018853 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066467721 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070051972 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082406805 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080821592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070829355 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080124404 seconds)
  done (took 6.900526994 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088478424 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092569106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084255031 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083878452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066880561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066549684 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066973152 seconds)
  done (took 2.094527408 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069441495 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093425405 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090890102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090218636 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082558218 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088639607 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076166982 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067111009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08862307 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06831785 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089010509 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101017719 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070362007 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07436456 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091763051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066822994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091027931 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066744476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070127277 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09154885 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069147097 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095863723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070737347 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067501594 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081511035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067520557 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114753834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071918607 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068403213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069834581 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065198031 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107770098 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080571195 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074966829 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066686836 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082210429 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082026664 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06538615 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083666833 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075911662 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080640762 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067658918 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067986398 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065119628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071181053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077220622 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067954176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067277824 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069445883 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086998534 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067843312 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080425173 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070213077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072947257 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069080833 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073869687 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07716679 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068371962 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086801863 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06827288 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084320624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083408429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080860793 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083983735 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068643956 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080860863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080751237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069352535 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068831178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070646 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083267215 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065071855 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068922379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077399701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069355848 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090416828 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09052119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068575287 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08037735 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067751641 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067088297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06704135 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090725778 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072298631 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067297642 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071272733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069975309 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06544377 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066366109 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070873108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064697884 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068411529 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069766555 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070312985 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069659173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084269265 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069691976 seconds)
  done (took 8.917838483 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072348937 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071318746 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072218537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07113144 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071300064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070957249 seconds)
  done (took 1.992264519 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098026675 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070359898 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08121371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072200069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105357947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087305699 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087056742 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07904522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084229993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079138606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087617097 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08864301 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093574555 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072813884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087094483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072470948 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087936497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075542696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078452544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072902719 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087370003 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072911622 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073092065 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082296085 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076695814 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072074539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068051964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078885353 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078656336 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079715958 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072699874 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076639035 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071259586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078590082 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087130857 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071459199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07195088 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077757669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072634827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076618817 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088543128 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072990873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07478113 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077686711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078493931 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071612977 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077342309 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075473679 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086710325 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077819431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077936991 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071324873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075855551 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07800187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070814971 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078597328 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07753528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086898142 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072301245 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071013596 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069174631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076161829 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077752228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076625426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079728739 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077677662 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070961788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072961816 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072574079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071613656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077910447 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069479752 seconds)
  done (took 7.161107108 seconds)
done (took 28.59780022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54319941 seconds)
  done (took 2.072263317 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623931248 seconds)
  done (took 2.179706729 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.604301492 seconds)
  done (took 8.157016201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407157343 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526651802 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725575541 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132171998 seconds)
  done (took 3.38408889 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711051421 seconds)
  done (took 2.273059469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220766534 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202981001 seconds)
  done (took 1.991662639 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382843045 seconds)
  done (took 1.935977987 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150377818 seconds)
  done (took 2.707569386 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265017817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176125154 seconds)
  done (took 2.00121437 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.491488616 seconds)
  done (took 2.049236357 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.856755631 seconds)
  done (took 6.416062239 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217564881 seconds)
  done (took 1.824639504 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243520002 seconds)
  done (took 1.804337659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.726234596 seconds)
  done (took 3.288982721 seconds)
done (took 43.654567525 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084013659 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082258919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082060521 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079687786 seconds)
  done (took 1.876158559 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08176531 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074638425 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076736401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073960603 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077943025 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073513365 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075405563 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076415335 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073319587 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074506077 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074007109 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073212337 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076332203 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075161079 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072157411 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076274515 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076629136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073445898 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076272 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074246476 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071339891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075463854 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07562125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0729899 seconds)
  done (took 3.36442752 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081560551 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074157987 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076086139 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073059978 seconds)
  done (took 1.87954099 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08271953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095653739 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091136595 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078578025 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09355778 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088190504 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069523312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069781959 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071572843 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078249981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068968152 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097163432 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089512565 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078938112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080590243 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066985641 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068873401 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088932386 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078675321 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079878106 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070439176 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078668714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069026881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08950241 seconds)
  done (took 3.490084134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090932679 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107994802 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082595146 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090158344 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092072844 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066473066 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088867491 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092621122 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128101704 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066476103 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071119493 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066224963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07423581 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065677026 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08232609 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10870358 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112512106 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069340398 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097874839 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066012058 seconds)
  done (took 3.296654866 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077710807 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071104559 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066379348 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070218914 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079971785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0736058 seconds)
  done (took 2.017823463 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07246348 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07022004 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068756944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06821183 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073605794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068343044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067371135 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069033429 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068470852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068444688 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067517647 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067186562 seconds)
  done (took 2.400718325 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208944098 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06934056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069460604 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067189859 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071389282 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067310622 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081854115 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068729358 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093320805 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066950117 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067834128 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069275178 seconds)
  done (took 2.574561181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212782054 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076858959 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241800532 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151877506 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112521767 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11685742 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113222747 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115523908 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143391798 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102842746 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169910416 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168958825 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108648707 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139285186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08985189 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102467677 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155758047 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164959581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106100916 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168682587 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147608387 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127521285 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154043956 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103426602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110639793 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123296838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072712423 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080757937 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17258546 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134795017 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145364741 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112028911 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092988643 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178592964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173265704 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142965967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149460595 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085357388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106217249 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136428243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203673559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08979399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165275711 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111009968 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218297315 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135266012 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122604114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122288813 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106775429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09061498 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146501757 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186942207 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139397096 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08896194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127150087 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114539877 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116081828 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114905625 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18364072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164566097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130082844 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072958016 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109391897 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156548544 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135504917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111286609 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126576009 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092592403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136942372 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157033385 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121853998 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147115964 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118698872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089818382 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120649827 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141959373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129104005 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163480211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126318587 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073930766 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125201969 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102823957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081698409 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146690509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076227654 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179082429 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100808076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110872175 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126642373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110989764 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110990152 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161952562 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147184964 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104292968 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065999188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24620212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122901394 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147695994 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088228498 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110223785 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119800854 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078390651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138291056 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077557753 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125624778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077981851 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129968481 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13184871 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077841788 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12404399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10513062 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101817129 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133894363 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162978505 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089627618 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082354025 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17154795 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123614684 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104862853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145809285 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158789439 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102987754 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102587567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151010164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181236161 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090799109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164894172 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10774452 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084990661 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08896061 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125139381 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113169039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125195321 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082858648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119263605 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170882645 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075613829 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097042254 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135566182 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080219152 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082061978 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106837916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106795573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097356187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102111716 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104989888 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137761974 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124961596 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10674998 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125260286 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099143579 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316490002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090101827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10344589 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105925032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071061511 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138174938 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159869206 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080188328 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165036114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124695597 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118232343 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121477713 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084729926 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142576612 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080046214 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071902347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147603339 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112540315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110940378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153069606 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11774484 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128482414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120849014 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134558392 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132797156 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132150432 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106495582 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089020785 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114145963 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127581159 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074134936 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092137367 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081071387 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106067829 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09687931 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083673527 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142617384 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128622095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110368758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113074718 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098066042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149702927 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077492216 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129351028 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120520246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096702579 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155231037 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155872999 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133523921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100266866 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138794172 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070948689 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074018711 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088645858 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124437253 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083027342 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08366856 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258863437 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149989196 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13194561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138744441 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126152497 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122031242 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157816429 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071074785 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119111439 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149430736 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123188446 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10470951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091872596 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1002794 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145076916 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108428342 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184731487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11858776 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124929302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155218057 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101480261 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080346207 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105180415 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13728572 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104675332 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145614114 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100859411 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089258201 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111099278 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075095703 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099613019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128491182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119739625 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136043597 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116794876 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133839683 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078026427 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116963893 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122910557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123655717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064659986 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122225199 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163885609 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096124223 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120707398 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156310538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079560689 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135805352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177319075 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146664475 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085398855 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251840694 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122047837 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13161238 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122827692 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142243541 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110017911 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139741697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111802869 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088419338 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088846498 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098707057 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106648501 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096990858 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108256736 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115466578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09637379 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134131408 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104835012 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111335759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120139282 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100130173 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092277832 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097429702 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179618842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120118967 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173522705 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100753468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14678378 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165874692 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075417063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079401121 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079402759 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141946821 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084681588 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131651994 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108555556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118293949 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125030981 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146904587 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096492629 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069084207 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110248155 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134483914 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125918232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099158508 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104521638 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166059367 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102600641 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080255622 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115572159 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117572083 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104433579 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174034782 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062124163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106328328 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076805173 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080991159 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128660068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296158546 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081718959 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103912489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121653844 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113411292 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13061206 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102406917 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109705186 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127083052 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152236962 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129455541 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090913064 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113014747 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130726468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15979546 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10750279 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097796182 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175465469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155233939 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162414917 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089137179 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11564636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116058611 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110070032 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140448308 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084178732 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165830526 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08269911 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138280862 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10414336 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090008789 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13018792 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108958195 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08857931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149510744 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118197008 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083295892 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078286745 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118963108 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12093834 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109276503 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076225471 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141006516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133906128 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162910115 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08182997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108758078 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09784781 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079848283 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10674901 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102698447 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088037674 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100002738 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318541717 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090149083 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152695861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135356477 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113473569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137538333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103375107 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640728196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079048399 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155719478 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117818939 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176714431 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101231396 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120113642 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111876195 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124230754 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14657957 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105243522 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182919868 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133586535 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116825897 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080754008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103212881 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104951876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089032267 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108451877 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115641864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116348355 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094425703 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117370635 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125665131 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082398695 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0966671 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157815763 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117748113 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14494255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141735833 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086448983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118938412 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140045232 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080794895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122533409 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1549257 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107686808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100461702 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08172547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101497444 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159652254 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073662772 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160385882 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120538978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253162386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114902754 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115000169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132345894 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109256231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123683283 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094416305 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111732093 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114882986 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083012659 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078241806 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107170841 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113363406 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099587614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099201855 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100768615 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153342916 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073350784 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10001643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115928653 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145022492 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176857198 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089772802 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083402852 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119946873 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115323829 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113482039 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122170655 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079554119 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082649376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081818512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078454236 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10986356 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113712938 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115656305 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112928563 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164827685 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084124227 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231511756 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096743334 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105801908 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070930313 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079028641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096823707 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099220613 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109028822 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11093151 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161232175 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096715928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091015894 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092701463 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074836453 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084378679 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130290591 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111155449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120035568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100503287 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063094276 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108833738 seconds)
  done (took 59.688858166 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113077075 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083838639 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094763642 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144524869 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123629555 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204174497 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154416154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190222736 seconds)
  done (took 2.79962798 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071698238 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098454754 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104032576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084217966 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06763817 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069451533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233828327 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08464192 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066913856 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099686625 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079163156 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070087235 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430311784 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067040817 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067774136 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062790448 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068161819 seconds)
  done (took 3.491447553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393581331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613196505 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354092649 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073168606 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.440655934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087593614 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.119611435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132433251 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074864193 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53807873 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402770256 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127634865 seconds)
  done (took 18.03115442 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079595049 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072549013 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087311714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085461977 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073684953 seconds)
  done (took 2.067920477 seconds)
done (took 108.601690464 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084717356 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610608205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053788467 seconds)
  done (took 2.362027565 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086951133 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088892499 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089187127 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087816981 seconds)
  done (took 2.028147488 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077963757 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079164019 seconds)
  done (took 1.82671834 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234787692 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163792529 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096435346 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086398845 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080499244 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08083602 seconds)
  done (took 1.927724061 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076296864 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076214016 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073378549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077586592 seconds)
  done (took 1.972816361 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080686742 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055297395 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058017106 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059338825 seconds)
  done (took 1.92551766 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090839499 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080579912 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079577768 seconds)
  done (took 1.922415667 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10719992 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08653612 seconds)
  done (took 1.866821464 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084627107 seconds)
  done (took 1.760596864 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.105195504 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102268169 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133714758 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111939677 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140893367 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110532213 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086042788 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086949001 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077225599 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087897928 seconds)
  done (took 2.712846554 seconds)
done (took 22.557096833 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082244364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.459343694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360855318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090168269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66889657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357295029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970343309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093221151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115872981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068039163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085019755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647977879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958737125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414846065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944125558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319268378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650875985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068667446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068256431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068302025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954943982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06850558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068130202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068942923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648072146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372742208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068809868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318993127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068437598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070222089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355434273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069243189 seconds)
  done (took 16.28205132 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074032642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122089263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074205921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084991199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071587321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070686484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07204929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069170056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122113429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068178982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085901836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068218227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.087394567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06945785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089169436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069127522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069317192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069033877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069029419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069000041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088176361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068167596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069526789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069026665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081030118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068977714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068394777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068752619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070964214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071174043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069241841 seconds)
  done (took 4.128995953 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123038739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128803602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073628387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105215456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114679246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070751492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148221596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094158364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130327919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068752428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086334359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068699243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103248007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069068331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088854501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068808302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069656386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068768828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068572315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068535073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088083718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068022487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068649369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068970674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069183215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082545802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068905263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068770434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068718207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07059964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071729759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069059184 seconds)
  done (took 4.371513158 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076033543 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076262183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083834117 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085280806 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070662899 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07297991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073853535 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070087596 seconds)
  done (took 2.300310229 seconds)
done (took 28.766767903 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082584087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069678663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073736477 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084153547 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073710985 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079538825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067364514 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076159373 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072982688 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073365201 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075583595 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068253943 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071678113 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067700303 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07414779 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068190301 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080728749 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071924131 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079368467 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080390934 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070010272 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074329522 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075395633 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079741249 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080540992 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079969506 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077890914 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073144347 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069591798 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071369109 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077323848 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084647673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068615395 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080203069 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068060168 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068482256 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072078177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068501302 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080217594 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07718125 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07018719 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077353881 seconds)
  done (took 4.802409481 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093206042 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09392206 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085311229 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063010349 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067393561 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066482502 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089462404 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060409194 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059499305 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089515976 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056195593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060410718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065868715 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053528106 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060718917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057092525 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062343842 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055777835 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060923615 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060147703 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090029478 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05420741 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078755344 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064363388 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056188924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061690597 seconds)
  done (took 3.464697422 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078972083 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086974604 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090532128 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131930802 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107552985 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079980573 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079743516 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095982761 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08971403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067873622 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071276053 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093920165 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090477102 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07458638 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067581601 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086963105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083638228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069620946 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074326043 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09600272 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087447296 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087016181 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096973539 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085052227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067523099 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070673599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072394382 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083095355 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073318408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077622574 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072218361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072612606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070156723 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080038367 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07216339 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069817256 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093173297 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078919625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080293769 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069246862 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076594509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069770552 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094065564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127734047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067523427 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074885934 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.083171684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078259452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068458067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089674106 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080157015 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068173888 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07196684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068063544 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068738445 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082513212 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071224334 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070760646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079394508 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074712545 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094273018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073564085 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084744667 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068301136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076998541 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06796209 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070065373 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067873433 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097083461 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070783158 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112200617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069745693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069581233 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081321177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077145439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074989069 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070357285 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084497771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078876594 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072544916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077789918 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072231665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071665647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.0929647 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070784916 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071532205 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069200084 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074840783 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071382507 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070666348 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08250578 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067888388 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071505184 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085991128 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068093105 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069722666 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074226051 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07316113 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067967965 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079664563 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073022771 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0693516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078178507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067952839 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071386305 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081734401 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074960367 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067175209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072292501 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073695599 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069480844 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070102315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071086155 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070630378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077519645 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075238134 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072743073 seconds)
  done (took 10.826463703 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169737493 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158540663 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071546434 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15107461 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077299503 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079568951 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151957332 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09570102 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069065279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069211663 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069466027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111975255 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106542699 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11705296 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07986866 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068109837 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08523483 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115405826 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154372781 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147243579 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085450235 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077679749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070646599 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069268894 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071023584 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079260511 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085809123 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077578329 seconds)
  done (took 4.495628512 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084473839 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107001579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075192162 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092155931 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091262024 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06919701 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071957652 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069960306 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081652149 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078812062 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067896454 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073726644 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075413922 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071654947 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069785577 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075209064 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075486046 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069913532 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07188319 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0740871 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079611925 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092748895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072431106 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067903664 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073263489 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068066806 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06431629 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084700213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068662935 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096139456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066316775 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073487049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083410252 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069153829 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068550344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068340379 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068711269 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06821912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069744492 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066577627 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067122913 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057693213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067470048 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079288993 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075709508 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057211286 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073192368 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073421558 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074058823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06699257 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071019232 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071047521 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071667058 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07635664 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072543721 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073307023 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069527792 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07522111 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077952875 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068481155 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065454208 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066519975 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073289294 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066239048 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077524925 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073005593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066907343 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068165988 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070666032 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075325548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068658063 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072535397 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065645986 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07044878 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072623807 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070447865 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069803998 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066661844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068441711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069023189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056539576 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068743988 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054157074 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072147339 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066767239 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067014526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068461262 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073399983 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08042108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069622593 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073811204 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069761286 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068253154 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071305546 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060596402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071293131 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084441005 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08345478 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068534125 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066111171 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081884227 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073095285 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067356528 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056280335 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073879611 seconds)
  done (took 9.301629372 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094698929 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070333666 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086225437 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092098185 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088749606 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075714242 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077983601 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070574393 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084043927 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074420578 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077235231 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068327544 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079101722 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078178865 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07106834 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079436834 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072969449 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08568966 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08367427 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068749644 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076878795 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08210667 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091346469 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082999719 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081226912 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082767185 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091783655 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078734778 seconds)
  done (took 3.986369277 seconds)
done (took 38.566518099 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.78374777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951318239 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770669873 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.147176791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.965040069 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.788954312 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.856948442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766387266 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.877179281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.794376895 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.962786208 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.897259792 seconds)
done (took 65.265950928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.809818549 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.906859963 seconds)
    (2/2) benchmarking "String"...
    done (took 2.010745033 seconds)
  done (took 5.619880483 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.018169845 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.46046575 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.011568357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.765354973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.765254164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.105256624 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.570715531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.271454037 seconds)
  done (took 30.65276271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.934401114 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998526929 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.454167853 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.494511588 seconds)
  done (took 15.63907024 seconds)
done (took 63.644406575 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.764849397 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.79806828 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.771192145 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.746954905 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.827110652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.778103697 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.330516988 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.825536524 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.765245665 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.748096269 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.766599395 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.201450746 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.77506594 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.347332179 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.763816255 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762750376 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.829698878 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.270388943 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.921081673 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780052251 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.775957819 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.834053466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.766799935 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.77303267 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.818077185 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.764938128 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196773973 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.772901367 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.609313503 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.763045038 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.822013609 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.792112912 seconds)
  done (took 204.164730612 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767806974 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.649800149 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.747960969 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.774194207 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.123959634 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.94739905 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.880885571 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.218439843 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.770189262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.776265026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.947642795 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.765066457 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.948872465 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.709530874 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.793055356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.877763476 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.950278457 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.961760958 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.800108738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939244928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.791109631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.805268069 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.724591996 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.907501729 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766095843 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.875027731 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.785314992 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.7767149 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959335897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.914532391 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802181425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.783889102 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.959424859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.637225639 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.768989758 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.777376098 seconds)
  done (took 169.090442331 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.15458019 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.766781043 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.764975461 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765026643 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.771029455 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.764287624 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.888182365 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888019223 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.362716706 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.864932226 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.816711494 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59173983 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.764993254 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836396181 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.778005943 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.76945228 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.766663504 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.780093325 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.767492676 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789589933 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765657457 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891543293 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.775266605 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771753262 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.765859267 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7708062 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.141749891 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.91869101 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767027049 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768891095 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.007856759 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.769026359 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.764832987 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765517278 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677555345 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.766096577 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86331262 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768135279 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775733952 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.771185299 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.991443624 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769287559 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.77197068 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.772931934 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958824001 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.771367583 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893610234 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768414632 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278791839 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.769857231 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771947865 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.100456123 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.479127426 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.774817817 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774669251 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.77971684 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.773344813 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775086941 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.779951142 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.847292711 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.846308608 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.777539386 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.775589517 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778800793 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.772977913 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.772996424 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.804109743 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772082628 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.9279489 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.833944949 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.008048899 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.773054373 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894833443 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.774192952 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841435703 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867103039 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.769929456 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.775810954 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774172167 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.773826141 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.856488438 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.772297656 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.894434965 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.780660618 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.776483733 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.825825866 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.84569038 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.773341364 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676863331 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775006261 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.774859672 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.107874817 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840101782 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.771966642 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.774559927 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774216304 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.897138648 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894178366 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568078031 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.77667472 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.839962865 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.777626588 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.918832301 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776136782 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.971391011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.775100859 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.85847638 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776440946 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.774818829 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772563933 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.808734458 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.775370033 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.835798342 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.772705081 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.148395553 seconds)
  done (took 400.139069731 seconds)
done (took 777.315217262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.449794225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.392481903 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502650463 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.429481891 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.386658297 seconds)
  done (took 13.870788752 seconds)
done (took 15.587392757 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.862218463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.87044787 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798195401 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.86371621 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794870969 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.864369043 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.851222783 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.801448073 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832402077 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.800278546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835466147 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.80048472 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79054246 seconds)
  done (took 25.475986676 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016991366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.014059102 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.846608671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.013602281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821768784 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.00721011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.936093162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.931212625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931128179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792729013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789673194 seconds)
  done (took 22.813934843 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019337276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01994861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854155574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.022446388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825738277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.0209465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.944204012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932047112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.929954757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.793809193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789402634 seconds)
  done (took 22.864008621 seconds)
done (took 72.866949729 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.784970749 seconds)
  done (took 3.497574749 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.810658718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.967734673 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792111033 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.788387489 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.785358159 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.786062709 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.7894677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.787094003 seconds)
  done (took 16.221753876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.784414394 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.781214974 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.782601808 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.78500016 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.783438751 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783568144 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781989481 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78447041 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.781637075 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782158774 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.785481646 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.78226704 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785372939 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.784939131 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783849419 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784361796 seconds)
  done (took 30.252410776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.784567438 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781963623 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.782203715 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.783232541 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.783350543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.784884016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782676007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.782433757 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783676133 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.781310507 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788992678 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781572017 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783927682 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783448516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783338361 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783558986 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785340985 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.783485161 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.787954752 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.782515143 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.782674005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781894921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.784779496 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.784938121 seconds)
  done (took 44.53085655 seconds)
done (took 96.215283063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.691561246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.176701248 seconds)
  done (took 8.582554565 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787934852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.786597687 seconds)
  done (took 5.328389438 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.787712929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785975395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.788136271 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.786824491 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.787229101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.789553485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.786996277 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.787531327 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.787567965 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.786714311 seconds)
  done (took 19.589548174 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.786863874 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.788875255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.78494546 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.786908668 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787427457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.787197411 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.788673203 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786714023 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.787764265 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.785256462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.787245428 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793021933 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.787751536 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.785424012 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.787633014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784874429 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78911335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.784533391 seconds)
  done (took 33.890115951 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786686673 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.786590822 seconds)
  done (took 5.288996754 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.785456502 seconds)
    (2/7) benchmarking "second"...
    done (took 1.785483017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.786113114 seconds)
    (4/7) benchmarking "year"...
    done (took 1.78396966 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784926039 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.789380049 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.785759162 seconds)
  done (took 14.21725802 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787951644 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.954351314 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.027281963 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.427501051 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.78970208 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.792038639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.729500222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792504233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.794235284 seconds)
  done (took 19.812202791 seconds)
done (took 108.42468541 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.593211056 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.780675633 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15623081 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.873996325 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.799030108 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.12468803 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.787637489 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.091371584 seconds)
done (took 42.923976313 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.852085142 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.332080884 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.378963192 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.210778941 seconds)
  done (took 12.646643415 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.765927173 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.31956575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.825987082 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.441786331 seconds)
  done (took 20.309932224 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.157007952 seconds)
    (2/2) benchmarking "read"...
    done (took 2.137114861 seconds)
  done (took 6.017451841 seconds)
done (took 47.545094582 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789648851 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.789109465 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789138592 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.787167547 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.790157144 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.786917335 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.785572956 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.789058063 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.791216667 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.789165639 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.78888266 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.789906928 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.791315242 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794326916 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788936956 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786767974 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790676733 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.788794199 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787743154 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789650748 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.790062927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790814906 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.785879394 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.78771081 seconds)
  done (took 44.655450759 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.791754886 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.790143047 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.791270264 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.790967958 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.78878596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.795495171 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.790490994 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.789268552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.791685229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.790958301 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788074477 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.790328103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.790352396 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.787435849 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790725242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.789115387 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.794086117 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787365387 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79130749 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.789001687 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.790911821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788910894 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.790955133 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791634134 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.789085227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787752996 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791113045 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.790739484 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791564178 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.78855315 seconds)
  done (took 55.432199701 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79507891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801205741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791139263 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.791492166 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792352941 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.792054592 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.792307436 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.793407465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.79260184 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792987714 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.792354748 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.792405788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792819274 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.794279046 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.793151509 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791668679 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.792833796 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.792184062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.793337872 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.793144218 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.793284678 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.792340184 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.792380704 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.793018235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.795841147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.792672253 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.792781126 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.793234434 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.793492783 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793283333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.793910007 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.792745618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.794907561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791816645 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792210104 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.794584675 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.799028593 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.80127917 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794224622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.793534134 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.793022231 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.796474511 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.79367798 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.793718119 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.793804343 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.794740448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796540957 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.794695919 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.794342597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.794053568 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79407207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.794963552 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.797278931 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.795268889 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.794120702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.794708647 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.795073582 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.796671091 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.796347588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.795450502 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.794971044 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.795171095 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794726471 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796438144 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.795196089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.794162442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.795536365 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79446283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795104319 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.798008995 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.796917092 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.797399143 seconds)
  done (took 130.914425866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795415122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796462984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793923419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793666512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794382837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79604113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795803133 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797891254 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794613301 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796225605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796669792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793878183 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794275696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797458264 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796300874 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794707318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795743914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793059729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.797812474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79742411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796530231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793499947 seconds)
  done (took 41.227012068 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796831473 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798793457 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793014188 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796435464 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796062592 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798228919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797464566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795682452 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79790909 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795471158 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794711237 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799065303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796052235 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79348765 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79500855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794147702 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798051799 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796741973 seconds)
  done (took 34.0596469 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.795464621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795739182 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.798650916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794503916 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796327491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798188217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796367036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.798718542 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.799687399 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796650861 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.800711901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798641158 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.799355772 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796659156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798778716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79629445 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.800855995 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795573575 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799666685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795785802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.797859615 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801363481 seconds)
  done (took 41.278396871 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798727447 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798163532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797384739 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798692144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796890792 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800114054 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797830498 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.797564083 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.798228036 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799250078 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796114535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798541527 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.795136897 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797176372 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.798890349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79690655 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.799277306 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797791397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799322747 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797475765 seconds)
  done (took 37.688109433 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800728559 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799844274 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800807275 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800374571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799926802 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800237818 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801099858 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.802209049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801835501 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801777503 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802157136 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801841539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801360831 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804179445 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800803447 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801358912 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802072897 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801740078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801203606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801015035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804627496 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805387438 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804166758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802613334 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802249387 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803646261 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803864315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803325506 seconds)
  done (took 52.186003029 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799377281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799934649 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799737587 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.801346894 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.79989426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799609119 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.798783064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.80023684 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802775303 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80186671 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.802259614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.80207495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802415102 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.803651031 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80458757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801341414 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802556337 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.800248034 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801061353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798340645 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.803237385 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80337447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801750806 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800865384 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799589229 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.803765491 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800206289 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804293632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800126802 seconds)
  done (took 55.768748441 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824066545 seconds)
    (2/2) benchmarking "in"...
    done (took 1.820914242 seconds)
  done (took 5.375954021 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.800889135 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80333537 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.802685314 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802279494 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.801510155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803999472 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805561028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801328851 seconds)
  done (took 16.154039738 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.804080345 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.803378025 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.804845558 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.803322033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806248017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.80678194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811483434 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.804501839 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.80584247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.805906623 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.812199117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813628628 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807287332 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805249718 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806304596 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806156022 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.806756977 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.805604307 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.804919042 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.8047675 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806021037 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808419805 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809222913 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.803418538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.806910395 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.816158392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.809771588 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.807069182 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80616231 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.810352492 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.80552005 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.802621415 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.806049049 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.808390831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.806300358 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.806819907 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814705527 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806560637 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.811708068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807675138 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806215343 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80274075 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807564552 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.808641124 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809323121 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806564764 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.808132387 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.803780822 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806313461 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.811172906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813107987 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807081788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804559725 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810089595 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808978659 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813256471 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.80769853 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.81041063 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.817148539 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.815894127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820579656 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.817632436 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809464981 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.808726091 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818106077 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.832141934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813754589 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.805354951 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.806872937 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.808218534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.81356288 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819447383 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.819060076 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807804828 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807707315 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.809191906 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80858746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808111074 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815337088 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812410635 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.809290426 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.809937277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817403111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831675234 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.808206576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.809978581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.810187272 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.809186969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.811532629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819007323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.810966471 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.808907353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.8091867 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809785448 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.810962353 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810591815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.809550953 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810303694 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806143263 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.811089806 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810512323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814842428 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.818164322 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810998846 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81126922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.816616754 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.812176732 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81197875 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.817997111 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.811672993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810347218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810821727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.816952915 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.807488342 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81315512 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.818675543 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.810980436 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812609328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.811769357 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.811677489 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821687116 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.841450805 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.811217215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.811684983 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.817007444 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.824138148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812163971 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814578105 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.81225062 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.808634553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.810793056 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813280602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.813691734 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.812459242 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813620175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814024316 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.80918424 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811765689 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.812095776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.813892886 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.815591769 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.812421116 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.814710669 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.815614302 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.813332314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.814359046 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.81831913 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.812604077 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813787162 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.81504139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.810539451 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812169374 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.815264125 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.815112786 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.813983059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813666463 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.813242102 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813461332 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811666088 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.814255144 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814514434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.813192943 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818506796 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.814471391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.820272274 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813048128 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.811598807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.814363736 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.811776807 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.812598782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.815630391 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.813826184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.816221269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.822379469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.813831674 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.814736151 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.816090861 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814083825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81545315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814005663 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816691463 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823673126 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.815009243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.820052738 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.815726015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813543869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814487629 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.815950979 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.814609891 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813255792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.817938797 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824066903 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827759212 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823060364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.816609247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.819416443 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.816737942 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818509415 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.81979868 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.816133184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.81539 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813466535 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814947339 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816566455 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.8158203 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.816103519 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814492456 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.816760392 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.816238027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815482474 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814841217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817301469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818331291 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.813037143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81694169 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816250659 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815619582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.812720216 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.81541091 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.817754922 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.817499853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816348433 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.821643025 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.813316808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818773311 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817346348 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816495218 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814564714 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.815788218 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819305358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.818962224 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822844892 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818462732 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818027004 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823937603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.817565801 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.819049367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.819718961 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.819048676 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.814465353 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.821560034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.826245873 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.818238557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817571667 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.818795871 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81871724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818338316 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.824884664 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.815487032 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.818480861 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.8163157 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.821090555 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.814414227 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.819865264 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819309148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818113914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821079898 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816870873 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.81961513 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820312438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818072715 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818384911 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818818504 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820701252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828669588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.821289597 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.818272456 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.820002166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.819856142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.82583284 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819082934 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.819219424 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819402737 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830477515 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.830045516 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825168396 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.82029263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817954061 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823708917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820881071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.827533543 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81995002 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821281255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81996912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.820450408 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.818912434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823386125 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.819173353 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821522554 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.820732681 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.823681778 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.821534252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823473944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.820420643 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.822804348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821653317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.821733417 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820597451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.822666989 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.824156262 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.819935692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821112757 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827531268 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820799568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821287648 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819149738 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820948437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.822157342 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.82221562 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.821661578 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824576275 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830238272 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.823519851 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.831534069 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822596974 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829575957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.821846908 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823672331 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.82995885 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.819253904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.822012104 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822776536 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.820805673 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830285971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.823761557 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.824050226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.826324323 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824029187 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.822613508 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.822398405 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.824311033 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.822036684 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823157516 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829418205 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823180336 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826914849 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823239284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819051885 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.824178172 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.822149541 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.823353842 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82872404 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.823248816 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.823164508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.823056406 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.82405415 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.824023272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.823645193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.823648167 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820016757 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822633449 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829106291 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.826360944 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829069922 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.823630535 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.830208345 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824683234 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830095795 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.82325722 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.822922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.822976895 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.823770801 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.826232836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.823619892 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.825809095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.825307889 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.825964298 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826320216 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.826680585 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.826809586 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.825463866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.824055764 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824054665 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837495911 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850561771 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.826251901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829219762 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821558584 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.8282596 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.830941569 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.825429229 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822980911 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826407057 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835159993 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832972303 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.826186867 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824468376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82509304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825149769 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.825402937 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.824697199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.82541666 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.82420896 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824413855 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.826940003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829854906 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824191959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.826835694 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827763506 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.825206985 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.835015003 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.826863878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.827017581 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826400889 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.825806279 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826400862 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826352495 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827289978 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827079596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82611481 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.82767338 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835404574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.83546534 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830501425 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825354892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.825177016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.826290694 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.82813606 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826879759 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825550063 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826349163 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.827412147 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827808816 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.828022955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.826722874 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826260038 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.826717733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827977154 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829891209 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.834430061 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825307729 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.822952595 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.827212377 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826647368 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826135586 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.828035848 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835641377 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828531032 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837924752 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837603107 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831722779 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827637289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829977956 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83577584 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.828542083 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.828993231 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.82898594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.828453124 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.828752148 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.83102084 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829056123 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834173256 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.829576245 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.827854871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834937953 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.829368579 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.829159424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.830846544 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832715894 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829506928 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.826070912 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.828193302 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.82812356 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834707455 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.831224542 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828342581 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831065577 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827931833 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.82957203 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.833186376 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828335088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.82986615 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.825934422 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.83053387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830069849 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829286456 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.826517343 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.831556501 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.830189965 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.831735077 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.836807477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.825974967 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831865198 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.829518094 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.829009714 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829876384 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829775207 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.825860212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827874828 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831149332 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.828841123 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831140944 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.831700062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.828806747 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.8322423 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.831278831 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829861903 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833784887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.839392728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839253603 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827043911 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830552739 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831035081 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.832668453 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830722876 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.83382123 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831767634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833277486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829855298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831060417 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.834003275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834417565 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847257943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.832002061 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831739015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.831017085 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837477849 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.8317724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.829638864 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.831203018 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834176 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.837086395 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841451108 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831928921 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836698328 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830222111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833530432 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.83696617 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.83511447 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840317028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.83472798 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832774266 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.836599159 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.839034552 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.851945205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836584873 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845672682 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.869222841 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.837364273 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834932229 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833129257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829976126 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.832154884 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.831786925 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.831908875 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.833041604 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832221518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834419272 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.835450513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841339045 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.835611287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.833067611 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.832449176 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834823641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.838550222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.831323564 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.834079306 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.834048537 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.834344157 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.83636743 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.834625286 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.834689384 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845929756 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844594402 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834877118 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.835057389 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.832955601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836536136 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.837020756 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845532865 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.843704412 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833963188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834447786 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.836716657 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835736518 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.833751035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.834974545 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.834048991 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833259464 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.832313043 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.846322691 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844068593 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.839934554 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.833496549 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835441902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834054418 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836568622 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835394548 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834159049 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.83712563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.83453209 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839222662 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.834141058 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.835076486 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.837173971 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.842844339 seconds)
  done (took 1087.889459125 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832722058 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832011825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83269862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831859287 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832463753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832694463 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832256508 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83377752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.833264321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833702258 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834727805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834647542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832678039 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834019259 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833334771 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832744569 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835640025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834116975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832983567 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833213959 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833981426 seconds)
  done (took 40.263337398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836940016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833669221 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834967661 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836094666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833808054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836652274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833612011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836023367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836802018 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832312444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836808052 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836838485 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.835237593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833712993 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834733746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835684816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.837469041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835139477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.83547069 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834035623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838027703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834668026 seconds)
  done (took 42.141345018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.840304702 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.837889939 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.836074644 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.834409304 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.838256695 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.836656955 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838460773 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.838166814 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837722668 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.838597809 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.838754202 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838491025 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846168771 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.844556215 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.839883172 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.839372493 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982869944 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.839851787 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838334521 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.839762036 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.836522028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844920208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.83498023 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.83564971 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.839499991 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840425942 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.842169453 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.840660178 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.840065957 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.840402305 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842535569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839981731 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.840275165 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.843201218 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.839732638 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841718807 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.843133407 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.841191103 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837757702 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.840442918 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.850578768 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.861851035 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.84014582 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845829465 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.840375144 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.840965593 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843580032 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.849744686 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.838791619 seconds)
  done (took 92.109035633 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838998974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.84147365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.837593697 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840966648 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841221066 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83900916 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.841650708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839904521 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.838275843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.838703502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.840189104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.837566762 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837426482 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.841391622 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840717625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840101201 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838260953 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837932949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.837743721 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.83862651 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.840644525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840291137 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.84129686 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.838483962 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840863413 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840022841 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839847759 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.839983523 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.83785586 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.839074133 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840305425 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843491381 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.842265528 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.841215026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840520121 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.844414694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.844168452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.839935382 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842054027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.839518204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.841556714 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.84136329 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.841089377 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84142529 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.839535831 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.839622082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840592387 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.840182369 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.841793901 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841384167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841650177 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.839138243 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843886192 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.840340584 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843124822 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.842218152 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840143918 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.839048011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844048021 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.839975498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.841276429 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843537156 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.842349688 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.843394277 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.843568675 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.841708732 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.840001607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.842966898 seconds)
  done (took 126.93315703 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844212809 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.844657707 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843909336 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84318113 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844718266 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.844730574 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844238152 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843885713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843075246 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844712862 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84483227 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843572502 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.844557245 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843618144 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845049375 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84487008 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845923529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843213996 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845214698 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844689381 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846257724 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847434681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.845815815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.847667543 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844231481 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844807277 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845345636 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848175817 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846155445 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846086675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.847700601 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846965367 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846569666 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846151618 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845914881 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.8455494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844746677 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847943824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.847973108 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.846284561 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846595401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846698091 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846704205 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.846416338 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846981079 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847036811 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84729301 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847060542 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846455141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846360473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.848854999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846669935 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847405124 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847675388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.847769448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847154573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846894726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.8465863 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847935033 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.847411856 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848491581 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.848166723 seconds)
  done (took 116.226152466 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84514374 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846163341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.844394551 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.843733942 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847755213 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8453341 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847718466 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.846215416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846812038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.84684705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848332747 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843101298 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846900187 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847586912 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847484027 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847325681 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844398926 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845114874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847609371 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844830616 seconds)
  done (took 38.696694646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.844479318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847780409 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.845169311 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847162816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.847179759 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.84540299 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.847394858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848173593 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844504108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846164023 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848273324 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848686557 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846466459 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844705201 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847274289 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845666205 seconds)
  done (took 31.320908974 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84529089 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.846421202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.849283436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849410057 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.846146686 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.843818362 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.848198362 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.845624613 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.845646718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.847979822 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.849406388 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848896403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.848881673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.849780372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844652786 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849534841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.846827055 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.844797011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84984297 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.851649866 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.846569669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.845061624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.850329807 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.849384176 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.846853331 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.848654888 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.84837116 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.848243963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.846020208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849621252 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.847143784 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847710124 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.848388225 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.848304682 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.852058018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.845481397 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.851033571 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.85021532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849054853 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.852611965 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.851563306 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.847910922 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.852216879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.850615374 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.847261927 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.850457316 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.84765076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.847761628 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849470545 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.847769027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.850780806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852027434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.851385175 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.851010858 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.851466734 seconds)
  done (took 103.449738547 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853927497 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849996254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.850248177 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850256857 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853559971 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.849801835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.851066799 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.849613187 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848910173 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852087758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849275252 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.852203775 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851301149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851525993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849957034 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849422388 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.84821101 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848322159 seconds)
  done (took 35.088468327 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850405427 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.851116742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.85256504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849030522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.849531381 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.852840259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850096573 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.85266579 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852724851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.849937457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849963146 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.853725258 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852644528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.854901049 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849985877 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850783638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.854326846 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85378611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850725368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85175149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855006943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855154555 seconds)
  done (took 42.524418214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.851106575 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.853340341 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.869860934 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.875679207 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.874309537 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.889684827 seconds)
  done (took 12.99355394 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850063328 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855378523 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852564376 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854066336 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85511402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852231889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85008512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851112842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853608017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851252879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850014831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854881205 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854268616 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850185962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85550224 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854046437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851620503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852525709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852378002 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854401853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852406121 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856679228 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851146885 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85133268 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851964105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851805122 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854656765 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853147414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851254108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855497911 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855776697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853136223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856687256 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853977029 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856412494 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857712396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853425585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856633252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855709758 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851098652 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855027093 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854698498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856420194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85241325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854334179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853849379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85172223 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854011235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85386537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856479427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85592036 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854172202 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857902936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856799009 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856965839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857283942 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852154615 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853472175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855343718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854257026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853560518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856760326 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853072735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853729595 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858208558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854269922 seconds)
  done (took 124.145133829 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855139673 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853134258 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85362393 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853073048 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854936128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853526637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85544867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85409719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854403236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853413556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857567226 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854826861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855930367 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853356619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853940198 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85338703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854135759 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854350599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855358383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860012258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857194326 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854578056 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854364252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854738477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856096317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859157877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856262691 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857400807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8546258 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855896559 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855814361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855077468 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857319915 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856863441 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856370011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855607019 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856887257 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855713774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853621128 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857700337 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857428158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857703599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855873743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856377041 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855666658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856658516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858021586 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856393733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856397641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856098923 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856397879 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857154357 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858300376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855923204 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856650382 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856854608 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856178651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856008025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856842853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861350969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856149164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856439273 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860997798 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855893609 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857588616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856376136 seconds)
  done (took 124.282732004 seconds)
done (took 2534.521374311 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.911654962 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.963022657 seconds)
  done (took 15.660349574 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02457339 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.976437633 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859113916 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.90496315 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.857995228 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.879029659 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.87555858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857705761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.860017272 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.861412687 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.861511333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.048066053 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.881319163 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.857898509 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.861775371 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.953041933 seconds)
  done (took 52.219378054 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.861788421 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.864093023 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.873036135 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.863487113 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.864704224 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.876590736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.896483662 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.868157885 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.905020148 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.879729302 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946817362 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.871766543 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.860892164 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.915112484 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.877314629 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.878509196 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.958707089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.940645832 seconds)
  done (took 35.790975305 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940246017 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.878792537 seconds)
  done (took 10.615711368 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.872955196 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.869218757 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.85144358 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.851043988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.865081006 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.912042896 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.878996914 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.891542618 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867831584 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.907534545 seconds)
  done (took 70.560925234 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.862814581 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.859483173 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.863906929 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.860207075 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.853475321 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.850441386 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858294705 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.85660841 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.536633065 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.892571097 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.868794429 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.864768771 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.863509393 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861512387 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.856027421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.881688704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.0037825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.86011806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.860605788 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.869856304 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.867824146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.931293082 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875068096 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.859684071 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.889122514 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542516716 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.86207725 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863770632 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.967945425 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.857557055 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.861157793 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.860783181 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.862022959 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238087766 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.142245174 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.858114453 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.865575652 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.86729253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.859576241 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.993691288 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.862817175 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.868646403 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.77729394 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.116833356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.970399007 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.906996704 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.230524995 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.86289795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.858093963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891758553 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.862399728 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864315528 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.873854524 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.372914002 seconds)
  done (took 132.120063951 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.857103887 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.117752944 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011782165 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857405254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142506828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060667107 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852838396 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906523478 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856874242 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.086095381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019825843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966444247 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85675417 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.858402615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85776819 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853330217 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024518423 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934259103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861689208 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.857234236 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891922165 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111077804 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987752457 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861269352 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.880080157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075677115 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985012758 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969500849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.14959558 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86140803 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927154976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.8586472 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.860722395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858423249 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020022658 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960813773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949025435 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.865627194 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86091939 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857125492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.535584024 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059518446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958764925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.009034375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111490803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071236952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648486153 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.859607714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.598624178 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025281958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097457001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.096617098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.990197232 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864287712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.117720006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859855634 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861131811 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094352249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094797859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.966550533 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865201284 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.857844563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858975952 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10765317 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861598688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957967545 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867631465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860490964 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957983281 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966332605 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.096108106 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078280854 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894304795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.16713302 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.342421523 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112385862 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931941146 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095505311 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866710984 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859014735 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95189366 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.710063541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024451963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118359161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11741093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903974407 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.593292555 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.86365339 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.095466098 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08914246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.166984138 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10820296 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.019204465 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.043442975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864895423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860271785 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.113572529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001410436 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863515173 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.224534303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100644141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.443289856 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895535173 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177610242 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000368624 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867824768 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.509150214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867161211 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.091033177 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909841892 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866744476 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863869361 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.086623994 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.943765699 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864025862 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.486815926 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.929838315 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870549149 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102866894 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.865480441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129744331 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864858338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107047789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.462134084 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897805107 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039055546 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109932699 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.864464047 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128066005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111127833 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981517442 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088916376 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.495385957 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863552667 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156902476 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867359279 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866162984 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039177465 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.867847107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.015899361 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869079455 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.200974383 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889375431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023902057 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865645529 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.125011641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896484057 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922259959 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869718583 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992250831 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871577516 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.883204215 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020661106 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866989459 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863470679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.398356863 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.866449883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025022136 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10480239 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888072516 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94424974 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.537200563 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86587731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958631444 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892861485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.219575217 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.867546272 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.024239134 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.86827216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.395487973 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.867770832 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.112868736 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051509811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869636021 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864551424 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.78153567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869067773 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869053699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030303756 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.38222632 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865560601 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076410911 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869573929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999254915 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.873411601 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940033341 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223603821 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868052548 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.86915918 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.866463977 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.870640507 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.86825962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080774037 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898574023 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.396088918 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008680551 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1421569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.189167198 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.126548913 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915698546 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871560829 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.115894218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870579297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.934135862 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.867997872 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893658956 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106570089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868446699 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079409388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156040443 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.806116132 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921675769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.869571577 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872631231 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.831917462 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02366846 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965512952 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87033024 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.871049104 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99143263 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999058781 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.087949398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871970123 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.004785132 seconds)
  done (took 902.807409044 seconds)
done (took 1221.560400871 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873834506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874585036 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.854654076 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.868772908 seconds)
  done (took 29.274114426 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.875128674 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.873004382 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.874047245 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.871229352 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.877489282 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.877059739 seconds)
  done (took 13.048124669 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.928458691 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.863511578 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869079899 seconds)
  done (took 21.462015084 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.943515348 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284845598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.982807852 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.319767112 seconds)
  done (took 10.334599007 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.87694435 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.875549234 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.875939837 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.875021394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.879446006 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.876533449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.879820145 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.880366568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.878535029 seconds)
  done (took 18.701819892 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.272545576 seconds)
done (took 98.897669159 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.149490747 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.269127806 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.675268311 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.962872679 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.941997346 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.01989767 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.948962468 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.789320502 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.008060918 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.519709459 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.145315326 seconds)
    (12/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.17064801 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.910613211 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.879919589 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.873899141 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.171696039 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.857228083 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.583954154 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.864144783 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 4.026618183 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.32608341 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.989822208 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.86678773 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.007127381 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.034256466 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.046700151 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.873256741 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662610609 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.880175895 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.453504437 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860209213 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873194316 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.051415667 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.933572967 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983119601 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209650013 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.973587046 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.501003114 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.174927028 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.897312905 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.960432222 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.562415598 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.986052265 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.337648154 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.065689528 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.007594497 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.978824516 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113168265 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.131176459 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147540741 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.018169875 seconds)
    (52/309) benchmarking ("sort", Int8, false)...
    done (took 4.846535027 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.144134286 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.891743055 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123608602 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.17175045 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.022878214 seconds)
    (58/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.982513631 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.779030716 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.862197709 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.933651999 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.250577564 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.900142399 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.230557632 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.234776365 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.194465391 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938931361 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.215246643 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442787169 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.233453339 seconds)
    (71/309) benchmarking ("sort", Float64, false)...
    done (took 5.6324037 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.830052722 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.047933881 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.963794687 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.906729582 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798671393 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.023687407 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.513114945 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.019067655 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.047955463 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.362182108 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.077682139 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.54262812 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877839479 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.878619028 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.417221701 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.363446338 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.113941595 seconds)
    (89/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.894903756 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.968114972 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.961907197 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.762982228 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.959534715 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.56401849 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.881314273 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.007234162 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.673683167 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.958414194 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.921551137 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.094505209 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.960102867 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.002870388 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.00049621 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.972459693 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17483606 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.859161306 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.889087947 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171596343 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050923574 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.101780638 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.279314722 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.020080701 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.882058322 seconds)
    (114/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.090138367 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.016699163 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.034786113 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.347386505 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.068257535 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.193458109 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.886194912 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.951309293 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.671183754 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.080187915 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.688119664 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.430153467 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.903905883 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.878410957 seconds)
    (128/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.030801412 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.492144477 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.132240545 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.387217006 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.208716196 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.692490769 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.106942593 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.95643916 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.133719578 seconds)
    (137/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978280048 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.969996229 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.569063731 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.869328602 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.328150588 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.900237323 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.960614915 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.981707177 seconds)
    (145/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394574899 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.884082679 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.983565586 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.099869252 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.905761134 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.0697194 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.018639676 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.575023265 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.362146918 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.877976193 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.986552929 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.223699766 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.014844066 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.048053601 seconds)
    (159/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.750862133 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911489392 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.866372835 seconds)
    (162/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.79871834 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.909404104 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.179034108 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.518338571 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878659984 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.093714532 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.261563057 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.252049992 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.976512686 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.26583736 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.055344654 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.273864709 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.066497343 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.126881619 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.03081123 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.880595774 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.981875729 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183009262 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870975005 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.973589292 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.90594668 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21613184 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.053233894 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.033053546 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.913590125 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.086877135 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.096180854 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245846697 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.806891008 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.882330476 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.138073285 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.907866697 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.972698472 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.88369207 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.394743611 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.954039454 seconds)
    (198/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.803413376 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.501569265 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.044191234 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216591762 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.959802623 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.884474766 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.531730681 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.948683426 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.737648021 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.08650656 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.868067141 seconds)
    (209/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.125205902 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.290523047 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.865446062 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.209296208 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.042055353 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.022416619 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.883643658 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.860857125 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.179721138 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.83814132 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.961749995 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.211025273 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.096786486 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07892008 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.021149453 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.965773978 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903696461 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.027521981 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.361139776 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.053016938 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.118900655 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.99797346 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.908666789 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.882818358 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.867473086 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.021668166 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.102098381 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.881207875 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.113475095 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.409238899 seconds)
    (239/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.017726105 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171091018 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.871518146 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.831367584 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.908645449 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.88495969 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.042797214 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.873476506 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900693559 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.21220701 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.502077222 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.055040624 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.266217441 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.881339237 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.969752811 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.468822263 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.270139503 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.211378915 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.898296432 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.262891393 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.005070042 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.999575331 seconds)
    (261/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.887576162 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.975094251 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.254855493 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.9572044 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.956158284 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.996091329 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.888295249 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.559097206 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.004529503 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.112467811 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.884559222 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.043141608 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.197246868 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.811423982 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976586891 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969285932 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 5.644815143 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.986514446 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004876165 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.872377448 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.670436996 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.894696271 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.906668721 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035330755 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.898087117 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.537055022 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.915168653 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.314614551 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.363651091 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.872622084 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.621730027 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930709256 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.178084426 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127129958 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.870794601 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.964243076 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.811651789 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.890805198 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.951892867 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.987158199 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4525743 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.179211779 seconds)
    (303/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.176615591 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.905305183 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.320542421 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.898282632 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.872732928 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.24251695 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.273338408 seconds)
  done (took 1023.751929096 seconds)
done (took 1025.622005896 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.923449639 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916245018 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.898765562 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.921168566 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.012306205 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929509778 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908702403 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.900542032 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946384341 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.948675969 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.899366423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.928220161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.901690167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.902443955 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.899068737 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912731483 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.210057677 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.92432021 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.917283436 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909080401 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.918793097 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.901001039 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.949489723 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.931788731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.903779362 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.902310333 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.907785302 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.921535632 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.013149139 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.905717206 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.902548027 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.913987911 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.210601379 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923522345 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896236646 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.922858795 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.912716603 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.911791601 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.903538803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.933913953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351675738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.90669819 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.903516304 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.901468185 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.901046915 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.905046461 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.906223953 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.909068812 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917490406 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917107159 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.350919847 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.922954304 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.906938657 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900252577 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.912604726 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.904961921 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.910075064 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919165325 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.923916606 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919285514 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.202434264 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.929850685 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.904318549 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.919925677 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911200345 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.38617375 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902381997 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.907204972 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354014947 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.911852085 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.387221548 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.918806908 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.905054267 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.917690919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.934725893 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.211157098 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922300522 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.901236694 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.911700662 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.902860643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.911512846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918816335 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.9083923 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902307364 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918070262 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.936158319 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912005687 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.905850616 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913324167 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.924756691 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.911881856 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.915850561 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.906608013 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899178456 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913438351 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911448084 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90863982 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.908921043 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.910930099 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914962851 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352478803 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925788908 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.900513308 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.901676153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.903941449 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.920628682 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351226975 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.911078315 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925731872 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.952809434 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.907905236 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.205397631 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.934417191 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920942557 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915172548 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.910210417 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.901037609 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206835044 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376161745 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.924089524 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.906352545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.905584713 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922243208 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.909239151 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.903605221 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.215744602 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.931070176 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922530577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.028237579 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.914876371 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.93882796 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.907270285 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.910824129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.937199238 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922107708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.938349984 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.90938302 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923346137 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.92438361 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.903683041 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.917592972 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916243082 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.907497812 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.915737296 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.901451955 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.940032773 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921342176 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919888316 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.928518574 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.029420828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.904150009 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.206397742 seconds)
done (took 299.2433496 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977017273 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.902018977 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.004655675 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90176821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.984246468 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.99001313 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.902411642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.900982072 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.897899876 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.275496891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.900864337 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.899842919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.899232821 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.901801021 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.986673293 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904576375 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.899667959 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.240027164 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907387558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.9842148 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.906407935 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.903935707 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.904145878 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.278637971 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.904743977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.903779594 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.976729452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.903752403 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.243730465 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.897100068 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.900134862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.244135328 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.997617893 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.922929529 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.915291084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.912582086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.987390917 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.912088668 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.986994567 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.986418971 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.004478579 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.945271445 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900513633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904311567 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.908750754 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.90643696 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903281147 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.931737275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.901764072 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.903482535 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.23946206 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.915239019 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.91073243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.902008489 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.902878664 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.927755363 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.905589793 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907479174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.999253402 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.907808365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.969186437 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.280647032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.27697427 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90587233 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.903466565 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.90311922 seconds)
  done (took 186.645720356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.973649156 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.981084181 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.974592103 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90987009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.956067907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.974949486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.911010239 seconds)
  done (took 15.511647516 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.91334461 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904476803 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.955938346 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.957148184 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.90691656 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.056725458 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906410264 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.917805455 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.905205255 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.959371152 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.9101998 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907231588 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.91357327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.900035031 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.954919206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918410969 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.023430708 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.908547862 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.909218124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.058197257 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913773671 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.903508295 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.961305049 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.919906627 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.908069667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.914837088 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.491742313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909252953 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905819003 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.907907752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905312814 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.950507075 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909556638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.904206237 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90575965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.023763682 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.908189658 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905414734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.907765614 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.902349596 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.908354052 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.909638247 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.907988998 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.906160753 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.910731461 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.933332139 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907332838 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.908913266 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.911203802 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909662735 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.959339841 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908953678 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.906034189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.905190346 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.963813999 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915247789 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.909403092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.907944957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909807141 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906208568 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.060813427 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.957808647 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.909451314 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.956931642 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910142027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911486433 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.909540152 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.909442313 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006652322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.909539613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958677093 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.907420499 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067865228 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.935269206 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910101628 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.913526854 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.911680883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909681959 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.90212253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916380438 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.907817777 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.912206354 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.918781621 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908484368 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906973683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.020920756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.017890253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.906624811 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.924565646 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.918203247 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.905263599 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.964706623 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.911170239 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.90900575 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966577079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.025669296 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.964845182 seconds)
  done (took 209.648223707 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.916397273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.919004364 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.911719401 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926694282 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.911346454 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.91136778 seconds)
  done (took 13.33257031 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.913904679 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.913563282 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.913023939 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.910772863 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.912694506 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.913727792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.912986975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915137217 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.916381931 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.90981611 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.911885566 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.91158735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.912899424 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.911465074 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.911711725 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.910816499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.911091723 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.909630867 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.908672708 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911236829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.068967421 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.912087462 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912462133 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.912859784 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.916346198 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.910818597 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.919124197 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.913897032 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.912285379 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.919258189 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.91385083 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.912822008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.911475475 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.920769244 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.917599189 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.914979167 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917642032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.913383267 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.91193138 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.91449397 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.914289538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9132116 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.91271446 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.9152814 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.916313924 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.920850209 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.919858941 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.922234481 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.913866544 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.915389626 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913476811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.914161116 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.91497809 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.915432711 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.915514028 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918489109 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.918687767 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915680622 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.914671 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915590482 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.91616105 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.914874151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915092055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918322788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.912833496 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.914285582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.914818892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917459094 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915404464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.915353451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.912823769 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.910265023 seconds)
  done (took 140.825614247 seconds)
done (took 567.807190497 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.005958721 seconds)
  done (took 8.843952574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.092229105 seconds)
  done (took 9.022182014 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.540756925 seconds)
  done (took 10.382179484 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916408575 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.933127512 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.906868647 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.914748755 seconds)
  done (took 29.523159462 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969619409 seconds)
  done (took 8.81105522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.923081785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.903376693 seconds)
  done (took 15.70147906 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9246173 seconds)
  done (took 8.768905926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.008710048 seconds)
  done (took 8.851317838 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.920227519 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.944847396 seconds)
  done (took 15.718910517 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.893994687 seconds)
  done (took 8.734182725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.68444104 seconds)
  done (took 11.530210729 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.913014949 seconds)
  done (took 8.768545595 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.910039234 seconds)
  done (took 8.748198974 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.167481117 seconds)
  done (took 10.007374789 seconds)
done (took 165.249457051 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.916747562 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.909313685 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.904086633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.902841829 seconds)
  done (took 29.473471731 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.94986048 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.945115547 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.946454166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.957505689 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.94928586 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.945964732 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.93849391 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.937851222 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.956522714 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.947975323 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.946681576 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.952421078 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.944457713 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.937089269 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.946210285 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.946969458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958049922 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.945584469 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.936048213 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.947254033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.909360972 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.954154162 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.946114265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.911598463 seconds)
  done (took 48.49706247 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.108827424 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990886494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.06048359 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961021677 seconds)
  done (took 9.95421028 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.958408519 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.973145689 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.973191898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.009766639 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.031613603 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.96815512 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.939520053 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.928087268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.915099173 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.961567576 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.032279636 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.964926328 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.056412049 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.903432105 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.090812938 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.905358601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.907169963 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.956397677 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.007118044 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.018651124 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.905216065 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.957021657 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.963044957 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.951664194 seconds)
  done (took 49.111381473 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.902219392 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.910296827 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.912972232 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.901849013 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.901169687 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.902604708 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909521019 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.904577142 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.924579701 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.903239321 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902096669 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.901440999 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.901318779 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.903550496 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901810792 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.914053007 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.917083745 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.90254928 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.90652098 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.908956726 seconds)
  done (took 39.959053091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.894709937 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.752921819 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.249835294 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.153166815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.898663232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.897098982 seconds)
  done (took 31.675689709 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916440596 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.911236357 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.904334017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.963367889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.044236899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.915428254 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.907000126 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.917513611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949812518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969449299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.923957297 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.930412823 seconds)
  done (took 25.082435565 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.914123985 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.898103353 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.899568321 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.915145703 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.914690655 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.913117944 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.912073076 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899007007 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.914746273 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.922133325 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.912941044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.917706372 seconds)
  done (took 44.767909376 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989833717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.792265483 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970048928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671051702 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371591642 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109933752 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463246238 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241184741 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.905614885 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1757105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010680786 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01899934 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170759199 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914605643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931057384 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.401153173 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215154537 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15204014 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941585126 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688425852 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961676968 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425063326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.761239235 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97508496 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129645186 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.049713081 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.176469963 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87555825 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050183543 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951196056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927035179 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916516799 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193412397 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298983346 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014411686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929932296 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608267815 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.631649841 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.906022471 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.702070454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.739543481 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037280117 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925261884 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916373344 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852058642 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434031843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298476437 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.92336924 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.628908987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918078948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930341224 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005283731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.920432807 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.733624984 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873175087 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195093911 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.914101486 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924868537 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490263361 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.040010565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47347514 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.888880278 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.114185147 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69711783 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318713912 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.065875115 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.921129179 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919422912 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853236441 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699372219 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970566361 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514106867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.935796088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56974657 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222587831 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.061677415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859260787 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201968488 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.715562352 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.891897295 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147926153 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875545724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855330533 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.77519267 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856420743 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195324219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95548671 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.569073378 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956128497 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.256234891 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930293443 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937985037 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928090226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144119486 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.485118954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917528431 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.783146153 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06339486 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939828759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258801695 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856233426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.920411644 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176107068 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.132937329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.165888379 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.437864802 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083398899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920962182 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.99700723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.846782918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965697426 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.197628091 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979457519 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045094523 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977776827 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877924709 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221482108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946913261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.083150689 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024005252 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047331335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.249685312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205864851 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985326806 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924238434 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922130037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.767713996 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475933847 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.191540465 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.925124297 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422262504 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968849277 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.922572393 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858855822 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.545546659 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041101547 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.890723799 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147136268 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.881351223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233350257 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858725939 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069364746 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035612691 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.141529727 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.569112184 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.991636827 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180869117 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4162308 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.192184895 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969143987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940883201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011691617 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946322294 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.357243404 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215314977 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.927877242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.92623487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.761170621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926768581 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921319259 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.929790406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724165528 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207246457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946684677 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923481873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.815747718 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.936786924 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991195988 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928466767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934418904 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469471101 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6709611 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.934530147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.551133813 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148842372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934872456 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.70086527 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037538589 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.009989492 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197818039 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984862177 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.858501013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.637339746 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.618319072 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925877129 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862815024 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924517322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936899109 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93716754 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.309069493 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207005613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965060788 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.824287973 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.970062692 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935695846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.930864781 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926013387 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.472523777 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.05834142 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492086511 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972948799 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064024382 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.941740232 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861364943 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930245583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930124674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925735674 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.894022112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979834576 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.706768068 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313894691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184535704 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5763611 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942791246 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.840706773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.98249259 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.005862998 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.820784474 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868003578 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.005110543 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93671149 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.939510086 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.726717019 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.634638185 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494278312 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241555033 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23487026 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367603703 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.420314493 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232423879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269695992 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16382865 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459696708 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990180388 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273844705 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869748454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01305343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.574304545 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273345968 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938972164 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155067482 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316306799 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.739722425 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095839719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141593392 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964672431 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.84268475 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891833032 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.133596856 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07131605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.796905807 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126906393 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266271853 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675372991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.017635046 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.928087941 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624907745 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008499829 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.646750865 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290411265 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452285057 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.972637319 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40593303 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92999564 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375169204 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281855045 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.247113993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.051683283 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866142349 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942992288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941788714 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.932451751 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.928190764 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.78784169 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.180826908 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941634341 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166192259 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.206946973 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225022026 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.835770525 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.93689113 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931730377 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255498425 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.732616366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094872858 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.395952705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.459973917 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934334488 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863309266 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863752619 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.622134936 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940940074 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906576421 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152377276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.111797515 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920592936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433566115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171445357 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185642175 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.946839782 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.208653065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206832788 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667963348 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960758291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.031838699 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675283702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.036919834 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.199880379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168455095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731895501 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161725683 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.980833704 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.746625257 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.931718452 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146818244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200472235 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909516913 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159336456 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652448632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.978986954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246681381 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987270731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8956094 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08037499 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.126301718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943242834 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017299001 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943100897 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.944106605 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945243565 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979188958 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900131961 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.054001263 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948233514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019566697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.06077828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.468863647 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.936101448 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211422568 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294586272 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258381681 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991134445 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934219997 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931635414 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869675633 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06539864 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380185142 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208067608 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064103812 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.251319652 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957020241 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.660617782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318060284 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175909649 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2096046 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.830334275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936094093 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959319709 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.202433867 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944202682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.147064088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164640574 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248492728 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404435614 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.185214679 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30306565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208379869 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304661941 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937064733 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526812774 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.996285241 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632384232 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.972433037 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948482162 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196634371 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947503323 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324887543 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95683449 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.133532942 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.453986541 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731512624 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224356597 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.91533352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992913172 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213561892 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321905939 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247561693 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007159805 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945719188 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.650523769 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072867447 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.794582794 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.205763835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936794901 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148668076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643732683 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946622466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216695627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24401487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.93460354 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.796819745 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942432631 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947375852 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159814502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203140937 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18805258 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946008903 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94593988 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.753548021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214739038 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993580413 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869962646 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.940114311 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035602201 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185315788 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958058363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.456239588 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.649663062 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232238079 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.854950519 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95850143 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450666925 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308543913 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264172674 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.485835574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162305291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494292546 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.902221033 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241315576 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.943904283 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456761614 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243982472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.942369455 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.566700422 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977952378 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.214013489 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257021518 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.028959829 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722402371 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.907659911 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160858519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54227996 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87787144 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938109927 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.002971715 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937830673 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.071007817 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950463265 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.801045409 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882465221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.68699451 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433501852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943052221 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.929556248 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.73089741 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5848766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974297348 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085169396 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950195594 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.651642502 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.234245187 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198297936 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.563271463 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.946540236 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.944952307 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940660783 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8704703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135896242 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.322147816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239980328 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.411583825 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.979649518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946591314 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.158385667 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154768932 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.913159642 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078566294 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43952314 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978721009 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.673661267 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.623360952 seconds)
  done (took 1715.549034591 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947211657 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.952135659 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.979276219 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.966769493 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982823674 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977947185 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.988915521 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983591121 seconds)
  done (took 57.652270397 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.943438466 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.141917178 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.953168261 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.941606661 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.950997639 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.942296904 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.113489703 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.961272077 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.951071246 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953968401 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.943885128 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.945940666 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.253958617 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.96705526 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.942807092 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.927445104 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950007443 seconds)
  done (took 75.690407231 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.942931991 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.154394024 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.979068629 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.965367304 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.886600005 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.954521655 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.898823732 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.954828126 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.943366641 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.166980308 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.266185823 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.966489242 seconds)
  done (took 90.953477409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.944950504 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.941093165 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939902606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.938613934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.94084696 seconds)
  done (took 11.575272343 seconds)
done (took 2231.810082376 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.184841726 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.16091098 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.169336185 seconds)
  done (took 6.195364289 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.08751251 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.136752185 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255605178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.261391166 seconds)
  done (took 10.616239442 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.231156338 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.333580312 seconds)
  done (took 6.433628402 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.350918553 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.954880754 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.339720257 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.93815569 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.936986352 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936429806 seconds)
  done (took 22.687848615 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.940788806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.946191543 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.943821162 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.94705296 seconds)
  done (took 9.6487489 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924335126 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.670708493 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.92441046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.936721114 seconds)
  done (took 21.327557906 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691446508 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.341415171 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.684958941 seconds)
  done (took 9.588116764 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.450571077 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.846750746 seconds)
  done (took 9.168109031 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.224530244 seconds)
  done (took 4.105081696 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.982018713 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.221464576 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474933622 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.477904065 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.56709881 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.806360041 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.269373773 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.197265861 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.365170376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.392468742 seconds)
  done (took 25.636490006 seconds)
done (took 141.100855101 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.328898813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.318224354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.158628289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.30059141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.19293764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.155031421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.166690647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.284392186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.798757573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.792430858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.34023199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.209090027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.108590937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.316474058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.108326484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.186928963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.170357223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.345115412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.99183263 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.189395866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.169737414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.92686416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.17703717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.935797237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.1705935 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.107210673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.504501523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.186583701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.14808927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.509471772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.107679774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.348127877 seconds)
  done (took 173.636806319 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.693336842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951339141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950279837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949930484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.124377599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954291355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950027132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950976932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.227941218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.208643307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.951074428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.113340352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951884726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95016155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952740696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950817448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.392205692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.762197448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.967355583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.971741926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976271089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.06013469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.975126523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.106892113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.414901987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97504373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.951196177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.97382749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956793275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940266394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962932127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.95201709 seconds)
  done (took 210.056222556 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.953793283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.95153241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951328585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953823472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.951961942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953862465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.953582602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.952074766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.629539227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.625990022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958943131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.956627578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957318756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95132441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957724153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953717544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.957381585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959431507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.952058739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958395197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958522133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.651199483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.956546676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.654946959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.958192009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95931648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.953209175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.963169648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.96685199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967520248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966620987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.953697002 seconds)
  done (took 223.249588132 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.150425951 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961679798 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.963412788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.901404839 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.962278343 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961930003 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.917525181 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159256429 seconds)
  done (took 19.886010544 seconds)
done (took 628.722100932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.451589834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.291793105 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.138711462 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.987647927 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.241044 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.020915228 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.983309453 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.048560482 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.709026274 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.049035168 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.625143195 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.996960187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717937748 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.001683309 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.106470649 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.038613556 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.525612833 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.612797275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.159131746 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.050243267 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.154398343 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.920995477 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.059861938 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.7295614 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733794503 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.958369059 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.162605561 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.529520989 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.989628071 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.145096363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.752630239 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.385650585 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.992823606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.98221665 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.040652755 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.018287059 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.338859397 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.988858069 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102452036 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.724956574 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.041825853 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.596949962 seconds)
  done (took 106.994239978 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.952243627 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.95257578 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951617075 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.95343506 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.952609052 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.953154628 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.952090625 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.95173414 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.953523365 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.951585558 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952906272 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.954054635 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.951476885 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.953969466 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.952119649 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.952115133 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.952499522 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.956660215 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.953259585 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.951595039 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.952854212 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.951902517 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.96717122 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.951947865 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.953120758 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953657144 seconds)
  done (took 52.684803737 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.96730887 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.132874743 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.223194787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.984475654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.96607654 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.971184633 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.985310703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.971328 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.970923899 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.970388319 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.0766467 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.971121818 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983471441 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.218603709 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.976794431 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.966912199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.965599886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.966459566 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.136779279 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981541112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985225777 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.973115921 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.985726782 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.979215276 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.969613085 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969168055 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.968978606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.427975563 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.971521849 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.075064556 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.008989328 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984098328 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.392177503 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.233977526 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.014293989 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.972437285 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968578919 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.076523292 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.970986338 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.966467997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.984668547 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.971145506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.219572917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.460288301 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.977874425 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.969445453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.450240759 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.084996131 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.005958183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977355236 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.22364066 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.981295376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.970388774 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.968270054 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.003488674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.978116424 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968555431 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.291828124 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.977317549 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.986662004 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.972447152 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.968812264 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144492098 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.976132014 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.132406521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.976354071 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.975111848 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.966943119 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.225852285 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.980692607 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.472459615 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978353662 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.967728378 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07496961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.132724278 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467381367 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.978103427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147253096 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.410058109 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991995976 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.97747826 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.419365523 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997380254 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.974548958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.969124662 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972232476 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.970334771 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.01472701 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.983470293 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.39466633 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.475427017 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.306323441 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.993086251 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.984970936 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.971096078 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291612398 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.974647157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.969542833 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.218809744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.478567505 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.979971203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.977984642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.456179329 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981412587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.989078032 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.978386356 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.230240724 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.982728386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.018160796 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972924361 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.975463464 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.974920188 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.989165878 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.97808065 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971744734 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.451711263 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.093897455 seconds)
  done (took 243.907327407 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.965823642 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.96112944 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.964314051 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.963473021 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.963326824 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.972787658 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.963890979 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.966359247 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.970848158 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.96442158 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.964921581 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.963485697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.965096745 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.978381573 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.005909892 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.972440897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.577569705 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.966912237 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.965614413 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.977148887 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.614190876 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.967573671 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.966406095 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.963059635 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.9652939 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.963585975 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.974493846 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.003132781 seconds)
  done (took 170.309465235 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.973427353 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085217352 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985856912 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.998722121 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.979667973 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.969076153 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.993654777 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.985497809 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.977179589 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.969305891 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.972132886 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.032687459 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982027603 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070964345 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.998934105 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.002938587 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.074752412 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.976407758 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.971184902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971366934 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999939234 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.964854259 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.034894162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.092532809 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.984188654 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087257752 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.971757481 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.973572369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972273004 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.089932937 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.981029237 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.032027401 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.996719808 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.988858369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090752088 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.083240916 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.073379656 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.998857131 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.973970111 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.970492389 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.970629744 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.961650134 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087146287 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.985572052 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.974191628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.078710767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.98570688 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.975189883 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.981550753 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.971842109 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.986657691 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.990630252 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038779958 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.102220441 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.998857153 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.997581944 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.999223375 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.237925157 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.981084499 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071969072 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961221352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.093863227 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.98741222 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.961663959 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.974608541 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977613424 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.000771819 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.004470209 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.075084315 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.977169739 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.073181064 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.004966078 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.981048273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.973726811 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.976630607 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092004344 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.086278185 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.004907446 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.007561167 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.003310097 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.969218373 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.97368578 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963512822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.99089799 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.97664696 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090380745 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08652527 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.979386637 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975529269 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.977067644 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.9751358 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.998880542 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.098831402 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003580194 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.071531193 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.038994081 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.04311033 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.982159673 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987441026 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.978529928 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037520658 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.984469718 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.987939574 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.286943018 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.043510383 seconds)
  done (took 213.327986669 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.450423421 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026957619 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.033579435 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.287403788 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399991308 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.852840835 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.019900221 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.023866592 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.049292128 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.206833739 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.106557708 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.049705251 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.005422116 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.995225789 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.021006231 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.043437241 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.031640002 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.359169127 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.146852805 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.14700153 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.999408714 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.332690614 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.34383208 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.429233434 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.059367922 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.375631 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.702606408 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.162827301 seconds)
  done (took 64.570361579 seconds)
done (took 853.68185302 seconds)
SAVING RESULT...
DONE!
