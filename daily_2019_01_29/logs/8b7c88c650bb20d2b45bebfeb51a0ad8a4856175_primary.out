cset: moving following pidspec: 19253
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.398411913 seconds)
loading group "string"... done (took 0.580803228 seconds)
loading group "linalg"... done (took 7.431011313 seconds)
loading group "parallel"... done (took 0.170570357 seconds)
loading group "find"... done (took 1.16169692 seconds)
loading group "tuple"... done (took 2.084016723 seconds)
loading group "dates"... done (took 1.311338696 seconds)
loading group "micro"... done (took 0.242313374 seconds)
loading group "io"... done (took 0.973092019 seconds)
loading group "scalar"... done (took 41.412169294 seconds)
loading group "sparse"... done (took 13.489381719 seconds)
loading group "broadcast"... done (took 1.058132997 seconds)
loading group "union"... done (took 14.738208281 seconds)
loading group "simd"... done (took 5.066607281 seconds)
loading group "random"... done (took 10.095350483 seconds)
loading group "problem"... done (took 1.986537576 seconds)
loading group "array"... done (took 22.880448322 seconds)
loading group "misc"... done (took 2.035415266 seconds)
loading group "sort"... done (took 3.439908987 seconds)
loading group "collection"... done (took 19.842422377 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575570048 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159416031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152024688 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149626528 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19784539 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143185689 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157299755 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098110597 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986376336 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177179788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151964645 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523577216 seconds)
done (took 5.205607325 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217614365 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095040392 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104472865 seconds)
  done (took 0.881502667 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078719458 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14599192 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097742823 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079833588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095378161 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078899847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096010786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093604926 seconds)
  done (took 1.371935 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086000472 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097887029 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082205402 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097032129 seconds)
  done (took 1.044394316 seconds)
done (took 4.288021711 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.725647932 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277845984 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204126711 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465776239 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202472382 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220077151 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680979478 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339734365 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252316191 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10108761 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.136431497 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393761406 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137505742 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68477341 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092216062 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124797206 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178688087 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457839322 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083631784 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111180508 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117801344 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143424564 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129524665 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090729812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186874369 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081500516 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193139492 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110068522 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080799312 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277450607 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201872314 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691576434 seconds)
  done (took 10.897777973 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110258683 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13373726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097928616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137669513 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134365094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099341552 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085214723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096805017 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122876224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1744225 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117016265 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138201808 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095805497 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083474186 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115255066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247058031 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121057588 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099635887 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100275134 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088859721 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137530695 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113076074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109085601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092812621 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165289101 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222243018 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113564483 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126481123 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097499511 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112612857 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143978986 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144903369 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095448379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081557359 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172124984 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124044116 seconds)
  done (took 5.149652158 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.096363749 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190334982 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122942327 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16926809 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081545826 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144577962 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095278434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114553161 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258243427 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114366434 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493848729 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143800045 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101725455 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100947066 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083703382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098062993 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.461376729 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160274648 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137137233 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098681174 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106752597 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101504357 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373735209 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081872759 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097102095 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083228616 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088133909 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168716471 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083537263 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20779754 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123547186 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084576106 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137794629 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21526544 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111412896 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136755804 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098009219 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080463916 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179915346 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107746584 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081116719 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123644513 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135223722 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136881714 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09868231 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082897869 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200234086 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098044228 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097795345 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158924128 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.926832866 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181411344 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108385281 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099175961 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310673726 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100950803 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099506096 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078440093 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275151961 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.198235918 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102001601 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098998846 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082249553 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098368222 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083421082 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383975852 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099135945 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.725339428 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085037702 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109764328 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08369194 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098879604 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076588408 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108394391 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105558148 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099352087 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098794461 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083040942 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098615374 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079734844 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101734022 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108771767 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.220835153 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081563757 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100755336 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078729351 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118599179 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128734521 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084930071 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098169979 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132138885 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085406417 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099388424 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137163584 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08283426 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11189513 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10169544 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143584665 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082324199 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140191762 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094708472 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126751478 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100996203 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114622855 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11453365 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101329936 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172446524 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079343573 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097873019 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078741594 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097877238 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081497378 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101602737 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082890094 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113481033 seconds)
  done (took 22.888469184 seconds)
done (took 40.71436568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332464273 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103380988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101703538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105039131 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100618515 seconds)
  done (took 1.506103367 seconds)
done (took 2.242711427 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163215247 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115415101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094515137 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1276742 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078984533 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133855428 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.131781974 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094332373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132257559 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09375834 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127032581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078610125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093488532 seconds)
  done (took 2.223518861 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094381649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114916001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08337661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11087626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07765821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111810944 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093893201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117704964 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108109415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085331278 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093125651 seconds)
  done (took 1.817993486 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09328705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112941029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083435042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111065616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077374529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109549009 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093400397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116040679 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108754546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085410011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092975353 seconds)
  done (took 1.812483069 seconds)
done (took 6.575686746 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089822763 seconds)
  done (took 0.817801863 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926232957 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.718050912 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112502674 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151735745 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324502848 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176887053 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.481214615 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127605696 seconds)
  done (took 10.956375608 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.14650883 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086262868 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100445543 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08655423 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104595728 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087248121 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103128281 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099947558 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085686588 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102047382 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083755294 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10018245 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10026799 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085019495 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102901499 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083113416 seconds)
  done (took 2.354820103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119478231 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119231227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107134696 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109541954 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087959804 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106647056 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107470216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08883783 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102451544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104873478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091797072 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106656794 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104361966 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081365398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10633358 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107688568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087003262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106748579 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108282517 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091464733 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10725778 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096684703 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088423912 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106495789 seconds)
  done (took 3.285495446 seconds)
done (took 18.146303204 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156674217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108640909 seconds)
  done (took 0.999481767 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094642319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113408001 seconds)
  done (took 0.947233539 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096584391 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095463032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120797865 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109517106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079786972 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097195602 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119730217 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081500932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096905416 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098148448 seconds)
  done (took 1.738661641 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081146884 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110049611 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100684631 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095472178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10617225 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095961931 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089670603 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099561263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110876477 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078031229 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102097419 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115588803 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086386409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11519357 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105754905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100087356 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084228691 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098635431 seconds)
  done (took 2.516201932 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07955935 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098059475 seconds)
  done (took 0.920307467 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080353743 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094222747 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081362917 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09660288 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095113782 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077244018 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094741477 seconds)
  done (took 1.362025427 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.439908718 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137139881 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26280228 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102688743 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104900666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296935645 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098194544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08603076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103786814 seconds)
  done (took 2.431688838 seconds)
done (took 11.654283781 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09313764 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114068636 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11436637 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.453029523 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105913939 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097367547 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147195814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24510637 seconds)
done (took 2.119027578 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.141311802 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.565987597 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426494768 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235901004 seconds)
  done (took 1.982931649 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400057181 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099480913 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084663213 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081478857 seconds)
  done (took 1.420634382 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079064691 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100725343 seconds)
  done (took 0.933418059 seconds)
done (took 5.232597087 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079786755 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13425345 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080910026 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097313557 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080574725 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095742429 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079376283 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097799561 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081486176 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097210471 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097004985 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081837562 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094917253 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078448285 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097038588 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079269375 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095450441 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081519163 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09465577 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079522329 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097383475 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079594535 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094526855 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079109348 seconds)
  done (took 2.94306373 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098961754 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098304411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101475873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085501088 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101773871 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087903664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102825364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098074324 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0882128 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09921827 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103105307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085054337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100779823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086270784 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100044476 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102996737 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08811561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098515861 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083750609 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102653972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103758277 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08283055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101978521 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102922382 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085736752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102760823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08460823 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098899162 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103982312 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085380858 seconds)
  done (took 3.623470565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083506578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094366802 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079614302 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102519331 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079839852 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097862237 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079031801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096467057 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080926931 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095821915 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081086643 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095519786 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079058602 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097438861 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079607801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098005425 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112963335 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079086883 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09627659 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080512774 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099340865 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080097825 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095778947 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079335832 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094852075 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07850831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096737785 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07930864 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096662135 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079255969 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099422232 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082798242 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096236373 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102422792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082795217 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096462166 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082836162 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095868209 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080992679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096171254 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079238998 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095169973 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080090398 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103226454 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079555833 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097780238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080380857 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097512729 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079267682 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098290067 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077878081 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096689873 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098777264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081384131 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100157322 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078884454 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096944828 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079295079 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097682764 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078720196 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095374323 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079840992 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098280477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079987549 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11148781 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086103709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096791468 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098452761 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080738797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09887022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081791136 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110663335 seconds)
  done (took 7.242067013 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128960326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12566574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079475033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098647143 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077006763 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096416422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084162385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096880844 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098477462 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086191498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09711539 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081580596 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098912723 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095774398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096484645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081121724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101739234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094260744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078922898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099731413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080236584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099932786 seconds)
  done (took 2.840362966 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205755575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102549569 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141662036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107987723 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084125122 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106429673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104310696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086570051 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104033758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08488572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10109146 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10405855 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085090506 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100905706 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102240182 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084703142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103114432 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085336802 seconds)
  done (took 2.660456211 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092749841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099276946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099672624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098462662 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099701569 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.195491989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103365586 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108047656 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084586834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09904208 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091665295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100760572 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084484027 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099002396 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10204039 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082000865 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101570233 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082864202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107756212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105248481 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088329367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107871649 seconds)
  done (took 3.003046279 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095812198 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100460679 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117302329 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083950074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095766529 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080162175 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106435809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08273814 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105866557 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101630479 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082978029 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099072179 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08895894 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099453489 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104673088 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082671501 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101732285 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082833909 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101822986 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079729823 seconds)
  done (took 2.662133955 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101665973 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099904298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100836947 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092244169 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100967128 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084438662 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109604676 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101319492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084848051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125443457 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100402709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083531465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109323605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107038377 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101170632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092677107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11071263 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111031549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084756137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101269733 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12731189 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084212697 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110591332 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101582506 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084458172 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101054812 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102507437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089905908 seconds)
  done (took 3.5770965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080071951 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101235139 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079583313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098097757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080899822 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099007063 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080758596 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097041485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082425868 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097747035 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083108418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099703666 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082889918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100418435 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083657464 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100392563 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082751315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097348501 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079956897 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097858864 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082889475 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10044069 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082815681 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09772845 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080967124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099941568 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080363909 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097170664 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082743974 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09701386 seconds)
  done (took 3.482227192 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089745961 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107945042 seconds)
  done (took 0.970050958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078763836 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11533533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080976529 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104360347 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08725763 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101842488 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109248886 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088703886 seconds)
  done (took 1.540461522 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09581394 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113032807 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085020862 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11355099 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11273792 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099617658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17081352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101646831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107520524 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081082847 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115388619 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08307072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107367307 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083831358 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10709181 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090287982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097859037 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107594369 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087057631 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100010458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08427888 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109876923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104049299 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083697099 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102262186 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093093512 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113191777 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103163419 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086913844 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10914418 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089870817 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095163222 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083759277 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101505566 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082472346 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111025452 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118162362 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08681514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111870306 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102870651 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095376968 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095876993 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08847535 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106954655 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111765506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084170372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10195751 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078839941 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101258029 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086101763 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096064798 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084031005 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096374549 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109228794 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088295781 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112858155 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082739326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102613247 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086347187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105075369 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107808151 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085505045 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104428098 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08393993 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111115436 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088424608 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112251095 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097017649 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07811052 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100109166 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095070378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126117418 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109173853 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085584685 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102841023 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081557333 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10436889 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103835977 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091154108 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108914018 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084635201 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107045688 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109577052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083390465 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104698363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092944951 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099972455 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103556973 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081357754 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12030004 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083055627 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099379919 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080965874 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111270411 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105353528 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084045796 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099663174 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0916684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096273158 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08581359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103167876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102745258 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09551894 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108357026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108146083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093118912 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109946559 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084499057 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104906306 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080329629 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10221445 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100581541 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091158999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096315041 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086816461 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10240139 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085597691 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11198822 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100791199 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084260628 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110885302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090480697 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100763892 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080778963 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105739355 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084277812 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106228172 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112094322 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083479942 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09768252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08013546 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106230796 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083993398 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106025397 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108975464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088410566 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096920237 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083021247 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108500664 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113076054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084987582 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104131912 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091286579 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104472105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083935064 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109745215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105727384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084131076 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109598545 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085606171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097759661 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088350533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106118853 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101107578 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089032076 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106627281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086758774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103856776 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082891715 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108117671 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103852847 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083404398 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102575902 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082952318 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113281563 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104609322 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079918274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100042528 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092637488 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100310723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085077715 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101415893 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087692054 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103384376 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101083163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083600809 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104993108 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097245854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108230251 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104518274 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090132731 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11479225 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084752432 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106691656 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083878421 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10317902 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10440153 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093790688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108806543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090037124 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106093071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100280058 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091387086 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111029127 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084776107 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100617159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083636219 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107618965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109059226 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089396308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104497106 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083120938 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103526177 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08849191 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105949746 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104047279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084870191 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109224092 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084057255 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11053249 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10504055 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09635244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106762288 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079904285 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107188166 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101356419 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091656112 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098019379 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082560229 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101832967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085802014 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102487653 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088271148 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096387395 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091854458 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112262779 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103606293 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084168154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103135691 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092227959 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104062833 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088890327 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106300268 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110457808 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096178703 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102979405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088385239 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113877757 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103690418 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078934329 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109601254 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083555216 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102521017 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083508177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10079308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08787536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111732374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110940983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07860469 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105809953 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084064915 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102105427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080187938 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107837606 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106172675 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086221746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110673605 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087966611 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104735868 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107774419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084462004 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104739534 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086299352 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106585713 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086019814 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105947703 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084426481 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107311512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102262894 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083258551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104868031 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085717849 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103896579 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091535029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10312246 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085066241 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105485455 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10349742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08680072 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104569542 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08415016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106876088 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086082881 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103835818 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106522204 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079816546 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110926573 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084896618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112356382 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085916776 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099887443 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091067454 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106546731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109975556 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085858252 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104757782 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087628372 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103292699 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106801726 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091906339 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101240629 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096502438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112642181 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104839419 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08857108 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104315433 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087208946 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102768241 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086831579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105760277 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085677768 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104056298 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10904593 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088891242 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103756406 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087721503 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105461102 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086116931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105012357 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080497278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103566983 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085538611 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105760672 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115593133 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086751721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102873256 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084807688 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104913012 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103629741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083035852 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113275866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095419983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10386479 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112184571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085478972 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105712488 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097269078 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097953889 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084114592 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10095668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101685754 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093497658 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104705215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095366141 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103560821 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084580871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101050505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086620887 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102180416 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099058245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082994045 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115648642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084822448 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103497763 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085875408 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107527699 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087713913 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113918463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103205212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087594141 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104082996 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083593327 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102047418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085078857 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108090551 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105022068 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083035016 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101040584 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084948102 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104824432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08700045 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103743189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087700702 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113938633 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084858624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105473251 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109083111 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081022767 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107440133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085391108 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103154661 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084862589 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106892152 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106804059 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086421012 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11393596 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085438026 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104128857 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08640432 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100890192 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1042367 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085635886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10413376 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085332891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1051101 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094420635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101465877 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107960496 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085797133 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104262344 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093250405 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104664476 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089163244 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11090298 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104315963 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087640503 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112304806 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090631025 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107174365 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104879142 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087557636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110314067 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085586385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10972551 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086408989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105683694 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105956037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082926279 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103760215 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08615339 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103218915 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092192002 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105902899 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08504801 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102338365 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101191641 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087181413 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108614877 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094053207 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107050002 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089375164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099350168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08317158 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105530014 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102266735 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087810515 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10786922 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092186763 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106506731 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086623365 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103554473 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113925514 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092073965 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108786261 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083357986 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108240895 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087529088 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107043029 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105865896 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086314251 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107218077 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090289224 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106409569 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085449032 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112331769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108676146 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087690577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107130343 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087101378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105428243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082267099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106059366 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088023611 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108969626 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106906765 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0866339 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116308953 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084443811 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104526193 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10850432 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086002598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11061801 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081385323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107525974 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087424261 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106405189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082040818 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103678105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083534385 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106756887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104047875 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082130947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11647514 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095857606 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109023068 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103578451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085581309 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100004827 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081516749 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103816246 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088296481 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10575916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116172343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085661528 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104437899 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081720277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104456461 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089810584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108301811 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08393004 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099988375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086017657 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107066084 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110647583 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085636354 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104821221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089868203 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107426122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084705954 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108487249 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082898846 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106680224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117891132 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087243249 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105135203 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11196474 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094898703 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105235616 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082343581 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106199436 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090542778 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105214796 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087572187 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105744411 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121918756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089791454 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103530949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085359731 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105357089 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104299625 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095564428 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106596168 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087556486 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109226188 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088162611 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112675461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10736599 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09544845 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108792576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10864831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085563273 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104252002 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084683011 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104094089 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088831528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106236022 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110378965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095835167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105621468 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099474542 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11454248 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107950289 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084342507 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105565422 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086819897 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101102955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088161615 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103513291 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085774393 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10434931 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086328392 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106351619 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111787294 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088055424 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106826943 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087359155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099836523 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089561637 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108981357 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089206928 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103111473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087000272 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106165348 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109918676 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090997814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102840664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089260405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10771185 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08806103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101114726 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111481991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085303441 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10895308 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086729332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106472918 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088381334 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10932051 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111387552 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087588162 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108303279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096642072 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109158818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083682801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102475681 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110987169 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084758396 seconds)
  done (took 59.205701444 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146078207 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081377786 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102393818 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082638125 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114979261 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10387979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081746196 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103894893 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083563243 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10479804 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082631348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101830272 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112604206 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127999879 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096053796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106585914 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101970169 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083851438 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101718495 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083997477 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112271888 seconds)
  done (took 2.944632891 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10437411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121631073 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117529847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120669493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093199451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117771913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119164354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1194231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102255314 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114862306 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121303803 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119244835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094711258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114680161 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114520593 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096587522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121761303 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112867298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119569747 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098613204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115877029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118112877 seconds)
  done (took 3.305027033 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085126742 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10435338 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087996188 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101874766 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086857271 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101773897 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090804912 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103600322 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089823525 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105935645 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105691664 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085861794 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108643216 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083326312 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106471893 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085313701 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157598637 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11045766 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086156114 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109660734 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101949462 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089478014 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10301054 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083333656 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105078267 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092147566 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108145226 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085027855 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106290333 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085447391 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107316138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103982777 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0892322 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107524275 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086211444 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106041372 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088126612 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106940144 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082977503 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10571035 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088839337 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102875649 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087711256 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108339374 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.105540134 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084958884 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108681655 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087677487 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.101942758 seconds)
  done (took 5.646913574 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103415652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165320599 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088875082 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146679481 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122774051 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115874434 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089383992 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143908744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105747961 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088943994 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125890913 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122611418 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106164107 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09241146 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110199329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10770381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088711638 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104867027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091171778 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105398839 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110915572 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094373018 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122302128 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120699438 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110382026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086173011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106768787 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09197991 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122358251 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112489762 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111568715 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093874404 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123385455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110475882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087351935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109844127 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125318058 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088676721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110325044 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105834576 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09088692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112441282 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094142552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124906708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106591397 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113249507 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088267022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104169413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121636864 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090382649 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115907092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123402586 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092394425 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108254148 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11245544 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103999037 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107962612 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105842464 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09125366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121814948 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105842525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091889416 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123923049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109243282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095966112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124106562 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112279883 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091666825 seconds)
  done (took 8.330843989 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09314884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111662006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121174497 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121136546 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091916757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112774263 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112943579 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095126409 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11493938 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119468349 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115387468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138045183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089202595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118018791 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114062475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092639151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113790289 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114139544 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094718961 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113972121 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113991705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124302034 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094792509 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123897766 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145769109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110001792 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093906732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115269557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123514141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115140278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12796034 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094699023 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115588263 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123259322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126810524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095386009 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107066301 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114743097 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09600753 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115156957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10938477 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125093766 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094767947 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109558581 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115703586 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095034932 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124214608 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126306875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118439977 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120562505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095498635 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12382603 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114848224 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094860591 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122585197 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150229026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123774868 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124002431 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113116249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123380039 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103299036 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131460436 seconds)
  done (took 7.876014989 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10604997 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115820035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116458321 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101178082 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082696194 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111542086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086688367 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106466975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097607265 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115885479 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11931982 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112150753 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095116635 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120298187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111222185 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11513525 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091728002 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112320088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117598399 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092290608 seconds)
  done (took 2.968165756 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093315376 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125724133 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088193069 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116267036 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11130574 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094238794 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110505479 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112310598 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089762394 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112191293 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099907962 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119638521 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109318122 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09687968 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118227505 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114225641 seconds)
  done (took 2.55571815 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097230076 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118601657 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119641612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086568783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108064986 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106040555 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088543241 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105296351 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085212549 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123549471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088819158 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112736701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108772491 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087129149 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105854049 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091512023 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104875786 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086586256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10921006 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124112709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101197913 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108101783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110153623 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091393485 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109562428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093698547 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110174251 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106517182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087806575 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109691468 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090055951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116509397 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106531733 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088132377 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107330462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086570092 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109296369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088688476 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109336396 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107002623 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088473642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108502636 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088918425 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109129253 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104848865 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089378264 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105350945 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095423346 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106738252 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089128997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109731941 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111113579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091029592 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119466865 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113513821 seconds)
  done (took 6.470645978 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099374843 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108948232 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081603325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106483156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091911861 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110551684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112733025 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088121762 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10981348 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086040272 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111195337 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091065216 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110175355 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112667909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090775855 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113028058 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085149921 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109760173 seconds)
  done (took 2.664603972 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090321861 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106244052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09243968 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107217864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084932562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11048587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083542647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106999944 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106975957 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08882675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109015109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090363295 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107460193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090982145 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108564163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089367814 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110669214 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107554294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088208009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104394229 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091625116 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10720324 seconds)
  done (took 3.030646895 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.112250093 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12462658 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094017802 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226776808 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102173249 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132417034 seconds)
  done (took 1.64038122 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110767206 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123540978 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110115271 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110127359 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117405041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111397644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091465189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112282499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120966822 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105708754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112381568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120064344 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120122381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098480275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115464498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11525619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108649141 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087106207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106721489 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126930047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089830415 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120728263 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110945893 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088882373 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111983366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120721736 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121018206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125282182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087981545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121126278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116191151 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09053204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121872629 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125524583 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112407257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09668682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111412131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129627119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115304936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096301408 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112629868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11926271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101134271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114550614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119922832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110804745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093242342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111106445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111529795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138899642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097021256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118440024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117434984 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121073198 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120106318 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136928248 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101412831 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120665724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115499943 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123866387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116664318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0936665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120612486 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126034009 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117990887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124598091 seconds)
  done (took 8.29760246 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101447987 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128607349 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112110231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12451615 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096779768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110324391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111846391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091036006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110861236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111651765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156394209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092601606 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121011557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121155638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11114795 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091839827 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112704241 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121850726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090696551 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138766326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111168131 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118328646 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119777042 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0963724 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12576885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116725942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109471835 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088299456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111279717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111849415 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0976621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112995089 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121497422 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09097136 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121215532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111157171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110606894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096302602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111118521 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118886032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099621777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127217754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111005797 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110850468 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125932541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089594371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111635777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091400538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111968766 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111449655 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12639449 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105879899 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126058189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121153111 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112007043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091560605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112590626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112791272 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092425059 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11838661 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121011686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111603978 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135467045 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087721595 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111273572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119978901 seconds)
  done (took 8.211480318 seconds)
done (took 158.443142377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.268662959 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203826657 seconds)
  done (took 1.324845682 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086939751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13663841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101327939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173683256 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08561799 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139798608 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138783002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097528875 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111110051 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090015372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111626934 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091703435 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176420169 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086548661 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109611147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113074627 seconds)
  done (took 2.709389194 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113347355 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260336181 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126672275 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110020417 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091506303 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114306971 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08834196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116764756 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094204916 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109714037 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093198627 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11096901 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089440038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110029243 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094161466 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10965462 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109855852 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088442469 seconds)
  done (took 2.891440774 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112477095 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148184672 seconds)
  done (took 1.125423057 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241297296 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161530609 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22564982 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479574319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.283531966 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.358035839 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197739737 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209579216 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165053891 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208609354 seconds)
  done (took 3.388065751 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118359562 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183207793 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317276056 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15828031 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105939786 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131026434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159169969 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131726797 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124063723 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104382753 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101327311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121801519 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142304378 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098848666 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119789481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122291625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125086115 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.1184668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120536624 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100057456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141949718 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110901609 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099424866 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11746177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.123024425 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101920995 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109938839 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090688157 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120029594 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119096524 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095700854 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128680983 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123396965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158310203 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124032538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154169749 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118101351 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091147002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11864438 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095572501 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122782766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122677891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129573199 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101671856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110893784 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101442576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109118807 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089508206 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.119906592 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123495977 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098043712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119008547 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157559803 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120873809 seconds)
  done (took 7.558709895 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795144611 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162189531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096156993 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887948897 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142997399 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108294076 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784443256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118487737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264622552 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758308656 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139818033 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103383839 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233636673 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260703242 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.97627991 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296735998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640436698 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133267222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158778641 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159165498 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1232062 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120011772 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138036534 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455269884 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118259865 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092404889 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123523223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1237041 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16648918 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128974785 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097513094 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203782173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254273987 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203803025 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094711528 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111863655 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088651475 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194546992 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269783167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194212498 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179305035 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109276368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089656979 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126494227 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134848694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08799891 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187140602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175033845 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169439198 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118026742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123615456 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101941478 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126382578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168256164 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124377489 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326273222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319338173 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093404311 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126307419 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130752272 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248089531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123874181 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227977056 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13967498 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193526804 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113465379 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824305823 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171435327 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11107232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094998038 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124613925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120483917 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102357721 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171767334 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395915692 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128316466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116788126 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089339453 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253641073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104864203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116586492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167010779 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117513263 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100259683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124694831 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12553681 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169652267 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255794874 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101033749 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122648362 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115387014 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103991257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120048226 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217426724 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224018431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162395016 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233737597 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100370548 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188097518 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16947787 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120185888 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172764637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119414813 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102787469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126042282 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21763152 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147568393 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104889077 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116920603 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123173176 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152488563 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132143833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101795514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173478156 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500228398 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167825129 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110545813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127632265 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098948703 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16230877 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118092608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264168342 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121745336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169902336 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097887433 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110213775 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120938316 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163360845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121344841 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098821598 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12396691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118982898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237423372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217118546 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121163873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220808212 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185714369 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120048456 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174774057 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122833018 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168985186 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123160719 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103884381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1210611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819700389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101970342 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121517021 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116187298 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194175667 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089834722 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126028562 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124033478 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0868154 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835566695 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126576166 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098940444 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124778564 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11940965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122699126 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09608432 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120255873 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161722745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232209613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118712941 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097659146 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124455697 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160466611 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118046495 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125319287 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104114294 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.130131395 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123770053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092617615 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126816117 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169145907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185980204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217718076 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567520141 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111078791 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102946722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228372528 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112448879 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290608458 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09830412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226065953 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18493828 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099676816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314417672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167291182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193991804 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127099577 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171940053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108758497 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118535481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166450372 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089415091 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120931123 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165441514 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127142818 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125177265 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.984236421 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089914265 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231972284 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110354158 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172423176 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117242726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120698069 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273321311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112305224 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128814669 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166349025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118417716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105874721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731458271 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12388363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100360568 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122265902 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225906548 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164560207 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122311646 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12415208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101596381 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16751053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.238360132 seconds)
  done (took 44.622679484 seconds)
done (took 64.47829419 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283894682 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222722704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269144969 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170297273 seconds)
  done (took 1.914024791 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171129054 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150676586 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122354331 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111827887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155815155 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090652989 seconds)
  done (took 1.692988377 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361532065 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275995962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245085016 seconds)
  done (took 1.778913589 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.298286779 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254942765 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477021917 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329711782 seconds)
  done (took 2.374250728 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21519674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142492081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117070816 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10947891 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201596482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249565425 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142515892 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200780044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100268312 seconds)
  done (took 2.417375174 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198979961 seconds)
done (took 11.271943697 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.263654615 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.159794142 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.250607945 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.257453847 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.19050531 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.14202482 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.264885151 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096427674 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117156049 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263163698 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103828034 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121368435 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.127465777 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.212379668 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09237772 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.155178554 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147300029 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.241866012 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.221944445 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.194999029 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.152577367 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121970643 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.0950142 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.207776001 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121837665 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15886086 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114791351 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115845611 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.143358362 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.262485679 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126098362 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123790679 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149932901 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.206976147 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090859356 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.143752003 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118677442 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099249012 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125470887 seconds)
    (40/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097671142 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095216125 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.178070272 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097492838 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.154237114 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123850763 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14961544 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11744739 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123243914 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116779197 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115113859 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.087089715 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.153550958 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.208087051 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.217829848 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247205502 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.218421309 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173395327 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114190158 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09585336 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202665655 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.127055486 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12886869 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167439148 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122973762 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.09211986 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196739047 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070113379 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120502787 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124684404 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1148075 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.144168491 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113003493 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069215226 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.104024749 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216593793 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.192088969 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.142851354 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097666397 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11340444 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125327568 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090534468 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206203793 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124854111 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118583019 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.152964834 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091942334 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114941828 seconds)
    (88/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.126065775 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124537486 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196311884 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097504518 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18880469 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124256666 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123035355 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123027564 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.220513437 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091434779 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.220731255 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.198048865 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125599622 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198218789 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185797708 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096260583 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107024497 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.22406213 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122515729 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11527853 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.138937038 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210941151 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.189235077 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097976671 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115260548 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123127828 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106451038 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125290388 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095802352 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.19657845 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183537588 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119732392 seconds)
    (120/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096197032 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.21674842 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121996551 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.183245008 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123629654 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074414005 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.147243201 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.398212021 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119788753 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081490381 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.097091781 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138357239 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12353526 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091034168 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122394812 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071822516 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.219946735 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.121321581 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137064574 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096509977 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074401048 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137544465 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101619787 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114355448 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.144486546 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06678448 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073483964 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.184958167 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067866887 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122839275 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19650337 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108028667 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138941712 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18181013 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.18584212 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070803721 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072204056 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123591447 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095875371 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120125382 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098084288 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140891466 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085928745 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.170912451 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.190011449 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102405442 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.104268508 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14590041 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125712854 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123182105 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071407358 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082067127 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094904616 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.122712265 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.113728573 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098427512 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114021935 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.138178283 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.111950747 seconds)
    (179/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.104045846 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06963708 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097281848 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121435247 seconds)
    (183/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074212738 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115655742 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098321697 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.148753044 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070246359 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123795349 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070107084 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115104832 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072517939 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.114355103 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137418264 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.094756947 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071530335 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.102067998 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.176411999 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113394165 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164850934 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070957033 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093740483 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.114255743 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.205063093 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071577861 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.195615757 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.142609567 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088089796 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115601479 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114566628 seconds)
    (210/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135975947 seconds)
    (211/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177856006 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097551443 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123237177 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223446275 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172493906 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121479009 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.144229076 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122485492 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.14122939 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096411533 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.178503736 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099159851 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168203406 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.0973074 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090794346 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096235617 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085978145 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.178619993 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112335133 seconds)
    (230/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105471776 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091882173 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.194407581 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116335507 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115182507 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119457846 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072294904 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096057267 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113936783 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095921391 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073001333 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073930518 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.126583562 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088690968 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.135504045 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06934595 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.193778975 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096798458 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177197809 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.129304971 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.113436273 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066716817 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091792093 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.140630531 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131379003 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071172295 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.141473555 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090316926 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120642558 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09465378 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198823906 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.070942714 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.158401826 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096923668 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.174036108 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143199086 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099321564 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098031748 seconds)
    (268/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07387845 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121853974 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100836525 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.117699209 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072711189 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129684747 seconds)
    (274/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073094127 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072276609 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115553474 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.073799323 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 0.179078121 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073834467 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097929383 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09134148 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116716698 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093599987 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18584689 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113228433 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089193628 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119764713 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085308199 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116195176 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08816915 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09968269 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101710385 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123315169 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069989798 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117000895 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090743154 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072448424 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.122326617 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083706557 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09725877 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.083039731 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.122333656 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094470985 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119942403 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083408048 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092771076 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.120570542 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.141676294 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098569791 seconds)
  done (took 41.406215914 seconds)
done (took 42.305522086 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099481823 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138063219 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100518669 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142829135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12961204 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097852304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123409603 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099918536 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128394186 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130649123 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098317036 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096601146 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09883615 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125817322 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102709684 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143967752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130714237 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.099961845 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.125636688 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091934914 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.125298633 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091964646 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.117978652 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075484794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128247391 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099481104 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123854177 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127768789 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092347819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117503089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095455751 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124525428 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091904393 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131513292 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098942794 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12505114 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10325382 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.126689026 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118256755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091454241 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126659638 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09205039 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.123487298 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100510195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122794381 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09815858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.125051089 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10478207 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141926807 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120603183 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101637038 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.127944301 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102852021 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.127726589 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096969203 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123000968 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.124008599 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113894445 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.126693877 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094014906 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.126143363 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101086678 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.122049136 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.125821623 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100540714 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128055516 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104272391 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.12232191 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102867835 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.122404377 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092762278 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124565268 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.120749486 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091336654 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.126516384 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103416679 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.116820128 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098848235 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.125004483 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098058478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117068573 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095131954 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119555159 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099690027 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120755334 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075691825 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121558455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099039563 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116373784 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102132958 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123022874 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099585042 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11969096 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129251666 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090514392 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.123237892 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09287556 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117417998 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094581809 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12277066 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.092480616 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121228026 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101971049 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.118931829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098994354 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130638166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092976191 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.123600342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.09182667 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115714604 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.13267298 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103162599 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118887572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095853879 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.11748325 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100662319 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117093079 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092537188 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117015318 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092834669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123090165 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092490705 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120543645 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.101007733 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130457603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092675917 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.120319411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095802219 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.117627256 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098617567 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113101302 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.117770924 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09355459 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083594499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118930493 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093869505 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123072179 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121403462 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.102383965 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120181056 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102258115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.122273829 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099820699 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123318255 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091330841 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104549713 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095717229 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121256556 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095082266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.117992808 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094585281 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.117656987 seconds)
done (took 17.841690686 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087268765 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190238595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153271166 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149263947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114876641 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118237912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.1296884 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125181107 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119210742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149929714 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11742166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139075053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156940945 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092454504 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118070067 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097438563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120142273 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109974506 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154731656 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172358285 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092612155 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152648124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141586572 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124816374 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.119766711 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118577491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097513029 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122386046 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110010925 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136264414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122523495 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094035124 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.141322327 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112450764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126068475 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118500416 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097614064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119118307 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093855365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148249966 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141865623 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097547617 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12380438 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097924968 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120940379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095176763 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128881232 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131103133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098421909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133727276 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163946407 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097461378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12872689 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117828646 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10421179 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128980662 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096592566 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120524728 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094860023 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118750885 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097290223 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135184819 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150554875 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098976552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128010274 seconds)
  done (took 9.049826193 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105215429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14342308 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135454119 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1112629 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.119681925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094911061 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119457858 seconds)
  done (took 1.795434325 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08775945 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14144193 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119182995 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142825471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139977138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133834371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130053792 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092201783 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137340017 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095540966 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136599513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159367424 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09637123 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.127277142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144734988 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094591514 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145827056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095317059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123605431 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1464941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09806375 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142245966 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097050821 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.12020558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10980552 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.121051091 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170857372 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100352589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122681465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097738722 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119376346 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.173392694 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109702289 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132580897 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121859635 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1098292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136371326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09319818 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.137121026 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10120824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134876504 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12223358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096408849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120673563 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100166099 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133404276 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096272315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121733139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09862578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1422522 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096458189 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135858463 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121640661 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099890903 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12383087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101796635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131942227 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0959248 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141990641 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097787155 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13992803 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139573955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109987934 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139198933 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097779485 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138062793 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137109757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098374146 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123457935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098988103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14005617 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093093195 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122574025 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106051476 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122684524 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.146265111 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119417631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12295065 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106253906 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.121224265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09637753 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121749201 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147056256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100098764 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122272767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101115677 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124153895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093161784 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121096441 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098861108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12007048 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096758017 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124422865 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09610662 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124240792 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113217772 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12157836 seconds)
  done (took 12.531972675 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089624381 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.121092737 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095745632 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123015592 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096388863 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123710188 seconds)
  done (took 1.629423678 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113964822 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124050037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111230627 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124838645 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163673375 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137486612 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111300651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131748255 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115588212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132817457 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138288281 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112921282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143993963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.127838083 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108595093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128193392 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138249125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107039902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13541077 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1032427 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144839811 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12475533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098000932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137478939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12182095 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095017979 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130374973 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104603002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133297781 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123669715 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09582079 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123594781 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123391049 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098420528 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.133942408 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099175561 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122712537 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120012332 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100457374 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126330795 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138853572 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101687123 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135610841 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099631651 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130282185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126619543 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096149726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13124651 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133250903 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094327667 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12419159 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098254186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124710187 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123160036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095852468 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126154865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097874086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135724983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125577947 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095946905 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120975772 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097969059 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130632686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122018966 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10663927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12593656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126691941 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095696795 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123979902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095854403 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125477742 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118760793 seconds)
  done (took 9.573230845 seconds)
done (took 35.53641572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688593336 seconds)
  done (took 1.662066932 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.745281342 seconds)
  done (took 1.720228311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.943957231 seconds)
  done (took 17.918303468 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503880216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586438247 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818838515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.186800213 seconds)
  done (took 3.070770941 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951084417 seconds)
  done (took 1.946344025 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243342792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23851855 seconds)
  done (took 1.462770302 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774941157 seconds)
  done (took 1.762998654 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355146951 seconds)
  done (took 2.335274995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332488245 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188481072 seconds)
  done (took 1.509719124 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56044941 seconds)
  done (took 1.549359645 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.821899802 seconds)
  done (took 7.817867297 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258741388 seconds)
  done (took 1.260482158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300558023 seconds)
  done (took 1.291237139 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.528919986 seconds)
  done (took 4.52380816 seconds)
done (took 50.810270757 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098888044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126927709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101045032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125055594 seconds)
  done (took 1.439664696 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100354871 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123977711 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102561313 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126517658 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131661296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09588355 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12444987 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100981366 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126115815 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100324041 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12694723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.126187409 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098096504 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125558914 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09509732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128939023 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101629136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122281341 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124693616 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095597295 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119365116 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097733462 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124735301 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094080364 seconds)
  done (took 3.71046231 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100249749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11906136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096204974 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118611853 seconds)
  done (took 1.434577167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098966322 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142674721 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139178266 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099469886 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144335216 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138023032 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091969442 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121440489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09636669 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13249187 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097097563 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157161274 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.144392792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.102788601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133990024 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094696829 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119591987 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138629345 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103265793 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132045358 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095143213 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131443561 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092149201 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142963045 seconds)
  done (took 3.886424756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15909239 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.153505264 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139445181 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095452883 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157442132 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143771952 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09086986 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143381111 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089519464 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132450728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118392986 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133153035 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132905334 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088403591 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113877733 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114757157 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101681428 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128224507 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091046139 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.147235912 seconds)
  done (took 3.476395815 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097622355 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117514503 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087829287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116668101 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098953552 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121162565 seconds)
  done (took 1.641958414 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090632251 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117222032 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089646944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118745488 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094153898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120436633 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090525071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.120314527 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089489787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114728421 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088684353 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113387966 seconds)
  done (took 2.249680835 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.461938756 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091980852 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120268725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11225817 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097116035 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115467614 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104390509 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123206309 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141970691 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088504031 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115411357 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091268658 seconds)
  done (took 2.665551847 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237100859 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127443261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293398351 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190663175 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158564713 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172678128 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152300831 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168799047 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202975576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161781721 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234889898 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195776136 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151482376 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191144508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138585897 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14738143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200193495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247838262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155348429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20429429 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230340935 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166013016 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18527654 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152371145 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113263022 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168079592 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099529781 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137481426 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237789034 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177660334 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188121507 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165822651 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148177012 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242508505 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251702842 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199268841 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212960687 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11067084 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176302727 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167549568 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26443209 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113483798 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236221278 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159796608 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130758206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192792535 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167859054 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174284763 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153665331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139970872 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199575312 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241278098 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192085218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14113245 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16058597 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162270059 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167235629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152353948 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250321314 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200323908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207576658 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094286581 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146305631 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193961172 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18037235 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170105635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207356741 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146278571 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195446183 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187415039 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16654832 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218124039 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185706505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142394634 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17314953 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175317484 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17175833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259167591 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178804478 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123628096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172705387 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153133173 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108317079 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198335032 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127392099 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215533091 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154939082 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139608191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16528204 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161482697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160676829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199026854 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220342125 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120045658 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.115453352 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16230439 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129822541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215552018 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142330709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159849816 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161201223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103335589 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207948035 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099353752 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181298469 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123214414 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181399882 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186844889 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128123274 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161520291 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153338521 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125826029 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206798652 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199079241 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140913182 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108846242 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23706873 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178104522 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152784248 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181126941 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200356011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145288309 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150261596 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198038581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218256847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140955459 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20366462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154169795 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136754281 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134429987 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17981495 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157905908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164347605 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105754586 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211373048 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21047741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128305041 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115938872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220355011 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106484302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135730495 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163385756 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151705761 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139035196 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149247951 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124927988 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211690701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182141078 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157491601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173017459 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154531456 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255613849 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145559426 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124126383 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154390257 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125204774 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200465868 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201410335 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137373678 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23106745 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171402855 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160543754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169854181 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109462501 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183658307 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137687448 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099495574 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224494196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169205415 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166266451 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198093568 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162506317 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1829769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.213628847 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180290417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178371176 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166613033 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166215793 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144736509 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132681741 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192245502 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096035525 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147467245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134996949 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16102373 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146114806 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106732335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227894246 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169107655 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151845244 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130159318 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153219168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186649993 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131852232 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177688488 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178882565 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146814153 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230617941 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199852175 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187662115 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149893541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235318291 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098795048 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132884508 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147841006 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172043933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109931608 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143364358 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165741219 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182012417 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212677629 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175664488 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164543132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176140453 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193008834 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122332056 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142102623 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219290543 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175638711 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165125663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137035106 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155157579 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17698814 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156646736 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25724401 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168959194 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176874309 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237185004 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152833329 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104622552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152196604 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184268915 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156821426 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178483515 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147525979 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149159248 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162399661 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132624865 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162983118 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186568422 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169734251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217191647 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.127820038 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219879867 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102794148 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197926964 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131202564 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164977822 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109102562 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174123501 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229244318 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119983795 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197876806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190807604 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133971871 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149189462 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239493023 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194097401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138133896 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160955384 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162237434 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168179015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173098811 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182529004 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166288967 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190010588 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158597353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141205297 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143135959 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151664232 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123333991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133204979 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152014482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17525404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146489889 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186805958 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163690318 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163639402 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175222312 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153861503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145224097 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152512771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217643945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174325377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242604695 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152440911 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180298807 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212418099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133111039 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13350859 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107713492 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184936457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139961379 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188192894 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.152132247 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158779689 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182080541 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226587103 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111890603 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127454956 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159737885 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173171932 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169184046 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153167683 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158023042 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20555195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143799181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109228818 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177442954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160021339 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149503506 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195126214 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11559442 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12707714 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133637947 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134696757 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167377863 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205860352 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140185316 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184595182 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171321692 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171965467 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164999685 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153904404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151619398 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139061466 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233766804 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184175188 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133830591 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157536225 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181872315 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195722615 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16424523 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143393244 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203032047 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220600834 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198441937 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145278969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168022255 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168080739 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157551456 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185512158 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13950968 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208014236 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135889588 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227606625 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15508663 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14219776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17436738 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121046797 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140964635 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214408896 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173200052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110460106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137482988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167136064 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174995114 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155732989 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127697042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179858179 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129340448 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192969248 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262436952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135467389 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154615747 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120271015 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139168006 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158611217 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160709657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144399159 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139803558 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227861948 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134664397 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191327864 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229191141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169042151 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17669954 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145589617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694818864 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10420508 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224520825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160935143 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206345009 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154178042 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172702987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16309549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172863538 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19474846 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15856755 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231094087 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226694745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178990252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132194949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161930484 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162132538 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146266989 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123198647 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194880135 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130309794 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15597048 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206573445 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168474587 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10823287 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146466875 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197945202 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156593483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217025718 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178604363 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110543338 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175326717 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214884063 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138862845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179041417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208898014 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145655634 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154603145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133392829 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156868652 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260901438 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09726017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225349838 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174418654 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156872806 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16592724 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146677814 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189927025 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159326971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178993541 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149447722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158427665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155388914 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138832741 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102557999 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159310733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169121172 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151139044 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159040262 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164430654 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191092832 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097853853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150211741 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15642253 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18786948 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242562606 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13626075 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10945683 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16872539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154973836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17600744 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18102313 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139860996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138563104 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140682909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130987179 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137310811 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128216396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155069898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16837357 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235990529 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141015197 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252931359 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146378526 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155308596 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091888695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138221852 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152160464 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145977278 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157099288 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150077296 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231894847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150415958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134383479 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154465359 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098456262 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142771745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16905186 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171857889 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178492741 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144219751 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084991108 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166432314 seconds)
  done (took 81.666186356 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164411783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130709576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146881326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201188034 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176617257 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270854739 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212098234 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253797808 seconds)
  done (took 2.638259103 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093489479 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145803987 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162770448 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.143363051 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.098265406 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.130172016 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340241737 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.143066268 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.099031369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.147564047 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.155570355 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117898914 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.516341639 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.126701799 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.127402958 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091393075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120303792 seconds)
  done (took 3.834967227 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.461552218 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72350721 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.4772243 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.135229408 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.105680388 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133476839 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.714017763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209586919 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095951572 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.490740415 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.76805855 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.189366612 seconds)
  done (took 18.589093995 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098444638 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129778992 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111125087 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.145209004 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104402408 seconds)
  done (took 1.675360347 seconds)
done (took 129.896672452 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103837198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.412419795 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076273226 seconds)
  done (took 1.610719171 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107714717 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140708093 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111687494 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143934663 seconds)
  done (took 1.602492103 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09707655 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129104805 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108899515 seconds)
  done (took 1.426233412 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327632623 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.195059635 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.153469961 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106557378 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13182272 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10317207 seconds)
  done (took 1.434328968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097740617 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127711906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100772139 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135875555 seconds)
  done (took 1.555239687 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094793492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078711042 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110089563 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077458993 seconds)
  done (took 1.449606948 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113981824 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135015122 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108279894 seconds)
  done (took 1.453539844 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12942592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142289069 seconds)
  done (took 1.368163558 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105443407 seconds)
  done (took 1.196282784 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117772557 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.173807776 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.201053277 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.172660396 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23493377 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.173940148 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.147805635 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115749331 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131236831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144329412 seconds)
  done (took 2.7099086 seconds)
done (took 17.679669613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103528999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514785715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418884262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116660411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731349282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382790499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049161514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154755943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168208867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098310762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141097534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677053367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033098081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.482043506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99112771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.382820213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705776993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09245534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119994959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094462428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025326136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09305424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122369711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09333788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704085762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426849605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094325325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376230049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092219412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126566433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412984419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094503593 seconds)
  done (took 17.205369701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09485991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174465252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103788055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138292116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123792748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094414296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124725707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093863786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180230915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130881692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139401189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092699327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126002121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095787221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142284385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098743049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13265301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120708553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093070544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122311232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111172912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127888435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09442402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122241156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094579566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136421188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123310646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093207245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12085995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098749572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129838392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094739035 seconds)
  done (took 4.872046375 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140530987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189414629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135657682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128140336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176364258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126757378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200183518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153970264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155126964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124369228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139540348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094356128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157001719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124391819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114176437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12818541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097696705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121986774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0934899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12403208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140733646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093288132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123388713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092975899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123208297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137097577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094875136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121296227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092621391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126766857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101448154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130448966 seconds)
  done (took 5.210268983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096520342 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129427096 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108515876 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14626727 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103940182 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133229962 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09878572 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125711102 seconds)
  done (took 2.046635027 seconds)
done (took 30.425979388 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102572234 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123131147 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097437997 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134566416 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097719803 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134298078 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091159216 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129072852 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099459181 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126073188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129292454 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092034705 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124124634 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091910572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128936499 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095491301 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136846916 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096025562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13901091 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133652778 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094036641 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.12960977 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098414359 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134505479 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106639563 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.14009905 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134959796 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098429061 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124726585 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098989317 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132989878 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112108293 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129760553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107412983 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.130347589 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093639615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125179087 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092364921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137084442 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128732507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.095975804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129184436 seconds)
  done (took 5.972720804 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108240936 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15156335 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106273321 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.090843391 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.124409754 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084225205 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.146180862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087935854 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118522414 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112130466 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.086264374 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10871236 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078660697 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.106187391 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076729831 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075734216 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111054259 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077440524 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076630083 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.109975339 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079999348 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073218416 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10864494 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078827578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104966579 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08158672 seconds)
  done (took 3.673117643 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099397482 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136023681 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112197891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187004922 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163514612 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100352055 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135425841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140739262 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108086747 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12178626 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096453151 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.154026554 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115214258 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.135425239 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092873012 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137548957 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136695421 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093907715 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128938704 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115339719 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13946936 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102742163 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143178648 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133285193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091496698 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123558765 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096775933 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139551035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.105852163 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.138353049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126865492 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097189541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122499106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104304653 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133275165 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094477523 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141602104 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132079494 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101716168 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122213891 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095273529 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124895309 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113579401 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174925189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.130866555 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099458246 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130131711 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10599045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.133876483 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110898924 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135908101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096887984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125885049 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12049269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092768706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136548099 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098758609 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13199229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102590775 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125127424 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104615912 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125607467 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138340808 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093021123 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129352279 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09146763 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122956451 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091933387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145174438 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102290263 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.171371288 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132068127 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094464006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131356003 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099543531 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12829887 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092325195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138124463 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138975704 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100632493 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134069578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096463255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127798844 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110181409 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125652708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094048648 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126455263 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098707384 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125444189 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09342814 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1358218 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129052486 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096275453 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14243457 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099384645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130818847 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098473605 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129133574 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091865197 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134965184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131251208 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093695161 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13608088 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092728929 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125606256 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103276018 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126962726 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121573168 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098058851 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128592083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094256585 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.127119709 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09636049 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128151767 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102831362 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128797545 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097568739 seconds)
  done (took 15.031618171 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227177815 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219333721 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125350691 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.209677011 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106384095 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.13766085 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212438966 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164248682 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093038838 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123733094 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094955016 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.166802058 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156817175 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.175159827 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10412612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127092862 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114910896 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170664173 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217910044 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.215464318 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.149027281 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132192179 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095299375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124069676 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095458176 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132422889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109145944 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133394753 seconds)
  done (took 5.260591138 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107671854 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155459095 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099441588 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144692245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147890872 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093475589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126944709 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094953439 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135361644 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134867877 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092436309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12929273 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100264382 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132679655 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123486121 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103978787 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135225956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095073915 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126983217 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097168762 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130055161 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132542359 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100379196 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122690595 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100901631 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124932707 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086056962 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145686221 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123615919 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115477912 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.128537667 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099576163 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133920234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093862585 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122726599 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095837892 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125096256 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095298154 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124353151 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092184773 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121259988 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077948062 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124292596 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136784282 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09967187 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113104884 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099751333 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131018875 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102576409 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12759753 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099499721 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133301566 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098281143 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.136539476 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100056421 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.135873911 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095938353 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119404777 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104152211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.133274124 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084933073 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129140727 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097960329 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119424129 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100798111 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130590344 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09224374 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125406195 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097778132 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129082402 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124702091 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096980366 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120921617 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096135697 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128343857 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099082745 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.129564019 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093618737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.128036892 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095395462 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.110551547 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096980854 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.111083426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096213419 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121830305 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092652258 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126088957 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099503967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139558343 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095189126 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130426783 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124136733 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093553983 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126204952 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083405872 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125608082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108214952 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141668282 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093186776 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121693967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137280492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098447284 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122789077 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076364183 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130391794 seconds)
  done (took 13.115778846 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116110454 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151304203 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095769839 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144889391 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.149784297 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.116813401 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.137829125 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105552474 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133468349 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110392441 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128421321 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102046332 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128397203 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132272515 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.115874757 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13396883 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094906181 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133669118 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102024923 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.162343618 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136952755 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107999408 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134150118 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09405962 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128491061 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105950779 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150030018 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134670159 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102834864 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137802598 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103630927 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150485415 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109458258 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.132173012 seconds)
  done (took 5.357850962 seconds)
done (took 49.515739584 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213020986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439111724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197266115 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102369673 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.206906785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.239644988 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207965207 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.197634381 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.243517882 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200662744 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438871327 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.833511485 seconds)
done (took 58.652332795 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.254232846 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333016669 seconds)
    (2/2) benchmarking "String"...
    done (took 1.466543763 seconds)
  done (took 3.927832251 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.554114859 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.141327891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457905409 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198664423 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198481624 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493021627 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.891299334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.577309876 seconds)
  done (took 28.086798871 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.209081156 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.600960341 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.018145612 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.930072258 seconds)
  done (took 18.888740564 seconds)
done (took 60.838421736 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189395185 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276824166 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.213641935 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178149808 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316176232 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243904979 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.561845255 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.43980197 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208020411 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182005057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219806728 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200189788 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204047083 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.540565322 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20517245 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223481261 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.201365656 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.676126386 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.606409277 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.204226429 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202011257 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.24808398 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.240972181 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201414046 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.267661196 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201268764 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200706206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204738968 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.775143022 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20170843 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209146032 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.759670314 seconds)
  done (took 191.933601723 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200613432 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.184901113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.298191939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249439625 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.637553522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405495179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341085462 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.705632326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223918557 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.235335944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.451043426 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205818937 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.513315065 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.189855671 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.208773547 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.301685536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.543516528 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.51957406 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224364125 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437764545 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.203859131 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.630349601 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.554630465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.40070458 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.265480401 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26368206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.223009326 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.251293741 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396877573 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.48055324 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.224651956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.252892868 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836289788 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.062299019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.209275979 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.206586285 seconds)
  done (took 150.671853521 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.499179624 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20051954 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198583199 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19980537 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230741832 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198381731 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776323375 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774309781 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702647361 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.466616937 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263719177 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485155408 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202822036 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294053976 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210267041 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199088745 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212236736 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238662154 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203685121 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198152754 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768411095 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217898532 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.28285572 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218899466 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197546153 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229247889 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587703326 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198065853 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228708083 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517095559 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244849017 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197589793 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542823746 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.942888815 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313358744 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198241584 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229769182 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197689176 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468440243 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198565531 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198199973 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201533934 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82786312 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203442666 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.76616805 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203931829 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.152826358 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203362676 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199183476 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197988692 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.481387923 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.780779099 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221784934 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197957228 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201309883 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199225154 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198598109 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231205744 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.437417115 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301277942 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213366851 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.197812038 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201784348 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230818662 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199259931 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.352036019 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220056208 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.59460222 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274732168 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.302015708 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759754343 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203064693 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198159068 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291181541 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318520961 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197173502 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197102215 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198080081 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197705022 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304199952 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197253407 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602365288 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203191408 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199326763 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257653793 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291667044 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196769026 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523161898 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202811564 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19722177 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957766178 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297699206 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197870039 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197417445 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196700877 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.59992818 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.754658792 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.405665548 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203502763 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.508315827 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204184711 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.615642505 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730061133 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816598236 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20455199 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305104941 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201903176 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198596472 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197420365 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197109777 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198543589 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226508241 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214651971 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256941327 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595356674 seconds)
  done (took 345.78452433 seconds)
done (took 691.018323277 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.897126617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849681699 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.982028765 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.864492833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852108473 seconds)
  done (took 10.57525334 seconds)
done (took 11.701972597 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383304667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.390563422 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263149191 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38508709 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232144599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.401961003 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366368695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224059936 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300282029 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285331565 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296431701 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255706196 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228165509 seconds)
  done (took 18.141909766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51085658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509526454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269739674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508658985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24353728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513447763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401398386 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421497757 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408283465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232359424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21393773 seconds)
  done (took 16.3635382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516082179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510483016 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268226508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519670849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24081644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507995255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398101989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41378649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407006239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229868744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211179862 seconds)
  done (took 16.351834579 seconds)
done (took 51.9843765 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208511158 seconds)
  done (took 2.337271782 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241197529 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402318529 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228545403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212498966 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208946083 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208843551 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213432842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207516099 seconds)
  done (took 11.053608047 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207439514 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207167286 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204152493 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207800011 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206010704 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208407634 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207339356 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203429824 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204713545 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206559343 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204975049 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205175768 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204901152 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204243373 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206577903 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20405492 seconds)
  done (took 20.422844311 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206722235 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204420527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.205126497 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20512654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205963617 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.205228054 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207421125 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204540795 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204926577 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204234362 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204500284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205039034 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204781301 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206525754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205440669 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205310545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20448741 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20488165 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210727892 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205484021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20526278 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203860237 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.206070057 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.206763167 seconds)
  done (took 30.064736146 seconds)
done (took 65.005322067 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.249785579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.811727644 seconds)
  done (took 9.19127263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.207821899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.208140696 seconds)
  done (took 3.547494067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206697187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207404976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207891239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208230417 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206971611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207889585 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207912311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207877896 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208561795 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208298464 seconds)
  done (took 13.208257409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208150108 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208603253 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205206338 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208051658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208985289 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205995685 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207792353 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20907237 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208595048 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20545208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20876047 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206471468 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208644882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207794796 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208750696 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205331931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.206793209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20727761 seconds)
  done (took 22.866475284 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.20936838 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207893173 seconds)
  done (took 3.547822936 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207124916 seconds)
    (2/7) benchmarking "second"...
    done (took 1.206212568 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206033172 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207468607 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207233538 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207543017 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206760285 seconds)
  done (took 9.580686622 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209621374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381923906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.460943291 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80823436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210884634 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21325119 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.05203299 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212939006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.216197153 seconds)
  done (took 13.898235877 seconds)
done (took 76.967981983 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.205936204 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217341807 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.34059408 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.221694137 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223105329 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544836618 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249276507 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334631923 seconds)
done (took 37.468669726 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.216499171 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.957596025 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.93234992 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218307082 seconds)
  done (took 11.239356975 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193480623 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.091956469 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197607803 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.179252555 seconds)
  done (took 17.792728898 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191061051 seconds)
    (2/2) benchmarking "read"...
    done (took 1.612476571 seconds)
  done (took 4.934075006 seconds)
done (took 41.311648348 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207832896 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207959326 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208300704 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.204573369 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208037005 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.205318131 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205918038 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209605814 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208326426 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.209491517 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.208851409 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209298475 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206126873 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206611147 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208761708 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206643343 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20624031 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209603483 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205081027 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.206380798 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209690209 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206804404 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206759483 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205607408 seconds)
  done (took 30.109478501 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20871748 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206807282 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208309722 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209155819 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205773983 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.209675086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20887305 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208770399 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209371706 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209476612 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207277814 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.205982693 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207878238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205889955 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209349371 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207359428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21054661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205697917 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208462505 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205037684 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208648113 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206133129 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206032558 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208197356 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208478325 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206204245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208874821 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.206216575 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208235421 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.205799749 seconds)
  done (took 37.365184129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213009832 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215814113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208319203 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208365891 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.207887332 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208463516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208928544 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.208181464 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208167345 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207567793 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209066708 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207812725 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.207953366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209135573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.208945359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210083956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209107639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211102187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209420067 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.208682051 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.207793898 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.207783233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.208880235 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208566537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20821787 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208261752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.20994506 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.208674525 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208297606 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.209315154 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.208792255 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208782742 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209082484 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208560259 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210057776 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.207581602 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213240309 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.215000311 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209661226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208675226 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.209233261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.209438458 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.209677885 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.211394822 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.209391554 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209019257 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.209883239 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208818137 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.209833744 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208640282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.209070527 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212479146 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.208936156 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.209313779 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209407604 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.209132838 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.208946323 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.210134997 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.209201162 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.210241079 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.209372115 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.209881339 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.209236561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209474929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20985664 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210706503 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209633687 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.211495063 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.209605018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.210041398 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.210714217 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209696958 seconds)
  done (took 88.217308892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209954676 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209772726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.208927788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210851186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208947378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210850681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207892314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211075978 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209990634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213784228 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211550023 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210070685 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208471849 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211634973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211153825 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21033837 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212201457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209544321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.211478041 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215810568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212107787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208612913 seconds)
  done (took 27.767509144 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211759314 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211388976 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209108222 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211820238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209742738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215394732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211142425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211963514 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211401595 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209906077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20920423 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212395535 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209804263 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21015896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210121146 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209796155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212998251 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210407959 seconds)
  done (took 22.932636944 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209859773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.210529626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212582458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209048152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.210754566 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211946535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210387236 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213707156 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212808039 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.211043145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214082963 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212117124 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.212802341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211601033 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213719979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212849186 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213516692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211313296 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213944679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213732938 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211379965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21437365 seconds)
  done (took 27.803577313 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214595485 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213947092 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211361836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210558338 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2117417 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214445219 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.215580213 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.210959781 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.214920341 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.214162438 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211954081 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213412945 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.210445606 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211983347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.212162907 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212008498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215137123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212782059 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21461377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211995763 seconds)
  done (took 25.394817467 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216316358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215210326 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214696344 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215663869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216266137 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215912721 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21577904 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215888332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21640212 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21680387 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215883768 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216932458 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215486672 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215719463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216709826 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215945008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216522933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216274843 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215717972 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215953375 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217285634 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21713654 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216832349 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217308193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21765849 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217383373 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216386061 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.218075415 seconds)
  done (took 35.195412517 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218040654 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218234935 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214275956 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215206125 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.214719759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215262884 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215587285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.215220412 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217107592 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216414755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.219423541 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.217835648 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218779475 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220166112 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2204556 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218911821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219431538 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.218494136 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216474043 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215641304 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21997356 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218439144 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.218758181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216785732 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215847199 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.21898693 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217806521 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217020104 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22303378 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219350527 seconds)
  done (took 37.671074413 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.238163165 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240018121 seconds)
  done (took 3.618261677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.218107455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221472067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.219413043 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217292391 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217829812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220024475 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219804133 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216908347 seconds)
  done (took 10.891211756 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.220679099 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.219782916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.220064419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22044239 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.219438892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.218921713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227542308 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.238562531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220914917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.221302635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224876951 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226428117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.223836427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2212715 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221370782 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221793349 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.220955699 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221428726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220920634 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.221477962 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221564348 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223328366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223250075 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.218335911 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.220817469 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.231541807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243216406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.220129898 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221694174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225055918 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.221074272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219375659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22085995 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.220679336 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.222960525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.221081421 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23145556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239034835 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227449105 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23899944 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222461864 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219287289 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224343895 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22376935 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225304103 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.221963961 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223195377 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219880512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222040593 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.224517621 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.226335456 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222978879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220255014 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227535396 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224411405 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230121621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.239506508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225381675 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230678821 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233943374 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.251719913 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244958715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226027897 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22372677 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232755093 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.243608587 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231220962 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238957872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222268372 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226143071 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.230792699 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252847557 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.245608635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224643355 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224114989 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.224338003 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225644753 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225588631 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232531898 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243491844 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224474925 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224273126 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234104501 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243574899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226088791 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224739691 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22517841 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.224617478 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226242271 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235167204 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244561258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22575687 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227666059 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22594528 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228914445 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226270227 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225241992 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226288588 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.222646151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226590908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226542288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229289726 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234779128 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226194552 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225967868 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.233065332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244867018 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227413274 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.233297676 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226631171 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226787333 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227583752 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231648056 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224087069 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229527691 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.233051373 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.226971288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227514865 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22651586 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228094803 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236800809 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.248850524 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.227314706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227384047 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232527318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.237096239 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227528302 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230520751 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.22828067 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225912485 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.227231335 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229368764 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.228383288 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229826752 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227370984 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229987807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226006744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228370949 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231425776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228654945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.2311027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.229202774 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229677488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232150923 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228178042 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230696959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237914241 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246695714 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231482994 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229869187 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227472834 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232937549 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233724921 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229899352 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22998453 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23017011 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22996924 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229766635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230834034 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230596517 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23108589 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230629991 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233187659 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229714839 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233628252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228779564 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.227255025 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230831033 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230247543 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.231580313 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231752187 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.233049327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235752464 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236597226 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23171448 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230186355 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233786481 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230654302 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231556865 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230108519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232604689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.237674838 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.231808871 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239293334 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249869855 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230812239 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231985912 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232369664 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231330447 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231441453 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.234382665 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237323427 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243227489 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252907651 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234003386 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.235072218 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.232938427 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235297813 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236641902 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231919488 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232176078 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23316875 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231864915 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232020865 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233883885 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232770631 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.232710327 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234050174 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.233794545 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.232830195 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233440769 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235341318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23392848 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232214856 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234747634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233552172 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233943622 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230711117 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232736596 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.234028094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.234269131 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2340386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.239500622 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.231877771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236178703 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235481252 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233989858 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233462067 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23532806 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235913318 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233686091 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24197263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254680409 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23666781 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2421181 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255101272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235519732 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238726127 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234880296 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233026255 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237040604 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24194747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239037139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235995126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23493246 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235588556 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235990692 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240968854 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250181696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236168211 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235702436 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236919143 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.233757905 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236731141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.237929904 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236737182 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238266868 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235777414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236197013 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237051627 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.23497385 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235670881 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235959173 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238066462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.241095583 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240556691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235641204 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.239759191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.237491433 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.240087549 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.237360966 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.238024607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236008306 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249428819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.257635256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243797198 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258266113 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238618016 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243309538 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254576374 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241224048 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237564429 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237894736 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.237998049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237282418 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235531753 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24058421 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238225633 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243139327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240761914 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.241918987 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.240768944 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240453206 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.237605052 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.237681432 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.238230507 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240868736 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238467098 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.243052783 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240694862 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238844683 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23994574 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24628156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26066011 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.240955611 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.241707433 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.239907452 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240782421 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242959057 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.241377274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.242016426 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.247137835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241727679 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.247525364 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242014868 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249621561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.24470294 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242760725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245816947 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237792683 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242553965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240166683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.240811876 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246700828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261688433 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.2405544 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.24261668 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240940423 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241154267 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.239920853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.2430406 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241218009 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241027631 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250108349 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261725033 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243986737 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243729134 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239524319 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241010288 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241784957 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.240898506 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244936123 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242110126 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.242140177 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242854986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.240903179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.2423885 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24126999 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242845334 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240074126 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243821777 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248935673 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263721509 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245381934 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.242234829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249536363 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259841278 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251425186 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26349902 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246116168 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246049487 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242493045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248462693 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.244930625 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246339441 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243885147 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244219094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247006536 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246979614 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.245139222 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244539448 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246879528 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244013335 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25381481 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262227099 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245125935 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246977607 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245649849 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247971104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24807336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244585095 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243154803 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246426443 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252057759 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250747063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247280758 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.244798838 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245768995 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24548163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244561502 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249682573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247326838 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245404934 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248704488 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245848168 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248843163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248715482 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249254329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249151914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248237246 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255296343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264977416 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246465169 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24709009 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.245610829 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249476232 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.248332554 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249310862 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246024957 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246960801 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250563721 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251882705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25214977 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251091737 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24779038 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.24756019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24677954 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247096679 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246799668 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24618538 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246584143 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247608242 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248329533 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247649926 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246426958 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249482259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250221278 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248977129 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252962296 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252172633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250701087 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.246298472 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25034998 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249690064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250611377 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247965905 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255861558 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270547762 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2578996 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.255449005 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.250841285 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247859852 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250699163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.256572123 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250391554 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251169189 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249627502 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.251924419 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252293492 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.253922747 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252934849 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258193622 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269624448 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248880144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257958063 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270748031 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251723825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250527637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252407685 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249523893 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246791663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249448013 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250196282 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256894494 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270049694 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252618305 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25487961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25170191 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.253093654 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255449747 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250576024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255183143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250161103 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254355289 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253525787 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253361578 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251449856 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253116179 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.25030649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.252398478 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.255389544 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252548321 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256655191 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254279716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255087649 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254217715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252039732 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252733284 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251530144 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253948591 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251449215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253081772 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254617277 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253577396 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253723374 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251370867 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254834745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253786057 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26028716 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257668762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254079253 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255346106 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252469409 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25713623 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254653909 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254207087 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254485621 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255809824 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253581009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255964862 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252012154 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.257579553 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267115789 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274141238 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256171545 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253385105 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256287992 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256264127 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255659002 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256516412 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258998895 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.257349349 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.257830836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25402251 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260787951 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273982622 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25530253 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.256729567 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258750169 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260355779 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256311982 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256089612 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253112419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257909632 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267453194 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257851524 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265309628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279848817 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274062172 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255966022 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254628948 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253768037 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258321556 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257356011 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257509444 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255805228 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259109164 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.256874595 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256270792 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260700539 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256051806 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257460943 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257630026 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25947976 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259111899 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255560556 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260449332 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.254655126 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259029473 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255336733 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254525826 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255138228 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267175038 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282049768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.256761182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257863093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.253376847 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262326011 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260364768 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265131312 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.262684615 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259138652 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257191889 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258758288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259432358 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253323507 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260052711 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259405831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257338903 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.25511242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270184153 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281523424 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261317657 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260966345 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258570374 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257299399 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262272811 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258468969 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257518544 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259374329 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260028103 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260354182 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258291213 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.261005546 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261245476 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.263020384 seconds)
  done (took 741.567082293 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255940162 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258111093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257680893 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258139587 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258092298 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258865265 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258822837 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2580735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258564689 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25914736 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259932429 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260220847 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259893763 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260939621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260697385 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259239884 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260157487 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260579757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260269325 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258715976 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260348849 seconds)
  done (took 27.619512322 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26049162 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26098708 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26321517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264427147 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260639396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263509365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261767315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263620051 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26233417 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261168145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264758647 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265157704 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.261267278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.261808824 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2600056 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264644769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264482304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258447871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.263686641 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259741141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263850292 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260540734 seconds)
  done (took 28.949019483 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261126087 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260259053 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26030306 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258745496 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26303584 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259105326 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264079406 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263443933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264647209 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.265977992 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.263889359 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.265381209 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.267842311 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.266132356 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.266342754 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264941313 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.410669144 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26627765 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264691063 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265091352 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260009236 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272009451 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.28043778 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.26524968 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264607008 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26453557 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265458017 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265982168 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265007778 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.264467252 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268965402 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265732467 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26441681 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.26446767 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264439285 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.263589922 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26635249 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265951599 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.260779598 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.264844084 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275345516 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.27989642 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266615415 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268643101 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.282852064 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.266258638 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.26599134 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.26925219 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.260582275 seconds)
  done (took 63.355387761 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263722836 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.264408855 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.264224092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264591473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266889243 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267356913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265286945 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267343552 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.264251265 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26364575 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267739178 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26523616 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264376085 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.268249626 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267295202 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262654552 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262770499 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261866276 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262267163 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264841266 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265755656 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266622945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265823188 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264000938 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265797653 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264566932 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263325505 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.266585711 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266275733 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266051867 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.269071624 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268414696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.26814619 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265288036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265114052 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267766551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.267354429 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264120684 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267971597 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.266896162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.268786723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260482597 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260421001 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.258805838 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257430613 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257384562 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259474028 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.2580081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.256509045 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.251580628 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.251177536 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.250494403 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252546232 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.248318103 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250989883 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.251596399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249909913 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.241397448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.241798999 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.239186809 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.239102732 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.242575509 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.242977924 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.245532759 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.243826951 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.236728351 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2368456 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.238266096 seconds)
  done (took 86.800787684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236555082 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.236285085 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236567353 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238032423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234872482 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.233302855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234925634 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.233587529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.234144431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233203177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234480747 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.235467065 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.231890482 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.231464666 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.23143493 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232042604 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.230856302 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232483481 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23378504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233606248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.231075874 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23072138 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229140049 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.230990486 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232506835 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231612648 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230903967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.232434681 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230534852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.229013371 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231583944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.230837346 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.231141883 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.230946697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.230715712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.231177402 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231392634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230083752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.231360448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230616924 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.231338983 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230854903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23132338 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.231991659 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231706534 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.230710567 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.230455126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.232485921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.230972905 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230890349 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.230695425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231200217 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22980595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230009014 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228925726 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.230083515 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229910257 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22951998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230292457 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.230106439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230350435 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.228751118 seconds)
  done (took 77.528163446 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22864651 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22815881 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.22520591 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.225890682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22892031 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227721411 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227666582 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.22724342 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227168146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.228321771 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229531146 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225920007 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226076325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228660296 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226557881 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227058051 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226183312 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225857051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228351654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225448487 seconds)
  done (took 25.692410365 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.226064557 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229189563 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.226712626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226696316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.228899449 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.227002312 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.228704805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229667711 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229318708 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22916936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228086793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231012519 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226769006 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227541055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.232603953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227181111 seconds)
  done (took 20.803403481 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.228096769 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.229465401 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.230315073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.231183977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.227932254 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.227815001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.230800592 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.228747368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.227992213 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.231605607 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.231463123 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.231008689 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.230023091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.231380185 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.22762383 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.231029671 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.230197285 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.228911996 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.231355864 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.231916965 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.229288867 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227598393 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.232706791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.231034003 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.230373204 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.227933372 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.228405653 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22729637 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.229976139 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.230632762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.227743293 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.228346699 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.229041917 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.227627453 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.23142356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2295384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.234667534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.232148806 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.229926269 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.232338371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.233104542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.23211666 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.231491958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.232646197 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.23132801 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.232313152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.23084007 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.231363413 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.231467352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.229212472 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.232554229 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.232763286 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.232206586 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.235895016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.234625223 seconds)
  done (took 68.832716911 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232838449 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235263167 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.232679305 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235739122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.236168731 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.233044124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235346565 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.232943474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2326227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233753591 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23265898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234438561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231535784 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232607377 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233116131 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234406058 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23255363 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.23320101 seconds)
  done (took 23.356346726 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231147966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232114947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.236316188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233606679 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.231994236 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237323958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230557661 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.23440589 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23418368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233880848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232342947 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.234972851 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234296467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235706498 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236404905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235563679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.23587472 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234483902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233317425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231929403 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235468492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233764652 seconds)
  done (took 28.303177131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.23085995 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.230341372 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.230692647 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.245710831 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.249191583 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.254209077 seconds)
  done (took 8.59576645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238371185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231299589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228770126 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232557365 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23101513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230879544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231568093 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229490701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232045969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229473208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229235684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233062047 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234643732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230997036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233011148 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232452814 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229799179 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231713186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232710679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234589496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232780316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232689511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231052712 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232074101 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23120129 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2324674 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23524749 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23239075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230738643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233820231 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235025373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232124904 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233626865 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234666202 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234344438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233820565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230445621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234271331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234704544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232112348 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234451305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234054611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23356688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231642618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234486483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231900204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232214278 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232456305 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231943625 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234965215 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23375999 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232291198 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235142858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23350753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23465024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236088399 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231667561 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233000807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23383862 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231995121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232188529 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23499411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235426152 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233412009 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235811241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232612593 seconds)
  done (took 82.543859026 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231902003 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232388012 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232526824 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23399715 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232867811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233635703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233776561 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23328024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233912872 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234298582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236155662 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232698442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232564581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233159665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234941552 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233620954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234873754 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233297948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234593185 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236837879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234232523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233018101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23418917 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234324984 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234629043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23650348 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234121397 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233945155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234100026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234770149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234609124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234778308 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235005954 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234311526 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236159459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234739741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234862274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234251202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234869194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237842105 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234765599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238135796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235138066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235295544 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236037589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234854902 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235056892 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235220643 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235192719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235246748 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235954291 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236350214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236507994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237070145 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236197079 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235482598 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234972701 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235676463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235758892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23868723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235607087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236514731 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239308913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236774216 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236392417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238258089 seconds)
  done (took 82.667167088 seconds)
done (took 1714.709205835 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.231422586 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.290695295 seconds)
  done (took 13.678878561 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.402199879 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.352841157 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.237139756 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.243026625 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.237551917 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.234973895 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.24107441 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.23748343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.237106977 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.237081122 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.236718843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.42635187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.289661932 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.238593833 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.237819696 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.331192773 seconds)
  done (took 41.588816794 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.260117561 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.249226006 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.348284115 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.267245558 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.2683594 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.41844311 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.30194122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.253655526 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.403117467 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290920432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.718150255 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.276377386 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.254055027 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.291606645 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.269643617 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.423033591 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.4832151 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.7276228 seconds)
  done (took 28.663548414 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655707602 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.255269311 seconds)
  done (took 9.073327638 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.253989175 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.260893502 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.250801235 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.285635629 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.245146963 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.267421663 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.288596024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.290520728 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.279142751 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.268870132 seconds)
  done (took 63.866686839 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.265611401 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.249307684 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.247316445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.245506899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.238780143 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.245201973 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2457208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.241837858 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.590608056 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.368400885 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.271191266 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.253738183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.263739023 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.248233801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.244842354 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.282220471 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.421658626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263884203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.244120896 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.253405376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.246480684 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.381662761 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291232731 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.251782543 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.362854277 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.618747748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.257077042 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.254696614 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.408430869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.265289351 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.246848712 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.248002456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.249011585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.798381734 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.682742724 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.266602103 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.271218706 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.257165884 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.246564999 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445954846 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26778026 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.255071833 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.246405232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.660975706 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.404896003 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360692696 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.402361175 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.257167387 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.250244976 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308283274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.254193963 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.249739497 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.277650626 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.988794541 seconds)
  done (took 106.08626894 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.265854421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.728595429 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.410637532 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270597072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106426289 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059388297 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.26482751 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.506925502 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303415946 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243262633 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59084866 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.74395251 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271828175 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.293927652 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806721441 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.253326441 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244500327 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.046837905 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.264779138 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.247463452 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.655406396 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265098234 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.251168986 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.496995812 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.281886146 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.696185764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.628129956 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.764292305 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.265725467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.24272335 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699208361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.270820996 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.31678746 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.244519869 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.508591503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.590849794 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582759572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.26758394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265335756 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.244931119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.269271504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.687677723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.59335183 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.26806673 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.251483456 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715815451 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268625921 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.253825493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.252165747 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4504633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.211701502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.25211825 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.629667664 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.252942488 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.497322773 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300654069 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.260651777 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719924384 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26767175 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.408857446 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304643484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.248007069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2495581 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248905291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255950534 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577857641 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.316214959 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.247062277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.578240942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717723461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268044206 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778828956 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.155326496 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.275508017 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.286296256 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.247526583 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.855525758 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.738267069 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.281681907 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.246535304 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.563792665 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273428883 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.559091095 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.268624957 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254843295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.690079999 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.278045573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.2737228 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.247699832 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.271106521 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.061733362 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268122459 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.511648015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.284575645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.248269398 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.247249243 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.264081551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247619723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.255961213 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.250043253 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.759836614 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.270068359 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.532013473 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27570545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261514868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.256252176 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.252104559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.248263638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47046512 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.753824374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.256903834 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249055613 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.249596655 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.271386718 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.468980104 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.253890599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539245857 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.274604408 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249645565 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.258337089 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089480554 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319282284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248849176 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.259579153 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088939646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.478584294 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.273164993 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.257946086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251185875 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273095827 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.540255085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.257836917 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.328807874 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.252742007 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933198417 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286319984 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.278446257 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875842878 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.259765346 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.18835997 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.281618959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249757105 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.561380024 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.525148579 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866078803 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252607836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.257932509 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932662954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29941255 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.390664157 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273979455 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.228177302 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.448058905 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.276236398 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.251349594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.797764868 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.253214501 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468816708 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.25901755 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573890875 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.739025904 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.274630658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260173744 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946489967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943301541 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.867665611 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.256614466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577037908 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.254842278 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.703628392 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.252210329 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.25195794 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.880742056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.260429637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256047475 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.25252497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.254659912 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.314761443 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.426458462 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.974672137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.259490202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.697831113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290969641 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253018487 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.260754025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.257998423 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.604809171 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.306551573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.260812192 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.285495937 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.255743341 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.261322606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707795155 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.207224702 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.263043432 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405616727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874127682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.276394582 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254956837 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.903797364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.616730944 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745723077 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309811217 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546197744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.280138018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.293296083 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05377088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336131032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752117247 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276572528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.277793631 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851678802 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.277302803 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.317408925 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.256296461 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255480845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792628378 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277876605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.262410699 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.547927359 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.262992428 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508074725 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.260911161 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.281444335 seconds)
  done (took 1094.467434536 seconds)
done (took 1358.580572206 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.256674641 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.26123973 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.243737132 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.264401317 seconds)
  done (took 26.206185413 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.265964553 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.261508222 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.263679895 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.261351144 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.264455228 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.261955263 seconds)
  done (took 8.758342772 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.32617431 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.26248172 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26266144 seconds)
  done (took 19.031388898 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.465853892 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.539173866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.606300314 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.363886462 seconds)
  done (took 10.15643899 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.264153372 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.263922452 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.263336498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.26669467 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.26737 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.268164995 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26592743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.264694634 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.268290076 seconds)
  done (took 12.57223145 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.992181429 seconds)
done (took 82.894150197 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.242030394 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.670791364 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.600430865 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.869944787 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.59375623 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.97681499 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.259075289 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507501796 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.456611611 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.908094405 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.313940715 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285713294 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.258558973 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.358166893 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.437525151 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.027713616 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.26050295 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.6663644 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.024701278 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.285650275 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.140602198 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.286584731 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.955789348 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.812401301 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.388751627 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.799024719 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.272966074 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.270943759 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.463264631 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.789330527 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.270224785 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.264896444 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.617549415 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.289885086 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.274258306 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.610043644 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.34632544 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.373320149 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.267831049 seconds)
    (40/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.541019424 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.942215831 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.27515604 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.595898367 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.467526249 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.268147668 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.243181557 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.327178475 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.271937156 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.61663106 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.781635856 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.48790769 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.854642159 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.644275178 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.284504381 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 6.286953636 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.263803044 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.636321283 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.686434492 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.487006368 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.301995234 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.269932944 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.296120398 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.991952004 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295123254 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.431756363 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.484755635 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.61420844 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.312220758 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.262669321 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.259072093 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.893313081 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.151464096 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.089580889 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.380955058 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.103895516 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.280521378 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.141055811 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289844166 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.147645806 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.264288971 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.286843918 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.162630512 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.283537606 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.669065288 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.469366523 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.263930615 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.273421611 seconds)
    (88/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.356562344 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.155597904 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.258421985 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294181791 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.553999218 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.502948302 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.855224053 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.274015164 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.350456063 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.021185988 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.264275005 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.265101122 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.312798065 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.398056864 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.560872952 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.676647624 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.441386591 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.265053 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.350080111 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.30473934 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.642720345 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.480128039 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 1.785764397 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312043182 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.273724083 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.355811396 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.575635509 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.373088674 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.546095691 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.247554917 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.571706479 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.005963183 seconds)
    (120/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.526849276 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.735067089 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.628882472 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.819130785 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.291922284 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.247678274 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.909913621 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.577609213 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.377170737 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.247659725 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.261353 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.265581876 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.300121341 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.007292767 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.292975243 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.62839382 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.274521545 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69621987 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.358530285 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.261958747 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.249138026 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.583991565 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.35852756 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.667260297 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.120723376 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.588913646 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.247170642 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.306129112 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.856465018 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.306372704 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.779188922 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.581279106 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.284722422 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.662300533 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.569319536 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.467102162 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.534257575 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.387539089 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.060141558 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.353906031 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.294901348 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.692279319 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.794233247 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.25631855 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.393155104 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.369420326 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.474384703 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.269431535 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.980581471 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319491652 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.669175373 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.524686866 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.987164466 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.529669319 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.793182778 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.284665628 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.830471478 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.659826513 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.714576266 seconds)
    (179/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.989052451 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.477622552 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.288238187 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.296682692 seconds)
    (183/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.252815404 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.291517551 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38155777 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.337217842 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.581339554 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.318013141 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.490928882 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.082458639 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.806528803 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.353588368 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.337812218 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.074078772 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.568099411 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.377310768 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.257997306 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053950317 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.062675915 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.552702258 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345586325 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328013201 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.613591882 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.569331422 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.289375613 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.100543891 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.692815473 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.404721271 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.54776403 seconds)
    (210/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.361668792 seconds)
    (211/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.427216049 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.922465368 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.480049132 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.275208205 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279186859 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.631139842 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.323541644 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.294220417 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.659838941 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317901446 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.374803637 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.253049166 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.725388173 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.36175678 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.335167568 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.994139448 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.913105479 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.256774123 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.18201917 seconds)
    (230/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.645711847 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.104980376 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.273658469 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.273324849 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.302132408 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.339811765 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.476345055 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.745885044 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.295180283 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.635535912 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.316698783 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.678024137 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.40094498 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.320660358 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.649961991 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.812339283 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.376854212 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.105639818 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.274725267 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.35850815 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.401788196 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.89740177 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.620646677 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.31823352 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.427464489 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.270186382 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.354426652 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.500269715 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.396572938 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.299472883 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.275271583 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.968884888 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.35910034 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.300745774 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.294451999 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.30264421 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301030929 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.270485959 seconds)
    (268/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.78882159 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346335713 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.662469611 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.325480606 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.086547973 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.42831849 seconds)
    (274/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.056832407 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.085724623 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.878886564 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.264039254 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 5.572013036 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.842432903 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.458000536 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.545816464 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.291176597 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.436403007 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.275135809 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.731758656 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.339276097 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.35978986 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.358162257 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.302527195 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.393434675 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.907441127 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.98072666 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.112169069 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.822487402 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.110875909 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.622838734 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.598238965 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.319029619 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.015271584 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.876409555 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.502029522 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.306896722 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.401242962 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.400410459 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.624670102 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.291953602 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.393570941 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.154759988 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.304449922 seconds)
  done (took 896.49389364 seconds)
done (took 897.676121307 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.310154474 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304673542 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.288129205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.30931896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.401305325 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.314359922 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.298446826 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.292139904 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.337474519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.339071319 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.288552362 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.312963177 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.291278373 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289810537 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.28839591 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304084322 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.289467519 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.290409199 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.30614156 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.297945196 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.306082992 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.288900144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.338727552 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.312978361 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.293839982 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.291695138 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.293736041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.30977409 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.401455049 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.29302525 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.291333587 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.302224638 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290801913 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.286942031 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.286455631 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.310509889 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.301818817 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.299927073 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.29421517 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.322482181 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.682530169 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.306770859 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.291761396 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.290813509 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290428641 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.294702019 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.292908324 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.296784548 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305252018 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305516579 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.668860192 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.322663277 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.294484802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.291695536 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.302323642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.29164198 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.295162929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307951226 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.312128429 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308864817 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.277348106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.297696897 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.294756998 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.309073194 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.299972363 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.706416537 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30458381 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.298187282 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.680049854 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.313725623 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.705014213 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32105601 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.29426574 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.307356204 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.325467758 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.298761599 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.295108671 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.293864493 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.301645587 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.292511727 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.303415029 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305945512 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.298332066 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.294795348 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307979938 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.318958138 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.303961486 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.296318603 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303625854 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.314975904 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.30209538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.305549734 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.296329295 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.290766033 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.305227359 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.296700331 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.2978183 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.297134331 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299468382 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.304949005 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.677565094 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328096921 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.290350417 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.291719732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29360342 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.309147947 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.678492735 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.312344097 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.317440445 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.343185626 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.296255417 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285291295 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.298246826 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311719794 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.304396379 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.300090785 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.292218609 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295662285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.67740386 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.327298227 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.297042967 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.295143111 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311795878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.29846071 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.293395163 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.307652682 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.306657538 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310462503 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.418099358 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.308440813 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.329140099 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.294944553 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.29984087 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.325107327 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312786241 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.328574603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.299814037 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312502046 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.313019977 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.29336173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.308556844 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.306381048 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.298228084 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.30268911 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.292693682 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.321600787 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309984657 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31006493 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.318350001 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.419041001 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.296282903 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.299304672 seconds)
done (took 218.761548521 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.355186933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.295531718 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.379833659 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.295465253 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.394353897 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.392966315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.290998025 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.291973268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.292258439 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.671845368 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.291752614 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.292969282 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.294067492 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.291952605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.375827708 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.294511285 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.292402559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.635995715 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.294750395 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.365952192 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.290512702 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.293208535 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.295782219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.677424196 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.292881736 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.290106432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.367405679 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.296728474 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.641793089 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.294335225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.292918946 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.641945114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.38569393 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.31451735 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.306383747 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.303859135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.395434369 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.313807082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.377387218 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.375685539 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.380449186 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.334691612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.29080617 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.289540039 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296774922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.296395912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.294883697 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.322932035 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.294574935 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.295625609 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.636760668 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306265468 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294741929 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.295975694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.294875837 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.326829267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.295823391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.297042444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.387182179 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.297567352 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358326799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723021589 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.675102404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297480817 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.295607944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.295742429 seconds)
  done (took 145.924672937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.366286912 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.370543838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.405725041 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.321340155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.349169175 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.413354394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321542719 seconds)
  done (took 10.760001842 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.304216195 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299541579 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.348058752 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349403596 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.298588572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445934642 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300443028 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.310571451 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.297762971 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.351498938 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.300450292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300168378 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.306653088 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.299511682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347039984 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.311353266 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413683852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.300369193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.300870662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450111536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296422584 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.306920413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.352442188 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.311128494 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30206498 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.305594991 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866045733 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300748207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297153845 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.301443722 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298840103 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.338888542 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.301042317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.297103865 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.298230031 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416515231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.300647904 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29855399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.302037632 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.297693117 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.300906285 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.301952044 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.302438499 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.299269583 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.301831127 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.323608344 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.301383733 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.301809822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.302972803 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.302706783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351377048 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301701136 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.298413632 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.299745953 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357565725 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309319552 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.303677033 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.299870135 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.302879481 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299459578 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.453183122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349242368 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.303259921 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349713253 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302176972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.304271594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.303153055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.303164374 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358132641 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.303396055 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350846895 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.302044764 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.458018115 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.324580376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.30356094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.304957863 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30538541 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.303728369 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.296349669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.309583747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.301909709 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.304174289 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.308809296 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301740023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301821793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.406572328 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411853787 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.302702548 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.316717526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.310956779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3036629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.35696013 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.304174646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.303503588 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355486011 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418161539 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.356564657 seconds)
  done (took 150.059561533 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307552074 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.312005552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.306601158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.321449944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.305194077 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.304948304 seconds)
  done (took 9.076442714 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.307151564 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.306563604 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.306196352 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.305556293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.305333183 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.305312771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.305421731 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307433079 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.308963186 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.305937787 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.306320245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.306931636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.307219214 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.306695861 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.306498648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.30655765 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.307416504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.304474033 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.306917581 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307613173 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.405795388 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.306588683 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307112139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.306221482 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31071782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.30767509 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313400642 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.306729842 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.30773379 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.316010548 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.326428757 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.307237285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.308230996 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.313978067 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309951151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307840168 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311354934 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.308861767 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.305365304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.310096351 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.308314405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306917737 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.308352698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.30992081 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.309941508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.312910208 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.313419792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.316652815 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.309452221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.310276323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.311158744 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308521021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.309222201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.310239301 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.310483788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330542715 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.314575321 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.3108678 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.309776419 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.309534717 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.309918557 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.309462278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312126206 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.312378234 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.317719609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.311600494 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.310395565 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.313638073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309975706 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.309427767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.311006177 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.307819905 seconds)
  done (took 96.615106826 seconds)
done (took 413.64262618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.625395444 seconds)
  done (took 7.848209982 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.376086836 seconds)
  done (took 7.601861044 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.441090587 seconds)
  done (took 21.67331083 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.375483102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.428336442 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.306396277 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.318626936 seconds)
  done (took 26.654010621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.604089374 seconds)
  done (took 7.829064966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.309794052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.316523615 seconds)
  done (took 13.852055287 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.772143367 seconds)
  done (took 7.996533778 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.649548274 seconds)
  done (took 7.879219304 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.320364004 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.325755225 seconds)
  done (took 14.129789167 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.286245517 seconds)
  done (took 7.511950331 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.074848846 seconds)
  done (took 8.300946017 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.320269125 seconds)
  done (took 7.548104301 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.370597015 seconds)
  done (took 7.596463105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.160204121 seconds)
  done (took 9.385322555 seconds)
done (took 157.028432037 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.304386987 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.313655469 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.315335823 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31563193 seconds)
  done (took 26.474767387 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.764061933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.34706839 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34763198 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.357300491 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.348674256 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34653045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.339080324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.339223631 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.358275993 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.349909219 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.350595888 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.35075253 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.346434683 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.340130642 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.349880173 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.348996697 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.358834671 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.349711145 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.339427258 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.351332217 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.315496591 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.359461662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.351487341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.314941108 seconds)
  done (took 33.952692731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.834473952 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.385609795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.467718102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.366615 seconds)
  done (took 7.282268735 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.367807494 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.368117542 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.380003316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418768437 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.453441699 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37882716 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.343204959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337330323 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.323501433 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.368555972 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.444741149 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.385731848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.478287241 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.316051677 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.504939431 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.315783169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.315275048 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.368099787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.41957212 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.433731915 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.316817397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.36831036 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.372700664 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.386384506 seconds)
  done (took 34.394635098 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330790054 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.326514825 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.316179664 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.315836603 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.336930214 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.317634393 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.316328569 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.318299806 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.317272708 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.322715616 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.315221939 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.330897494 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.316572608 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.316288837 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.322911437 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.3179485 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.324215328 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317061472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.317093199 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.319838454 seconds)
  done (took 27.64874127 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.309771534 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.164322414 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.661542719 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.566233103 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.312053664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.318609511 seconds)
  done (took 27.562471918 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.385295746 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.541163622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.326127644 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.662706927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.764325559 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.343625727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.318620375 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554126882 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.859865132 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.85429631 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.380638307 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392009443 seconds)
  done (took 19.615214074 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.316482418 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.321734574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.323678858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337329526 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.371888831 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338857181 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.324698027 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.31237722 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380418337 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.39300532 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338967119 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.372771819 seconds)
  done (took 37.365180216 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399883175 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361167991 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.271072888 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069131733 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038635323 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525201872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.064576086 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743219481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327479852 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588527544 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294314855 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429433327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.569731861 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314254471 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338419628 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300589163 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565051068 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798732724 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32591253 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.166557867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34769459 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321938669 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.258066666 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35153596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526921478 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293863612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.576637502 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.090763964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592538961 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335287344 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325815238 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316750325 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588783233 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976850115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438063668 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325057096 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021154382 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869836962 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.294590319 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.259485605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.052421657 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325837489 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326057396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316691213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250492313 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318492962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753230449 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330203403 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.027129276 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318283152 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327377523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411022922 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.321961622 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307499718 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332699397 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321973028 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.315770824 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323357073 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890654927 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645017868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33241023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.260637656 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702802927 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256950822 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951291373 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.444782771 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.320451368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321197363 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253310681 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.169720368 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343955741 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466394539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343947507 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966579032 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010434569 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33810111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274940919 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870630506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334777201 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.260562166 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54592484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095235268 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25436792 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262027664 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.252512867 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035275771 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327628084 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.714321039 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327362276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.741463525 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.330822036 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336344931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343288895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543134176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.197945639 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320348149 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.109337347 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473998554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341390625 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746119749 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263696326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.323007286 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577531493 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.531496878 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328918032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321250854 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54845591 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336264485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343875031 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320526417 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.339837899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880369721 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358751928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646385441 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346988969 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.097872188 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061026183 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335887581 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.430642799 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.329569522 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577964696 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.10723468 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489062841 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389028176 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323559091 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321856703 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.279989783 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180511775 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.218561984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.319000521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33105156 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.339488587 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.322078214 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267449635 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.31906071 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340937482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.109984532 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544637952 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33449472 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608020435 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257537604 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470545806 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333582354 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.546242725 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52561117 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.347936014 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581727098 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334920592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330882751 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344262011 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342894687 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420882276 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34596166 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.332267973 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588109871 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.327662956 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32763061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.312010514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.109718037 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327425376 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.329746344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.160448477 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891269875 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325918776 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332013642 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21365267 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.338853125 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391932669 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330286081 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334741749 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.095232978 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.159984921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.338790562 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.327915005 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555828488 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33528999 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.297250308 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414857295 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.51783521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893297059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362371692 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.260298528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.037229408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.018848867 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326794399 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.515081329 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325180921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336049809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336025959 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.868305588 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897877812 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353536002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.215464766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.339445242 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336832478 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.33235304 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325973183 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.072857546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710261576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337482236 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.346552009 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470292769 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.341568917 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260555728 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.842795888 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331932501 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327802136 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.109176576 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360651158 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.201138701 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804399048 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586591504 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.019722128 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34700884 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.389329329 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.367320898 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.329190553 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.144893145 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35750571 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.350881067 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3452481 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.339852755 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.317714903 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.774879939 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89731757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032899837 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884474863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279282095 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.342155595 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231758068 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.757337945 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270338535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985310819 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511157262 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782306511 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272233708 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524275137 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541995438 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101478358 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347431683 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556339853 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251183897 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.16144011 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366441005 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541234974 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364431704 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333502808 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267215731 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.609931894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559578255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.117182393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417001574 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762888606 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.17464399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.13445886 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.328521397 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.692678082 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51602944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968006801 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718548819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331415642 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343100036 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809663605 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340410573 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858408681 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945020484 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360381492 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.534214659 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267987205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340256506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342255929 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.326078597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.591589942 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.340320924 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.59585629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342605083 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266489519 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338149707 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857651648 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.204163496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.337380642 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333410735 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095488784 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336347742 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61878715 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343887981 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.077419751 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360110178 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267257294 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265115923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026216537 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335520747 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307903589 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831639642 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.714406087 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332724873 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366060693 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18586625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588438019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.346462853 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909256601 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574538361 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.143596954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355379182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.432643383 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.204863768 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.342753648 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214246546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568938263 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172522894 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55906696 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.322529601 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.23366275 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332149986 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54620414 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.216583185 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341124402 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582231968 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.069510524 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.345830806 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027542916 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375691465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344884707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354584511 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.725907183 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341659302 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405499596 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345986209 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.345319635 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.345495682 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503778737 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347940872 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345374233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.349395959 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428722194 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701515709 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.086957267 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.117759445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914553603 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077829503 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926985326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373990131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33658545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338292559 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269181121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485063616 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86279656 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609923831 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466190861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.797349711 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362737947 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.196369128 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372607452 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556372881 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610805994 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.208163363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343498509 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002950749 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.232018771 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349427834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.547893783 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839819936 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903722446 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4635267 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348174913 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.771471709 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613173722 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426373505 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338335724 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926376429 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.354562854 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.707924075 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.364234598 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342728264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493556467 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347846095 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991071035 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365946061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.497828491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.111325651 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.336146846 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60297532 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.796905199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359753693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919260989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048759187 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610776306 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411328737 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35029625 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.450241787 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484808306 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.350555276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.244334495 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339437695 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182399249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.050653685 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351651365 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916411516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627167518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337866062 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.337944727 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386524719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.350000408 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563412283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050036013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563867958 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350317432 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342330358 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.909928142 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914137419 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376832062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276012324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.344863392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577084083 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602135962 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365548135 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794757654 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.052100803 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891651654 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.313165858 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362522994 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33987507 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03861122 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926507042 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.1192655 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853116604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999617039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349047811 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625035703 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.347271744 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352541849 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627131461 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.346242473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353683365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361291478 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.920237289 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1202256 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.366686182 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.279946926 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.287854888 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.568912731 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986279301 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287749689 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34343675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.518457783 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353089385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472396368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355114914 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.340529113 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35447583 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.106076025 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626311693 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.34822444 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.336306439 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.244247517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3541154 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358768194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581728461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356515557 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.022852656 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.697913533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605225737 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34987936 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.356673423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354335975 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350197836 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068870104 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318987399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.876580192 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930764789 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.352308134 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368793686 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353819105 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565541808 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561786681 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358026417 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371577872 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364033581 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374296399 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.249479482 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117172816 seconds)
  done (took 1580.904032211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.372882246 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.359131954 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.380328924 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.421481293 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352508167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431526518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.362595863 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433404396 seconds)
  done (took 52.382786273 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35571329 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.510807156 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.391031732 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.354339109 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371587349 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.354994097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.816332664 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.385701713 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.369823296 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.362018013 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.363426958 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.373726628 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.010832489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.368442921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.353634704 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.345944024 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.368938838 seconds)
  done (took 65.72804227 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.352023232 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.891702002 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.444250564 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.363368048 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.369361956 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.386173205 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.10284 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.385142555 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.359621249 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.650098845 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.022687891 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.360671461 seconds)
  done (took 84.958126764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.359259607 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360745792 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.361711768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.359763719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.360735256 seconds)
  done (took 8.071746119 seconds)
done (took 2007.567665734 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.617912262 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.027064058 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.985809766 seconds)
  done (took 5.282898227 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.500725528 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.548988652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.669329561 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.674913951 seconds)
  done (took 7.66611805 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.636628949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.736587268 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539513987 seconds)
  done (took 6.183441049 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.744161506 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.364505703 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.499434796 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.353697376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.360245313 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.363638934 seconds)
  done (took 20.348031468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.357797174 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361268909 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.357632205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361703838 seconds)
  done (took 6.710964446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.333752228 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.047749254 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.335376066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.349441226 seconds)
  done (took 18.337309401 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.106072774 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.115526589 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.102978856 seconds)
  done (took 7.596376313 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.357759497 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.203078301 seconds)
  done (took 9.831710149 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650965249 seconds)
  done (took 2.922114148 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.489504008 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.683983326 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.370239973 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.322416924 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.399705711 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.090852356 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.954190158 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.555291442 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.321009041 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.478879563 seconds)
  done (took 27.940532403 seconds)
done (took 126.313695207 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.196896864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.733739989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.551464043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.083631986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.582933901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.552784283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.576419193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.097789856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.642573312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.673837545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.136846395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.583525807 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.52207902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.725224979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.52197789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.601446654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.584063331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.246303383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.845616745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.973119144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.575828441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.71932692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.957383782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.78570161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.595635147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.507436914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.303723332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.601684902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.946250089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.370044529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.516351465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.14278559 seconds)
  done (took 192.727910713 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.355640693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.361519585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356813267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.356897879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.372586618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.38235528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358345371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.371541627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374127592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.379031317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357596003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.357419589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359993433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374076174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359740197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.358222789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.357316032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378262195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360541483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.359127595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.358134504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358863366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.358738402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358512605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.36981815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.373166882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359262855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.37521377 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375952933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.37818841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387772857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365466619 seconds)
  done (took 204.984967265 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358331847 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374397687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.375575747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377766128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.358764427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.381587425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376422154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.358644671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.35848049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367963759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.374461042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.37488506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359190713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.358830817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.361594509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.379119541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.364811844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.368606173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.378854728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364112331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.360514256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358868369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.360476812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.368960001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.360982822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360118275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359626318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379523166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.361673075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.377859054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.372417697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37165656 seconds)
  done (took 205.042464844 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.555507244 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368325413 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373447596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.304544761 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.369720055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.368081234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.360802104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.565396645 seconds)
  done (took 14.543741074 seconds)
done (took 618.570933028 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.642711511 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.355826633 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.567513463 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.390485946 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.138018091 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.414442257 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.389895972 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.55514674 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.282890788 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567451621 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.614895047 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404255449 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.75532016 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.387840806 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633271425 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.48713123 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.261053504 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.374242658 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.707510814 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.901966272 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.654302176 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.820779796 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.569134463 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.27654769 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.773653359 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.822694655 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089690302 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.247092288 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414220763 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.698778929 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.050713545 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.354713928 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.44830063 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.448404758 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499020716 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.4931293 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.329239336 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.450628132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.597421002 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.592103135 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.908231573 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.111672789 seconds)
  done (took 92.762722565 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.354652641 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.353629331 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353390837 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.354348358 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.35574822 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.354008531 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.353669057 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354932618 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.354513069 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.354222176 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.353768856 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.354445458 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.353907789 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.356460144 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.353135485 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.353336228 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.355406479 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.357521474 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.355009777 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.353447245 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.354119698 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.354434193 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.355669505 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.354626488 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.355494998 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.35748351 seconds)
  done (took 36.505857118 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373135081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.625126929 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.781872373 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387911876 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.374746098 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377953219 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.450762263 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.383420974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.376831307 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.37786496 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.541424775 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.382051559 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409461844 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.810987836 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.386292218 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.374812755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374489185 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374270465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.63381781 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384845654 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.473118039 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385213734 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.451196331 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.395624722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397877296 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375210784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379620196 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.899623761 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402551103 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.543478726 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.161566312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456580621 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.856774735 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.821028564 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.16698702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385827667 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376815482 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.54624783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.378103944 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377013892 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451722872 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.386506445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.796068121 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.001208336 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399169645 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377053623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.917619096 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.573856568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.621286279 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.393381682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811547544 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388521307 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.378681287 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379150399 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.616387542 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.393314184 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377044016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.908405492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.40808582 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.453359198 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386181354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378703721 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.640540036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378922792 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.628855408 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.379474257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.386849264 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397320547 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.792571844 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380670329 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.015180057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396535818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379524656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.544551665 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.628325991 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952934115 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.40842143 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.64381863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864205601 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.477818435 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.390735571 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.88867247 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.482633785 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.392968871 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.380982462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384266551 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37997466 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424912338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.454007472 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.950170708 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022642859 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.934059304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.48377601 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.402167854 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.380477733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.909909399 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407795216 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.38221719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.790252398 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025177086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406871172 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.3876025 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022643257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400662742 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.460275916 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395467903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.802714889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390738786 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42798793 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.38033437 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.387769995 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402778797 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.458058671 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391535068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.38279904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.988527241 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.570057012 seconds)
  done (took 181.318025687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.374164333 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.374767337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.374917693 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375212244 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375448157 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37990509 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375048015 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.37635275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380369324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.374752015 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374043535 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.376206774 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377655622 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.379753096 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.406602178 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382693221 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.987554818 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.376376839 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.376950463 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.375875273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.168982215 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.386796844 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376378058 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.375392372 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.380662298 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.375666141 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.391471059 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377214853 seconds)
  done (took 153.298249846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384163501 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.930488259 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.400306423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.512007137 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412738557 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.380995319 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.509195261 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4398853 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.402157494 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382492122 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.38175647 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.677957119 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.384654925 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.890274486 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.58089677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.537519174 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.896914248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401487177 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.381910886 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.383414013 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.51480321 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.396446034 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.681952901 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95192089 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.411663183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.942070366 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.378100778 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385274419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384077039 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.942584679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.409395894 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.682470634 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.460995604 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.45322889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.960625406 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.920838226 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.921189924 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.539052945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.393362963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384157564 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384911594 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.371073856 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.942328514 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.412543901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386487848 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.934273078 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.413614741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386665301 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.393711199 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383571753 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445226344 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.460419268 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.70379625 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.960252652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.487060609 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.416647322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.514647172 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.774260529 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.398635901 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.896806922 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.378659487 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951116513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.414852984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.3703791 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387237092 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.392525571 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.532556344 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.526037961 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.907968273 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.414514745 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.896203101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.560448732 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.396940594 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.385665639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.388303477 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950042081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.923724072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.559791274 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.528615574 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.585810996 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.383188194 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387588995 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.372998536 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.462189573 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.399297221 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952441278 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.92432477 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416542132 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389961507 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390645465 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3894751 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560215976 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.978451807 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.491771272 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.897576238 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.716719267 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69720803 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390582491 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.448800354 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.403302403 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.692555308 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.401171503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.446967862 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.829972691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.702676546 seconds)
  done (took 165.327538046 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.626138552 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.652478416 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.480028845 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.515510106 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.984624207 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.96216864 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.619337619 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.543613121 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.497828979 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.644036066 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.537211841 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477736225 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.554472191 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.472814751 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.12264786 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.483785332 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.496078249 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.532733769 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.500599544 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.427047336 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.028018623 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.668289555 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.566966206 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.315213419 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480896417 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.185811191 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.954076225 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.953430238 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572671253 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.734326782 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.944377578 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.53823335 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.356450897 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.076888547 seconds)
  done (took 66.807193724 seconds)
done (took 697.295566192 seconds)
SAVING RESULT...
DONE!
