cset: moving following pidspec: 22645
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.279239435 seconds)
loading group "string"... done (took 0.627263886 seconds)
loading group "linalg"... done (took 7.603285765 seconds)
loading group "parallel"... done (took 0.157950564 seconds)
loading group "find"... done (took 1.210195212 seconds)
loading group "tuple"... done (took 1.806496118 seconds)
loading group "dates"... done (took 1.266686667 seconds)
loading group "micro"... done (took 0.222129684 seconds)
loading group "io"... done (took 0.902919747 seconds)
loading group "scalar"... done (took 37.95092951 seconds)
loading group "sparse"... done (took 11.83977645 seconds)
loading group "broadcast"... done (took 0.94490012 seconds)
loading group "union"... done (took 12.516842755 seconds)
loading group "simd"... done (took 4.469955286 seconds)
loading group "random"... done (took 9.074291211 seconds)
loading group "problem"... done (took 1.833092713 seconds)
loading group "array"... done (took 20.730742124 seconds)
loading group "misc"... done (took 1.711088389 seconds)
loading group "sort"... done (took 3.293640877 seconds)
loading group "collection"... done (took 17.20115454 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.517026552 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124327943 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132985089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120149126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148353352 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120238912 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1276088 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087179918 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.82514595 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147500899 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116015229 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.39896934 seconds)
done (took 5.317175764 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178669259 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085453095 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085757513 seconds)
  done (took 1.307222717 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067955794 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127029883 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070931706 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070460835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069871065 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069979355 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069964317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072335134 seconds)
  done (took 1.687257672 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076176436 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071852758 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069789116 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071550761 seconds)
  done (took 1.425559529 seconds)
done (took 5.815053885 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75329188 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215911454 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187595173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383214812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131348672 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.174230608 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645353471 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320472835 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193294679 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081227139 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111794146 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345375732 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124409813 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638758471 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0766139 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091833228 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140941519 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428892974 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069893024 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088086564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092203973 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131317407 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087518549 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076832389 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147474158 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070799902 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133555138 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083390199 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069159901 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215274015 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176387762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659034963 seconds)
  done (took 10.314319628 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100162412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100658784 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071915482 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12816861 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100435816 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072398497 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078599408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07067711 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092645467 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131438149 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093776875 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107575781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069022803 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072185442 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086909501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211693625 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085346971 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086509127 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075482732 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083264505 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11433078 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085749781 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085606046 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085211191 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133993644 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183603663 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102598365 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102986817 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07064057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08633942 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119408242 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133367133 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071466562 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070460662 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131629777 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099307387 seconds)
  done (took 4.774060291 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.962660438 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090476986 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14476732 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092985705 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135357598 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096098765 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070052006 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111453626 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070765767 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085214178 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210692344 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.424114262 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.580012967 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111645303 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11289959 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105420953 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070747038 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07144098 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070081341 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.44914734 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100349213 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108769589 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083535576 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072960126 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071753517 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068422611 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069797846 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067105298 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071116443 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116568958 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077133419 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.304283398 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120633865 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070868455 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.904450964 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166300915 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.203582531 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104086255 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16497218 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091786946 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13807994 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071887107 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068823383 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156472618 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067555846 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073149691 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069031359 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086317985 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105623615 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120180673 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0687513 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069096881 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165155244 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068028972 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08085697 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.119151807 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158410593 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071561438 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267933732 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094367512 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077340951 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069923094 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.165110166 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127827777 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073791831 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072427604 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073655624 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07429724 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.421957386 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069133039 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.92309633 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073579982 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083065221 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075252422 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072132864 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075346414 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077455042 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093346323 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07199217 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079244237 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070919757 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071368979 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071662246 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088001878 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069849189 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.483310572 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069416386 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071201051 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0684329 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092982444 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098278716 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070032004 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068325169 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101843065 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073260149 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069567128 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067301373 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069357528 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085293912 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072714891 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115629275 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069592061 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085746398 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100102682 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07157994 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101965417 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081163047 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070826638 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406969468 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072618918 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069994278 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068137225 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071002577 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069062042 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080686817 seconds)
  done (took 21.892153352 seconds)
done (took 39.079415261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245483762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076203362 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076650289 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076356309 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076943614 seconds)
  done (took 1.778092635 seconds)
done (took 2.995304045 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120297296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098940507 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067934486 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097859394 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069921295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100359351 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099840837 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079050449 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099494654 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070377982 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09740303 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068039118 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067946667 seconds)
  done (took 2.364798518 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085700824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086187003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072814443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085281167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066493109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085256136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083881773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090937142 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084161409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075331424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066546956 seconds)
  done (took 2.091710364 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085056284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086533407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072563368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084786928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066873905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084491889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084342202 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088274275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08478397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076516214 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066606788 seconds)
  done (took 2.080145149 seconds)
done (took 7.740439202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079196397 seconds)
  done (took 1.268503833 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.528766349 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.659870229 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082495916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107862357 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190132156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116619992 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.253130506 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089576698 seconds)
  done (took 8.394139745 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103019181 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072441352 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076767973 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076459302 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073861287 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074793359 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074263595 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073034098 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076088298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074547943 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073040781 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07400217 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07672493 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075724564 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075834882 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077033125 seconds)
  done (took 2.499107013 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093715722 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093959678 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078244541 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079244715 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077391681 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076347952 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078582362 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07812758 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074953694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076764752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080064921 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077826536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076037494 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069434429 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078287636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080946959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076200956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078680149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079477933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080832697 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079895278 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069315077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076186962 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079022974 seconds)
  done (took 3.189047201 seconds)
done (took 16.551723338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106618187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0706967 seconds)
  done (took 1.377300162 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082528495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083376721 seconds)
  done (took 1.3764024 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083892257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067938623 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090497498 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079782109 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068753183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068181166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088755599 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068402833 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068053561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068384721 seconds)
  done (took 1.964322543 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07085681 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078004726 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072055897 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083192426 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075112334 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067128866 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073549154 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070450529 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078798834 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065803788 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073491766 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08541091 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073420307 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086599443 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075469396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072813259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076504935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072118823 seconds)
  done (took 2.564147761 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068015911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069152676 seconds)
  done (took 1.353544102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069326217 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065891848 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06921412 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068639182 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066203905 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065315688 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066434338 seconds)
  done (took 1.68156642 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.363904554 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120885079 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308015554 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076078727 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086361937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257652058 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069507275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073988487 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07403888 seconds)
  done (took 2.685264807 seconds)
done (took 14.224155772 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081857102 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088458573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096863972 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36956445 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095285073 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06947701 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116217429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178895206 seconds)
done (took 2.326665079 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209178105 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.643944813 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410644105 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203898994 seconds)
  done (took 2.478883591 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330010022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090283692 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062702369 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07053326 seconds)
  done (took 1.780267051 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069141586 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071912826 seconds)
  done (took 1.366874288 seconds)
done (took 7.063580373 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069294169 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088555557 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069102441 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069095751 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066714269 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068657904 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067540341 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066763824 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066732901 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069132322 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069285316 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068836176 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068916419 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069248762 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066633609 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066626186 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068620054 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06648869 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.181334262 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066374122 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066763975 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068816329 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067637133 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067273317 seconds)
  done (took 3.018971077 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087126213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068528031 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073521936 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074506855 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071951904 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073881944 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074252446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068977879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074014381 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071262226 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071802321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07166036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071044319 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071675711 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070905793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072227065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073986474 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069161536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070987186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071915382 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073867957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069218624 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071990447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073882669 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071665079 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073267516 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071374594 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069031346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074095416 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071713321 seconds)
  done (took 3.408116453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072767198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065822132 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066741001 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073254004 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066703727 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066593594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065813088 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066194913 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066845761 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066752605 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067095673 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066169273 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067655468 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068638344 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068969945 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071563338 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083351492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068402997 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067989634 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067347617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069625023 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069917645 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068030773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067824921 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068103842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065811192 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067863461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068309742 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068707672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067564977 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07091403 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071742174 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068156539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074817707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071992385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067799149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072455059 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067887624 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068646158 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066594325 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066143137 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066633905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066713271 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073860599 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066503587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067901934 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066742622 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067990681 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066861018 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068647079 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066350406 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066324437 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069753405 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06785691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070354516 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065734645 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067023654 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066854584 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06727709 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066367597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065939649 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067078353 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068700117 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067417183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081129191 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073686735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06624016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068143532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067762839 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069011463 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068049923 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079627795 seconds)
  done (took 6.188644461 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090132042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088476424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068343493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068395519 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064648177 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06680658 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072035784 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067021503 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068427273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084489579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066996082 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068585908 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068304841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070718299 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066877974 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068045254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07493076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064800565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066871299 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070401222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06728264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07171519 seconds)
  done (took 2.816662606 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149791779 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073303045 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105725412 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077271914 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072859827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077667968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072385876 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072742771 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073150415 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070658652 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070483539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072524913 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072739942 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070568005 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070117894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07042605 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072762592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070562842 seconds)
  done (took 2.660365627 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079066322 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068528912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088593562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069379829 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069168029 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071724704 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072886031 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076697688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07150481 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068573456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076257083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071083939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071166949 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068684588 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07100565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068864045 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071105061 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068631523 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076011593 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073048998 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072901968 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076446718 seconds)
  done (took 2.846442585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081237492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07030208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082905136 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070241203 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064844363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066958547 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072475992 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068402137 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072588005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070894025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068597206 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066968314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071222868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068257274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071020897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068451726 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070605416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068658976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071203621 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064971618 seconds)
  done (took 2.657167827 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087350779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070064256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0717466 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078568873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070975827 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070515334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077492954 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069984807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070266076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090479309 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070610235 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070955544 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077037704 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074335202 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07297019 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077246063 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078153972 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077404505 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070603295 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070824387 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0914988 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070544424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077370398 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070560081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070343223 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071020105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070426395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07461068 seconds)
  done (took 3.342004499 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069408847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068723718 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066606315 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067739567 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067924371 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068202924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067720924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068314036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070786314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068704542 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070484694 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071091885 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070536033 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070709508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070923851 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070933401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071148818 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068773162 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068834637 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068568682 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07101003 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070635443 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071184534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068539608 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068545236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070778412 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066889336 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066567474 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0689673 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066838789 seconds)
  done (took 3.328293668 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076790453 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075770939 seconds)
  done (took 1.405054921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065414143 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082142127 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066051596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073154996 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072521129 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069410281 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075343159 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073204544 seconds)
  done (took 1.825220422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083759814 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079497734 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071111831 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079337705 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078614949 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085808569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138278005 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071429747 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076833004 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068784934 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081503028 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0687858 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075656626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069422825 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074454396 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075745679 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067174508 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074077772 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07016707 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067244426 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069558726 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077316596 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071964986 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065187285 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070372914 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090844548 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080174967 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068193327 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072007437 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076449178 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07536253 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063872906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06860343 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068715037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066878046 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078473375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083503692 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072123934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077398825 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069530225 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077276675 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064726615 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073591624 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075414843 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079285161 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068899249 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069364989 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064433884 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067373702 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071679111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064530531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069372976 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063981683 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076234137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073061215 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079855981 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068066554 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071070058 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072562655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07221392 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075510885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071069337 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072224047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068943119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079290533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074343013 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077399764 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064321789 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063367856 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067200467 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078239966 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091395846 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074798237 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06940131 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069792337 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067246074 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072532471 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070021594 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074312114 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075446645 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070122254 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074496691 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076663593 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069421887 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071698244 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075622928 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066965923 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070991123 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06696146 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083694326 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067298954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066614628 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067826271 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081067609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07228893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067351581 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066738116 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075499831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062481378 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068081035 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068045978 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068721106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077269237 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071422782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071748803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076603837 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074652819 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068593635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07016319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191857465 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070772899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069465568 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07701025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064200561 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0733372 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071077871 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070435869 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077606336 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067288351 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069119102 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077642311 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074755224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06686597 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065886517 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072295403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068822488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071280861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077102328 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067689763 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064798384 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064292405 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072957841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06887409 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072986669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0728933 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071971296 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063733519 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066559294 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073141304 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077217708 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069258764 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06988814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074479773 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070628982 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067787679 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075896815 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071173378 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068853113 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074400633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069997623 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064877715 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070673945 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072045658 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067621068 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072783886 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071164305 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070807912 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069342244 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067243401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074917528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069249308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068789889 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069395888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067612229 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079826784 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071017988 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064317743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066421219 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075971158 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067416711 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06870757 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068316329 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071443557 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069478649 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067061565 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068333873 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071413808 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07663889 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071846905 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069418065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074677123 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080611199 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068955972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071588549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069329883 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069830569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069300999 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078462608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07462856 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07290307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072067834 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06665639 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074534149 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076885255 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069125177 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06728589 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069146016 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072576069 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074970321 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072732936 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069814733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066698161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069851545 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071067002 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070910601 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068189812 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068530274 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073026566 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066837146 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073450826 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06881229 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077980275 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071158878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063521186 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069885056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065706493 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073908179 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06385816 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066159167 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067772204 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068117512 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066717576 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.19924523 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064959717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077408896 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07717747 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070065337 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06985278 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069098611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07687933 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071689649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073339819 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073481113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075265322 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07969473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068768834 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072666917 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079736132 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068723017 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063582638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077531468 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06867273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068673063 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068041867 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066957507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072374006 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076094781 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076377083 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063639052 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071683235 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067421625 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06885948 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064353494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07346581 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071728895 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070451155 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076192517 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069548442 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068854724 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072501856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068290974 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069818048 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069319595 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071960537 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06912998 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07103365 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068315876 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072741647 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06816363 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066700188 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070531748 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068918606 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069895294 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073570333 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068162455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069824092 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071556677 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068854251 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070389494 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069932192 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068779244 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071999567 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070245217 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069715893 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071690888 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064559597 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076414442 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068163451 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076280599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069700963 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066284176 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074761919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071840667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073500248 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069766522 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06986327 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070793662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068569571 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071711731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077029455 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069059221 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079317576 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07616326 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070939275 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072251574 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070377907 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071001671 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0689721 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070529556 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06939194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07032804 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068459976 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07405721 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071609745 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069580744 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070408277 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068955581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069478146 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069006835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063954957 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068232258 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068858678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068039201 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07944662 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069340463 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070834546 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069056741 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069014281 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067648892 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065235285 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074075347 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07438415 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067973397 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074200457 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06773268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070221916 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078174263 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.194921699 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068308915 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068364272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067867838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07692181 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069827235 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078831309 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069953871 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069215266 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066656333 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069080646 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068411198 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063892352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067073992 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072629972 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069093254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068416176 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068688718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071707038 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069384086 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07794787 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06862312 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070836406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069438448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066507903 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068904386 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068507443 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072088056 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069621788 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067714206 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066029967 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068687404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070167492 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07091721 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068383136 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071703704 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075888447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068653008 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072417481 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070874567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063855281 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073211534 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068760935 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06868957 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068822949 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072899388 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072038045 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069971503 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078234415 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068513822 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073510433 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069100702 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067408374 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068779139 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068818058 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068952587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069043462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069944525 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076487285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067246641 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072653799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069416064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070057866 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075891009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069684797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072876973 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074149956 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069808121 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071460919 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077155531 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072247391 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072390103 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069646463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070847238 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075120964 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068971987 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075855361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069886337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069609903 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072251345 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067986185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068785338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068697416 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068603635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075476036 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07000434 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069304309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069558506 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067144259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070859687 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071569874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077719375 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072092097 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072324587 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064751781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066512601 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069156727 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067187379 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070645985 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071436714 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074693886 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070739706 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069562788 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067582979 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078078049 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074493515 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072792596 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06712865 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072096557 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068376097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070176989 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069619515 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068566082 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068384667 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072321931 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069730367 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06765784 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206964217 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074478211 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07016518 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07164808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071017689 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070230698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065415327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0694257 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071682764 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074542046 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071750801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069045974 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079675722 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067807323 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070181202 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072064201 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068590001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074170725 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065011293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070778508 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069966239 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069473356 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065074776 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069958872 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067752886 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072028909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068875835 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064696514 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079685823 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078760568 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072834235 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068852269 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067778777 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064635195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064415103 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068357118 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06964651 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071265968 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079579905 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068487789 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069642314 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064888337 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069055653 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071908674 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072550554 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066123406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066721675 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070552729 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072439945 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075131617 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068090911 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068670233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072993908 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071614206 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067374817 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071631861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067239828 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073251637 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080858429 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069743146 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07071198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075207402 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076638861 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069241017 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064470556 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06915088 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072456723 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070292114 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069425155 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069786482 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084122469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072314547 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06898698 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068052012 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07196753 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069085253 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077735114 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069936195 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069806341 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076335679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071026618 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0766203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072845654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076779324 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072754331 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073295723 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068421254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070193265 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067645483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069225239 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070378086 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069815397 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074010579 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075135999 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068988618 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079622034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077752222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070488578 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066230417 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068703518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06876892 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063909968 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069084482 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066715835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066976171 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067033388 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067302462 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069797893 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072925381 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069499195 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067944628 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067840355 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063291463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070737798 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070124839 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.201891334 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067053289 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069499348 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070741885 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074090534 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072635211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067779025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071102149 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07174139 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071190268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065000283 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076076172 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068491418 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071258342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070032684 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069058338 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069366829 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072376827 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07347093 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070361057 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072003528 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07319646 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070995605 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066620399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066404297 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074692239 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066770606 seconds)
  done (took 44.29095608 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100675647 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065797184 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064598847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064560669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075093423 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067632262 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06673457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067480894 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068784895 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069895704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066579169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066442786 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074901092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081599499 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077687018 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071396803 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067131731 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068041647 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066759908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067513468 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074948071 seconds)
  done (took 2.832283007 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075208353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078739071 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076977569 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084619275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073185182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072327061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077138563 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072103943 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080526571 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074995577 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080862265 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073044446 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074640303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074736683 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074794184 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073613842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080242322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073618734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073588898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07863003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073926821 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078112214 seconds)
  done (took 3.006438144 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069321296 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068353911 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070277946 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065097504 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069044891 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065458532 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073376335 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068987806 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07314326 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069901439 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070251931 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069921741 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07283621 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065960505 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071142924 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068511924 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111876845 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073677946 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068447528 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06932929 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064155042 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071379456 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064461767 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065204237 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067980138 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071118291 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069158088 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067051871 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068406484 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068380631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070277121 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068404387 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070491105 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069292268 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068114276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067931593 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068227083 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069231139 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06505259 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066949071 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069764325 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066943971 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068788359 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070126994 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067125616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067880772 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070665921 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068330389 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064450117 seconds)
  done (took 4.743400824 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080043585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110186945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070213856 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090522832 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082104526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075355826 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072506713 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091349578 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066314622 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066934194 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083581122 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080814095 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068470771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072997325 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072519928 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068428134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069209316 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067174141 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071402819 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067639484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071617482 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07507634 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081949521 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080065575 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071842281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068695802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069956897 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074395306 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080509036 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072361547 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072734905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073885305 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083061598 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070176331 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067409838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07025148 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083646213 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068469886 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07047151 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06631482 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071127107 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072538593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07577677 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083837349 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069063368 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073152917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068469999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066286177 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080098637 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070544399 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075387528 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080880817 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071542864 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068420274 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072121811 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082438993 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068295578 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066893601 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071177345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079515651 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066459912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071819297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080438858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06989171 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074770193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080639015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073015224 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072482711 seconds)
  done (took 6.51957479 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07785268 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097858946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084264638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083926035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093496678 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077914627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077721817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077445419 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077090154 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081735875 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077598284 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116068516 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073482775 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079840497 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086324876 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07798889 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077373928 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077658316 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077133992 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077723893 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077677429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083961258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077584984 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084216873 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08173056 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073304159 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077359774 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077914154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084091906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077446854 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081099825 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077601628 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077533716 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084093639 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081005802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077742386 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06863223 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077170251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077752639 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077958906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072964996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084315147 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077453974 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073301943 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0776626 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077615128 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084464776 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081337716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079793446 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081195753 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07775146 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084516285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077915524 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077786001 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084385525 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086835688 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083954477 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08449378 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077609887 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08413715 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085191963 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086766617 seconds)
  done (took 6.36709224 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083247764 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075369408 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083260394 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064392197 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066993262 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07390038 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069229251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069056375 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078215636 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080898044 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080038334 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076469032 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079056843 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079091322 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074611981 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076779002 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073815264 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074091843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075693966 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07418078 seconds)
  done (took 2.884622214 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076594535 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084636549 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06886158 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073231733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071459772 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073799721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071387848 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071613293 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069489716 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071686561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077708038 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078037808 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069645811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073611713 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077710923 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073475005 seconds)
  done (took 2.544563197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085120815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075077975 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080982705 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068054985 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068841734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06514094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068044002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063893891 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064742044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080400627 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068417223 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078358577 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068398191 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067817047 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065292104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073738596 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065134369 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065989765 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068211961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080114971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072261055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066850341 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07150327 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068332585 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070560213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072227296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067564474 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068950061 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066873533 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070127294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072278243 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073698074 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066004542 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067062503 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067404898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065913874 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068666568 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06914276 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073458679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068300471 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066594505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069925351 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068594822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069213541 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064964941 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068964307 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065075088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071260724 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06636768 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070845839 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068780793 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071215339 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069660954 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075131158 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071775529 seconds)
  done (took 5.210112104 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081004313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071462954 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064383639 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066866345 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071210373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06943991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071329517 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069311706 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069901089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06667505 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06997675 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071506884 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069548432 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072084752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069657827 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071875324 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064273374 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069978481 seconds)
  done (took 2.637277171 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073655024 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068456836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075871202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068669239 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068159414 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070648739 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064862608 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067136781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066833977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06904171 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068652517 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070657556 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066847474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07074528 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068651317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06848251 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070794369 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06728099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068638124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064817068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070646408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067387324 seconds)
  done (took 2.884185749 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09411199 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084584059 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138730722 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080545189 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087110313 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073955888 seconds)
  done (took 1.928516806 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092605886 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101319537 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06856324 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07240599 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07702816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072395715 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072710571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07245859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079947478 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077745022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072853033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080771636 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07951147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080159197 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078044586 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077728094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072815498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075451247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068893966 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085040092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072629327 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080146823 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072534077 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072674991 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0725094 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079177974 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079519945 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077617302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072382799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079860466 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07738359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072992007 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080522773 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078041574 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071600043 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080257131 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072533384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085029138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077828426 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079725889 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071849502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077586035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08068178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07700045 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079879941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072936701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077045332 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072677569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072901431 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086696379 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077873109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079240527 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077815886 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080586993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080513181 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086659773 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077811079 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079774132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077523259 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078300481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079520674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078118514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079182903 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078209168 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077578513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079186494 seconds)
  done (took 6.506055753 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105184389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069392665 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072778368 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078164896 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079485744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072791791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073002888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072738156 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073317509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069758756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108690668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073601409 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079782505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079778009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072733867 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073181592 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072644419 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07945781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069740803 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08667518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072480206 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079413045 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079764487 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080167091 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077864853 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077810718 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072876145 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073053869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072501972 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072495858 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076770617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072784496 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079490411 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069255265 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079395107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072806047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072783463 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077339745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073001448 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078225869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079481603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08523588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072767193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072516446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07811119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072819133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07266836 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069656497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072952818 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069773827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078311736 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077653972 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077871819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079279491 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073018062 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072689296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072927903 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073456068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072842792 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078019814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079704493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07244942 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086772487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072708273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072619543 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079564616 seconds)
  done (took 6.434041283 seconds)
done (took 133.513915633 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195196753 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173256712 seconds)
  done (took 1.730144894 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07084844 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09906725 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078556523 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131673351 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068865476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102629139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101749783 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079456555 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068730434 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068794438 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069209226 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071069059 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133918094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068808828 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068580913 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071547804 seconds)
  done (took 2.734203408 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099399832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157367298 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103496186 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068147773 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099247321 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074277135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067656183 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076862339 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073740188 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06833578 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074695322 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072635768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068509609 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07319383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075827846 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074489058 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067703839 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074665095 seconds)
  done (took 2.854398172 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098642513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092419597 seconds)
  done (took 1.579168523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152364607 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134984676 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201704984 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333153802 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156030607 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146483383 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142411043 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142532963 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114294172 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137915772 seconds)
  done (took 3.044697384 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10026576 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149507821 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26627039 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116205294 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075725413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093573694 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117965647 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081149207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082116653 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082090086 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081705351 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078434146 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099871536 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07543391 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076462692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078343461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103630612 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075781284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077257637 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07789666 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100980412 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06914782 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075804666 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075659479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079238554 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079044727 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068814724 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06882844 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077681702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077258808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07917775 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093168252 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079551344 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105211334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073790303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106320961 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078813084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075055882 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077244682 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075609918 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079942837 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079851809 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075592449 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078493377 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069027893 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078918334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068887719 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069051571 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079561673 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069979885 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079600972 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078085837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105466767 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069541699 seconds)
  done (took 6.098447585 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109082037 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108008301 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072858811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114226095 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104551694 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071640719 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106715135 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099339951 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108713123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072633187 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071070407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072445602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08181102 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08368182 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116970503 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109460683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075293539 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071624068 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109223285 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108854302 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071311862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102185222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098416729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108349853 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070539305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072390403 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07098798 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073009998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078329173 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079365412 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071106254 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080896056 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085431876 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079312023 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069875156 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070448163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070707382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080847324 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080943985 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080323523 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078802904 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070094926 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071402421 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072521864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071997117 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070102757 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079451523 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080988623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079772286 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070856489 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072035566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07126634 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071974916 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080919824 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078558246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081254978 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081012136 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071043754 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070781431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073609331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080881107 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080869978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081065207 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071766872 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081918278 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070583244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081329689 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085036015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070641601 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072220472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070876012 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071097803 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074530174 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079158912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07927908 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072365734 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071019324 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071244134 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080704073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079793835 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070725713 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077844746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069690705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070132084 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071873234 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07179565 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077812218 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07992802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072200297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070581526 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069730583 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06929783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068885328 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07659764 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078615452 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078299857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077396785 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071159048 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077980593 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211845179 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072716849 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081204457 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071562617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073317062 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072570196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079824223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078775026 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081305311 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071195692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071087894 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079682362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082380922 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071267261 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078586036 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081225628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079649883 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07054221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083009784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071264904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081558564 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0707122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081107046 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070754271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080098276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071127625 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070832199 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071332192 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080464773 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072468304 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070476114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072134085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070806801 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079114704 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082848401 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072722403 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079263942 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07915834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072258568 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079615288 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070380746 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080300773 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071017608 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071797202 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06975708 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081902291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071318487 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070800231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071008398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081441757 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071835734 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081404819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079507711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070028561 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08264001 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081248997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078456322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081426983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071924017 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070479169 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070672702 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070537697 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078395469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079882613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072003382 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070555604 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078873147 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080966668 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069915746 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079007579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07894879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079312942 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071087142 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071132991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081969903 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081452839 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079477841 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080144082 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079698044 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071347255 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079246505 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079265523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070984402 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084851907 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07113374 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082839408 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079035114 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077126872 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078811564 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080517003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080211262 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080320721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082671521 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069367924 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069605883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078909465 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069916661 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069634217 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076960895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071243797 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071082454 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218620703 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072045138 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082346167 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070391924 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080017277 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070215962 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072587252 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084555447 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070977308 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072454963 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080303619 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071226955 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079324425 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081956205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079981287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071498758 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071891044 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081164115 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080128689 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074003312 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071146615 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072754606 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07865111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078427819 seconds)
  done (took 19.076666587 seconds)
done (took 38.517023223 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19292808 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14410868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.15665313 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111936844 seconds)
  done (took 2.081482544 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111975929 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097614347 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090469537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067661193 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096878951 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068094396 seconds)
  done (took 1.957263215 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268413314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186232957 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169043531 seconds)
  done (took 2.043239092 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191178016 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.179160096 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422013586 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257173583 seconds)
  done (took 2.571264229 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13695698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086390642 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069876453 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084624721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127113726 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154463032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097835087 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12133583 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080770763 seconds)
  done (took 2.431430088 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142211838 seconds)
done (took 12.648962221 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097799222 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.249482123 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117798123 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163690014 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076176288 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081762087 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.203522655 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0703976 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091302154 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077480662 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.199655883 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078074849 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19774062 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.120347614 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054828346 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.169798926 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075790001 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076731606 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152134175 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083454117 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076536949 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078830898 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078002208 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.160216061 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191231108 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171440569 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.133646081 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180681205 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155980773 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067118934 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116390876 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074815175 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074807159 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075722597 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072991257 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085239458 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131638191 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.304141179 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067262492 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135992178 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181455626 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211921107 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.145921776 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077002158 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076270547 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108387259 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074555815 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.069316883 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224538097 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232358675 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084459493 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066455942 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088399799 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068117389 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076583801 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.20019355 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.141440441 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119792256 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107193186 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056008286 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100188767 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066957216 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079977677 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070442495 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091547306 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090124897 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074994564 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07393419 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078095757 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067759551 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.195355991 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154989055 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070243178 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158949299 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177327423 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054222569 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111247477 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122515801 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152842027 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177499805 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073920178 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.241636412 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15668642 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 0.131126356 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.163656576 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093858454 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.179387348 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076332791 seconds)
    (89/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073999203 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068121222 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093181295 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099762651 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088635412 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064803732 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122982111 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133484842 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077039622 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078597126 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088896356 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091889685 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.14321951 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090781899 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.164369593 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079496023 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075028933 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08913334 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075721535 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078825406 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190361802 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073756533 seconds)
    (111/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074014431 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075738295 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072981834 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05445855 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056638951 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05550325 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054128786 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055759682 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0692306 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074346113 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054558906 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077383419 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074718114 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074862092 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054496692 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055129615 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08000818 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069511675 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087718955 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119976598 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054535697 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05440677 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074884928 seconds)
    (134/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100259655 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081248039 seconds)
    (136/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070319896 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174374127 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075541112 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166933269 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189766721 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.152509431 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111887071 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054235119 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075170162 seconds)
    (145/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.152697918 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076076389 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054439915 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092494317 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068160252 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089714051 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076717624 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054651318 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077416577 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055193271 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066992976 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075514391 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090538655 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080204829 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078575553 seconds)
    (160/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055674126 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075977088 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06885972 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057265803 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05539377 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.159379269 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 0.146413047 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1424184 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067981684 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080455709 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054329042 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144151699 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.110790091 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12823972 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055747485 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068515548 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055114446 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068788271 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055330346 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175955232 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076219518 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151644602 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098327161 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067773551 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089118114 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067915503 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067771214 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073892144 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082999427 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.268518594 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181072805 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13811288 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093763565 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090935081 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069036148 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055630743 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190768661 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056777191 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06707121 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067384238 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 0.128854004 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078566044 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081453646 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076608891 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074903134 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089288522 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151479087 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054999607 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056984785 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074840779 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072193664 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071480356 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055617401 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154822858 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054593516 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077019094 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075204111 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054176119 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138499221 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14469961 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080630521 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167421039 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06992266 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075482453 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054611039 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066809104 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069103349 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071736886 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098851233 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178313124 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055103797 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092860791 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069679266 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137200662 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074809831 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068677244 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091783652 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068824397 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079203324 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068458398 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154085725 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082824487 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069025867 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119528156 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066734681 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097417296 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067334114 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054633074 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05744115 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094885184 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054610199 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058303843 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0558561 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055690288 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054459954 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188921472 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094069295 seconds)
    (257/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080327824 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054813276 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06991704 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10882955 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130701011 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068795315 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05490558 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076388424 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071374402 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054371062 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076172906 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054610724 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068858435 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109493986 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069217274 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073813788 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055636685 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068351895 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08952005 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068520832 seconds)
    (277/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069362805 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055514613 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070847718 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070417379 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07726582 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074742519 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076153497 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111402766 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066891401 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103083234 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054702161 seconds)
    (288/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065070366 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053789039 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067652998 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069180274 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069087653 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072178078 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076665504 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071128055 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090116856 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088113277 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067633622 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054775562 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073890641 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068312678 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074004126 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056164666 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100305606 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053701616 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067391538 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217976194 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095676386 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077901718 seconds)
  done (took 31.472483952 seconds)
done (took 32.909530707 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084783812 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0948884 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079040128 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094923451 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084204535 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078900524 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076241212 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081417235 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083689443 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084773821 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081711659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058808521 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07753424 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077903357 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078076061 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093102061 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082663124 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076632722 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077369924 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068270733 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077374881 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069012677 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070447084 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058686803 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082046844 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075391977 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077433223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077407546 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068811487 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069367632 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073128543 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077360818 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06881937 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082661225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076770675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076632552 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077979485 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079854253 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070780494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069237082 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078307715 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068895764 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076551591 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077040991 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075573511 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074711369 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076743671 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080642387 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093174971 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07113282 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078409723 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07900089 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079962007 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076212347 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073776258 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076366712 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074485525 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093335322 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077214887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071120474 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077804006 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077559074 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074152388 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076478641 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076329603 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078489194 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079755716 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074219057 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078392221 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074970635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068566208 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076628024 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072799422 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068932107 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079175559 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080925076 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067538018 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074884221 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076442603 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077273192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068128755 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071519773 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072414924 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07752957 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073856843 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.062579436 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075883961 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078277758 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070049555 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079071523 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078007779 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07936381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072633363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082522988 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070440368 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076281428 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071098515 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070897674 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072735638 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073888142 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069048694 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070672191 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078335749 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069839003 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074798553 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081333197 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068318193 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075291428 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067524772 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06798567 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081588779 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077813656 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068538845 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070640207 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068183985 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075315644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067221374 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067347536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067662844 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067523202 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073749966 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06765631 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069551933 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.21686101 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083922244 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070007263 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073633617 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072400245 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069209264 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074723723 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069193277 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068947351 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070479633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065647908 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07153854 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069167279 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075834239 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071300025 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076810268 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07069963 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076663358 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073957068 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075428669 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074246622 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068489979 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062614144 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07171197 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070745463 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07043195 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0689742 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070216055 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068556511 seconds)
done (took 13.0312434 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069831306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132802301 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096249659 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095530692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08610143 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069465337 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077546505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096839698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070392577 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098703546 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088911604 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087211949 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111697061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068255347 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069461596 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073114746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070779146 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08288926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098296708 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088259546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113039478 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068626345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093400269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090334819 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088181077 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103218819 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070640629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073048577 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072790997 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09313276 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090534634 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073279999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070163151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098917713 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093522288 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08463134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07011551 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084360728 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07009748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069558985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070811366 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097548116 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08183542 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081944049 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073314428 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078973709 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07118315 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084222729 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090346952 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080588621 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086982653 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100208137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072032548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085082661 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06817851 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086929903 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078370165 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071929486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069574881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076859126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069559524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073161042 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083061379 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082024169 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073288421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085538441 seconds)
  done (took 6.968328475 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086986597 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093679899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085113889 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085745108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068741462 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070371918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069513091 seconds)
  done (took 2.094636814 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070520076 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089062915 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090685333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090071216 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083521179 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089175951 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081062208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069984974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089887129 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070886886 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090125591 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099299812 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073466563 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076585951 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091406605 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06979777 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091557107 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070527102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072301697 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091375088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071656866 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098548923 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073255239 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070675499 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083120005 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070276517 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113661181 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073726722 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072314755 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073008158 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068045615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107433372 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082489921 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077364801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070138096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084424211 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08351564 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068500375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085693447 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078183401 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082863108 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070716229 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070946105 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068545232 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074080497 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079706611 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070928485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070686583 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072412126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087992146 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070495335 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082335381 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072390344 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075363819 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071305916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07591616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079368697 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070872161 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088179621 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071493791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084766609 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084494186 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083299298 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084556793 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071773321 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08255788 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082871783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072158786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071505508 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073354515 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084624054 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068390615 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071262253 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079629826 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071687731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091228097 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091204493 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071263342 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08220097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070175166 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070038177 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069668864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09098574 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075073984 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069849789 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073938865 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07315286 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068894087 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069480757 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073999798 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068435333 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072024276 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073073947 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072456616 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072348336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085113964 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07179928 seconds)
  done (took 9.110424347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072607019 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070964757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072405304 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071993485 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071273535 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071474752 seconds)
  done (took 1.991130596 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091941432 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071590433 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081384215 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073681274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102725896 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088150531 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088418797 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080016295 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086955359 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081708176 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087680418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089458969 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094486568 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075919761 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090287326 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073707452 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088803247 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076842783 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07984967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07491019 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088186423 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074465981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074841355 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084032286 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078161026 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074000071 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080607376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080413685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080072818 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08028133 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074495101 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077958662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073295967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079650381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088544029 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073564475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07403654 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079378995 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07446146 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077797862 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089502896 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074710821 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076391628 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079307571 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079656337 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074016926 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079194501 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08123263 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08808021 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078943006 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081866024 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073147661 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077763736 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079120305 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073311276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080453001 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079451347 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088990375 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074470814 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073424384 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071718777 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077721408 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079402686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078207875 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079969489 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079395786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073218232 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075136842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075061496 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074037045 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079035904 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071419907 seconds)
  done (took 7.279272976 seconds)
done (took 28.96486719 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541824519 seconds)
  done (took 2.057932654 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598447999 seconds)
  done (took 2.145136211 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.992414327 seconds)
  done (took 8.538014088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.365965006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467979107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701541736 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135721281 seconds)
  done (took 3.212399275 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709742952 seconds)
  done (took 2.266287271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230801031 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222099479 seconds)
  done (took 2.018698797 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37750346 seconds)
  done (took 1.920629908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.074699675 seconds)
  done (took 2.619491524 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231918576 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176756116 seconds)
  done (took 1.962778435 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451101063 seconds)
  done (took 2.000505293 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.8006678 seconds)
  done (took 6.352857079 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216882455 seconds)
  done (took 1.809314735 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237485165 seconds)
  done (took 1.790302978 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.741742559 seconds)
  done (took 3.294166763 seconds)
done (took 43.547719756 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085734705 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087091667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087811939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084185318 seconds)
  done (took 1.879360663 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078848464 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075609251 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078988548 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075729318 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078749716 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075253026 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076475385 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07797311 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075484349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075103147 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074868485 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075070185 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07718284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076374219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073471397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07727419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078202395 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075226251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077841513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075283205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073087866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077236511 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077461169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074135924 seconds)
  done (took 3.387831106 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080528407 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075713851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077121057 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075492307 seconds)
  done (took 1.87041592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080202198 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091718331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089555889 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080648489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091911833 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087809608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071457858 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072002438 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072877208 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07988562 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0705002 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095648596 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089688457 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081146123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083008719 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068467968 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070919036 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088702981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081107021 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081046557 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073095094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080831592 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071237083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08990501 seconds)
  done (took 3.499610506 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087147667 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102060978 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081879679 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091479318 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093210695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068164637 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088004122 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0939981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125349824 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068295895 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07364926 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0682009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076474257 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068367137 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082988206 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10908446 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111913181 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072003383 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099816203 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068892408 seconds)
  done (took 3.298529671 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074727179 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071909113 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073328444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068807984 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079614831 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075133735 seconds)
  done (took 2.012073018 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070626959 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075052059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070363326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069378097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073989988 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069543232 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068327232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070310347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070587234 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070086348 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069816834 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069104843 seconds)
  done (took 2.409908769 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184040441 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071345891 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071492941 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068548587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07316559 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069456508 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083188731 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070977765 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093134769 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06955379 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069697736 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071670278 seconds)
  done (took 2.566900566 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195084878 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077495163 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224016576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149299221 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108574505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112330032 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111413487 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110286829 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136197491 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099697491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16025989 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161616163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105970679 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134866993 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089914688 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100422934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150008403 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160247841 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106079152 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159724167 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140283873 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124323283 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142378587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101301182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105476972 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118494611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074290286 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080896715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163676731 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130031913 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140353078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111597981 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09697581 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171073498 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162791589 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137238684 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144362238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085241112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103272324 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130068328 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188146718 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08918732 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30109688 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111375149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082469682 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13111255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115941681 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118556978 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104371626 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090297092 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141620139 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176634277 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13189286 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088119328 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1217789 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111321665 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111632915 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11092005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170024768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154327314 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125914581 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073889602 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110247704 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147032037 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129550635 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10641851 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121285792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092715608 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129899338 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149514104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120086303 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138654832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114474952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089731925 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118267694 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136933673 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125033614 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156523965 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123225416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075459574 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120707447 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100411486 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082291491 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144287708 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077224025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167885465 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099457593 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105803145 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121685669 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106522504 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106514574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149977618 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287005233 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103779481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069221975 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104625276 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117174366 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140831124 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088545333 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10612894 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115637537 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07943955 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131997095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077320858 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120721919 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078248234 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120742677 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126542823 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079087885 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120101837 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102935518 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100424152 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128662233 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153043856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088551919 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081930648 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160405049 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120810712 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102125448 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138493703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150696179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100560606 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09952005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144069777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166040746 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090212898 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15706209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105251673 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084841109 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087929735 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121576144 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110174315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121463651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083476032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116910038 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159379342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076048997 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095563221 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130612997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079875896 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081718754 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104541575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103982491 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096379358 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098248604 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101403914 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131970883 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272724353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105231818 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121963333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099472021 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160782149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08837541 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101661787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103338468 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072731489 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131328276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150169933 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080112566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155488943 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119603926 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113936265 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116570415 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084875804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133732945 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080236335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072668149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138275938 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109286296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107855626 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145172774 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115264053 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12203658 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116419662 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129044031 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12770599 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126736092 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106165253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089251543 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110784555 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1254318 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07559488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091621606 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081800057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104854451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095723848 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084697075 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138036736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121747184 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112325259 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110750456 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097506692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141731291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077647715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12370574 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117114689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095768579 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145889754 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145534192 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12844616 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097212561 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283688541 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0733427 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076910894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088481427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120344172 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084036024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084394738 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113066195 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141467744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124997429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133169993 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121333425 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117382869 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14905771 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07238612 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118657115 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14036068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118628554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103934801 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091222273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098813444 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137220829 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105286585 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171824763 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112229445 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122785471 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14942244 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101316724 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081173428 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101627287 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13006748 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103166377 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138153351 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098701679 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089300016 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107565106 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077226489 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099644898 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124864749 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117185073 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132639651 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113107907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130908818 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078972528 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112317775 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121262312 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119001106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066817076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116566804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153488001 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094794242 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114828966 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297719518 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081166881 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133911656 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16557922 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139576732 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08593919 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106042432 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117662612 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122895192 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117604613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134450175 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105050584 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132318014 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108303981 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086349177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087880811 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097503675 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102375577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093610214 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103506997 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111569346 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095767267 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128137368 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103678618 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108666636 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116684756 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099657002 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092561034 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096972813 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167612073 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116411714 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163693566 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09986436 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1381542 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156589309 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077077818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080607061 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079985818 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134592164 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086320824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128238844 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109501614 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115686243 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122069196 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135114189 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09559943 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070568304 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106923596 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129754515 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120943715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098108432 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10122475 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153663264 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096110013 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230831749 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111161978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114635703 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102819205 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163485321 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064454605 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104530108 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079010881 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081051858 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123111661 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145449839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082458108 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100358732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117218185 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111241432 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123460939 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099171595 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109990904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122991714 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142959372 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124550491 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089747455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108954207 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124239178 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150342746 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102403025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097689479 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165856931 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146327984 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153203592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08738875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112599593 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113199277 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110334447 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135274628 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084781727 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157292002 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083905499 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133172768 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102707213 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089532208 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126278687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109739547 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088908352 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140543395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114748029 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084214279 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078745909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114155658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116544085 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106926873 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075999572 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286222701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077545897 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130090533 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15413909 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082535863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10352892 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095459245 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081346751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104132287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102316145 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087507181 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100499544 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163338411 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087534931 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142510998 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130698934 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110580607 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131008959 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102612929 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639485998 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079149196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145128763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113480595 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164608734 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098999358 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115678081 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108279211 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119019646 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139798121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10279457 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178583074 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129216005 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114766117 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08094122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102544047 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103573437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088059072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107133767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112134681 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114009367 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093981006 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115048993 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122435409 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083484768 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096003211 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149507879 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112866255 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139197528 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133579868 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08545684 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114845721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287163989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082378233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116597449 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14495774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106495867 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099250126 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082475609 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09970831 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15383394 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075232613 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152580249 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118287197 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108031736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111157212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110661338 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129520662 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104768055 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119447452 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092095689 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106743018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111374473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082652684 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079166887 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10394213 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1095136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098228675 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097384372 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100884005 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145623056 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075488161 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09883504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113478952 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13967684 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166219647 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087673887 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084077506 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118429707 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114181863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111304402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11986754 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080913486 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083803449 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081442025 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083264828 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106695741 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111971807 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113028773 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108922909 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154876385 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083710091 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223759948 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095089403 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102419437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071449065 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079012663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095219779 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249224069 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106069996 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111566976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153920916 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095679925 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09007374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091984874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07718989 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08413871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122790561 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107852126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116140574 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101105207 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065597919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106081484 seconds)
  done (took 58.184175395 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109831337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084201391 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097787152 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144919554 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123045456 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199786433 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156705105 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189664343 seconds)
  done (took 2.787691369 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071060227 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095041914 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103801656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084090679 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069434268 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071337466 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.218346119 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082740611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069153624 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094215504 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081175397 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071988294 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411701195 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068477573 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071038021 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065068025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07003875 seconds)
  done (took 3.471108873 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37920106 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619955635 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.33411793 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0789397 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.923276875 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095258231 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.150104275 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139335972 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080001271 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544139585 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410102502 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133914129 seconds)
  done (took 18.568025807 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084857578 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078991454 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091642305 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091613495 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080823901 seconds)
  done (took 2.173757071 seconds)
done (took 107.692865378 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085113792 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.594546561 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057224772 seconds)
  done (took 2.357309345 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089286479 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087447696 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08743389 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085966378 seconds)
  done (took 2.031483433 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077304606 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079292065 seconds)
  done (took 1.833255001 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226111682 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16905403 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098061083 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085124771 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082336669 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083195134 seconds)
  done (took 1.934394839 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075203601 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078133626 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075018318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078822857 seconds)
  done (took 1.984724241 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07913558 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056551887 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058719129 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060915726 seconds)
  done (took 1.933797581 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088412453 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084397316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080808976 seconds)
  done (took 1.933347344 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101624994 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089243703 seconds)
  done (took 1.869289743 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084064692 seconds)
  done (took 1.765779839 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094674611 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100714519 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128399191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110179326 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136547934 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107683719 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086439353 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087554494 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079006349 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087918825 seconds)
  done (took 2.697899768 seconds)
done (took 22.596097481 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081025502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370396139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36329142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092715034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672336816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359889756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.964142339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09597456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141727566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071122724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087350237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653098775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957799671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328810062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946241229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328681912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653405675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071419206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071139956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071248088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954199433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071420809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070925212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072033599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652727182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375892357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071930923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328116989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071977332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073935322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359445904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071957102 seconds)
  done (took 16.216773923 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090834146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120649657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075388395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087159872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072942104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072566501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074503408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07220447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122525346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070933916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088667666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070902191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076307143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07167446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090812453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071159508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071869325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071977003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071576821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071786448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090222102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071611786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071998341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072391123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071754826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083565719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072305939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072494267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072726828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073962141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075077084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072655142 seconds)
  done (took 4.20392723 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119042359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12622432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076031174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107414021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115262755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073403354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143438644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096733701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129845542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072757183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088782861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074428989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108344289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074652329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095639675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074838965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076095718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075637633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075262565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073691817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090995332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072431456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075427605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072808715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072333282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085154763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072416817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073178789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07241897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073775439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075232844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072699615 seconds)
  done (took 4.474233235 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075246373 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078081926 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085981774 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086600824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072790988 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075291887 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076443167 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07297923 seconds)
  done (took 2.313190109 seconds)
done (took 28.900488139 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081545627 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072509453 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075684864 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090804597 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07629906 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080542359 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070031626 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079297323 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075709591 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075937596 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077631389 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070677278 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074504578 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070013606 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077036148 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071480825 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082189029 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07516702 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081813499 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08282568 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07347025 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076495841 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078450114 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081889649 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081962575 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081778323 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081041489 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.0766519 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07225442 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074697962 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080144777 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087914461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074304788 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082899366 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071448018 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071478519 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075306288 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07170985 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082056622 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079987513 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073227936 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080701839 seconds)
  done (took 4.907825083 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090171338 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095234311 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089636063 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067693369 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071817769 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071281438 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094828088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06563235 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065595436 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093376404 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062146264 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065679142 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069081013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060278982 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065688358 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063378419 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065086449 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05971756 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062901649 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062985279 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090894082 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05806125 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08019228 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068762572 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062514726 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066930129 seconds)
  done (took 3.569005899 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077219869 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085693176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091892559 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144283874 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113837965 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080481544 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083873121 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09802416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10051275 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072936923 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07744458 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098950526 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09280301 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079757754 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073915946 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090835288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090434657 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075542565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077095535 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095665001 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091936726 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088076351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09436243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084304551 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070235169 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072921211 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074525296 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084137057 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073399416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079823788 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074381655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073873207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072828659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082076714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073775822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072474106 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096386777 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083068611 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081649956 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071708404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078610251 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072207173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094263904 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125431515 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070040068 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076604634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074795444 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080188762 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07058783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09682882 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081924444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07055628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073936815 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070516742 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070627782 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073626881 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073056838 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073309319 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079290912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076493445 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09450373 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075768867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086754634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070490082 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078746943 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070188243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071675034 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070181913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095704187 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072739155 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110464691 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071423418 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071874248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079306754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078547764 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076946412 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070804763 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086908783 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081106869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075838568 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078620231 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074098523 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073211401 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099402462 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073124402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072746361 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071862911 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076141735 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073638637 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072256781 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083366049 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070300105 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073264207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087568272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070674058 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072316052 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076114582 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075132403 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07041512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081808873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074690206 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071552565 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079711814 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070941456 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073038771 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082310032 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077002746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069790879 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075841215 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077992688 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073984487 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073843211 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073325929 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072068638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078404914 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076986681 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074347534 seconds)
  done (took 11.071069521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162342699 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152335563 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074725344 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144765521 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079783402 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08213016 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148844945 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09841208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074684049 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074835035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074306285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114747142 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109884919 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124847879 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084291226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074264867 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095513697 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114963902 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148494823 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14401765 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094243463 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079567514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074574472 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072679164 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074086744 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080819973 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088151398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079681456 seconds)
  done (took 4.56436074 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083578664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103894807 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077607263 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092922906 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092364342 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071157681 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073117273 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072677401 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087319291 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081543944 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071030397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077721893 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080056044 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076971592 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074706544 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080804084 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080364303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075511136 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077326189 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077177701 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080960744 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094601009 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074908611 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070925214 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076174159 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070683905 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066834954 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08704972 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072414611 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095398038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069532998 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076370778 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084578021 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072233406 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07182426 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071312316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071158714 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07144015 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073106367 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072073063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06993029 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06186031 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070264032 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081826129 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084038918 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060093535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075490619 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076156163 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076093313 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068796725 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07435889 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073888598 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074181699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077944102 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074786414 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076520837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072417367 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076745057 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07898922 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070981241 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068674362 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069828088 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075777118 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06863245 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086050615 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075731561 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069961354 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071276181 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072684029 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084147001 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071059393 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075647007 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069045841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073317456 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075669922 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072888785 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072662204 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070044419 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071169072 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071704486 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059117091 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071136459 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057359451 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074274438 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069476625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069896826 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071098203 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075647551 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08242878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072305902 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076831661 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07229921 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07082911 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074066193 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064377748 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073785447 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081288212 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08516353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07135203 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068934467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082956204 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075796012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070969001 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060179958 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075426899 seconds)
  done (took 9.600955619 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093464489 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072653736 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084324997 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091595094 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088694629 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077463921 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080958815 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072418204 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085963019 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077000574 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079424259 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071106171 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081270009 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080531032 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07373672 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081063522 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075161386 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085667491 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085332948 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071490479 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07942 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083341631 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092203365 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083430254 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082653081 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083314108 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092188488 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080178487 seconds)
  done (took 4.027468102 seconds)
done (took 39.423249051 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.775182216 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947257907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.765259731 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096192385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.836377952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.945601022 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863449307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769432819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.01247994 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.79443541 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.069226332 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.819627691 seconds)
done (took 65.515772358 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.816803789 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.89922792 seconds)
    (2/2) benchmarking "String"...
    done (took 1.990201224 seconds)
  done (took 5.578551388 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.036109855 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.341600938 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.002161987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.757335132 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.76321798 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073568492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.566691285 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.27729321 seconds)
  done (took 30.469800157 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.966251935 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.984558909 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.47343261 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.501253078 seconds)
  done (took 15.664913777 seconds)
done (took 63.350786979 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.789593391 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770209468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.782232219 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735027152 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809297599 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.763405724 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.171404292 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.804264714 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.747493106 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74182981 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.75087796 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.173582444 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765169714 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.223097409 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.758553806 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.764854875 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.756604557 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.333559623 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.904019244 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.77114956 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.766651745 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.960551962 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.749722247 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.7549014 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.745867932 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.744364012 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.145617793 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747014031 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.359568461 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.744727619 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773307868 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.768716148 seconds)
  done (took 203.258826289 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.73952553 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.575598344 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.683667507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.779516888 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.070257432 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.921775994 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.822816118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.176819159 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744512174 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.764156149 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.880354846 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741368379 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.92042951 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.687936222 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.766426771 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.821267295 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.906492186 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.942179216 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.775008459 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.887931929 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.762608861 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.728352616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.664105579 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.872773528 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.754362104 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.842294432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.755924532 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756332227 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935041645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.850826565 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.776589904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.783329515 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.935427883 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.608627338 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.751979032 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.76358601 seconds)
  done (took 167.821102026 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.925133747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737718563 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.735957487 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.735407016 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736223714 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.735780963 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.742226161 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.737107078 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865133545 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868240177 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.364001205 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.298304246 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789263012 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.737570472 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539613222 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.734788987 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804348735 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.748683113 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.736691746 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749995593 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.763485954 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739703993 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735233568 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864200967 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.747856624 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.734852277 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74266416 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.736508111 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741379002 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109018544 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.735092271 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.72308976 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739609679 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740907332 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.977816889 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.737853508 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734891406 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584916001 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.307125653 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82934475 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.737741359 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741190952 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.736933751 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.952737129 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.73573818 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735694112 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.736379208 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.73898581 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881600665 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.736804403 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.868409505 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736647288 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.222020656 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.735485893 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.735703514 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.38257945 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.594492287 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.744066799 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.744106805 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.741265013 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740410489 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.754496725 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.423444626 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.822194509 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.74381411 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.743666249 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746502517 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745094465 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.954336434 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744828774 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.245283416 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.802110806 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.965541557 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864339254 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744682328 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807640036 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834605687 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.742900581 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743145187 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742154093 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.74134361 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.823168239 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.742507036 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.904362207 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.742990809 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750941034 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.743849075 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795367523 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812462947 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743694386 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59142605 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.744943316 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.743189499 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007389319 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807657567 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.743152325 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742858122 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742183689 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.880914924 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870224851 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.450246442 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.747176648 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.535299582 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892073713 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743619142 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886552231 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74711814 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824524622 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748767061 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743936669 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776283749 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.745990451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803008105 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.743287767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.115426343 seconds)
  done (took 398.435467306 seconds)
done (took 773.181829706 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.35149169 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.323545889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.430939708 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.341472184 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.317644668 seconds)
  done (took 13.438536648 seconds)
done (took 15.113382739 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834989837 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.837797578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769511156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835959546 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764642289 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.835565907 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817325056 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.769145397 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803517917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.768644837 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.804078146 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768491992 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755221485 seconds)
  done (took 25.0401693 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.974721513 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986847135 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815268392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973640357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791311014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.981289456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903410715 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901822208 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895961279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760764769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758471493 seconds)
  done (took 22.418847483 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979832276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981471648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822070735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.999181225 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798143766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975080712 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906899381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90031488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898259501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762292647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757740924 seconds)
  done (took 22.456533805 seconds)
done (took 71.590981276 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754653418 seconds)
  done (took 3.430518205 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782860137 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.950192259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761179969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758901001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754300346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755812666 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.759747217 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754106748 seconds)
  done (took 15.953113706 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.753354676 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751219845 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753736041 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.753881309 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.750931608 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750757639 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751422452 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.75070328 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.754838797 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750815901 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.753462532 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751763089 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753317062 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.75417758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753261378 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754610908 seconds)
  done (took 29.719924728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752995823 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75003647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.752125335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752225945 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.751179162 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.751675391 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75222858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75047249 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.751771511 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.75134003 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752760546 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.750999769 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752353553 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752571539 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.751761879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.753564045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.752164415 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752097588 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.756326729 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.753126036 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752894951 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.752333388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752010493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752721429 seconds)
  done (took 43.73458614 seconds)
done (took 94.513830288 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.520563489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.375180184 seconds)
  done (took 9.575604244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758035442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.75466996 seconds)
  done (took 5.25922301 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.75488127 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756438086 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756666339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.755507635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756141003 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75522685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755388997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755394037 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.757339814 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.75670955 seconds)
  done (took 19.239458765 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756616974 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756723147 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.753693816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756390873 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756275517 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.754366639 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.756731454 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756429808 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756487029 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.754544888 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756963657 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753969489 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756613248 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.75447701 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758649752 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754074596 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.755073365 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75451169 seconds)
  done (took 33.28248324 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.757154577 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757079027 seconds)
  done (took 5.194356469 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.755305805 seconds)
    (2/7) benchmarking "second"...
    done (took 1.754117057 seconds)
    (3/7) benchmarking "month"...
    done (took 1.753594735 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754761892 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754846051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.755279969 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.755592015 seconds)
  done (took 13.964210327 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757050472 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902602623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.96755197 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433795377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758916967 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761398759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.716320341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761055926 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762444924 seconds)
  done (took 19.502549655 seconds)
done (took 107.697341914 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596653508 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754726077 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.999297218 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.860569896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.772246262 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.093259565 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754335772 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.043523723 seconds)
done (took 42.557186685 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.808035045 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.486222991 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.51671972 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.883412369 seconds)
  done (took 15.567224839 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.747529748 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.270162632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.797461427 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.334333986 seconds)
  done (took 19.836021849 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.124124016 seconds)
    (2/2) benchmarking "read"...
    done (took 2.109801146 seconds)
  done (took 5.920607458 seconds)
done (took 49.81599684 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759299545 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.759299641 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759151058 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.7591146 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.75690171 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760471564 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.757344679 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.757754577 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.758255088 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76163055 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.76124832 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.759917709 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.759363172 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760419407 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757452871 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75737065 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761493786 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.757570149 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758440211 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757972533 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757935308 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760402133 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.758949659 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757649366 seconds)
  done (took 43.89950795 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761207498 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.75971633 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.762796001 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761039058 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.75776855 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760693457 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761040518 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.758743092 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762481939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761240231 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757855766 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758117638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762337537 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.759468515 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762713152 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759385972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761714831 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758596988 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76175996 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.760115859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761493576 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758832443 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759027596 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76181201 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.759037903 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760960812 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.762045437 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.760709404 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760550298 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.759530841 seconds)
  done (took 54.497755854 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.767381932 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.769257209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76209572 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762557076 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763262319 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.762348931 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.762261689 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.762698841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.762740957 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.762717796 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.763376723 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763356678 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763845936 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.763192887 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.762904312 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.763283506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.762969377 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.76404376 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762550012 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.764160539 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.763202947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.763573503 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.761399353 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.764497606 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.764644593 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763135106 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764354382 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.762996213 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764955193 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763804822 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.763310969 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.763334787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.763330681 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.764123721 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.765259621 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.764510291 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767808264 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.771228092 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.764131807 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764061041 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764385138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.765560858 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.764679597 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.763554558 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.764525076 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.766448142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.764991259 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.764716616 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.766642599 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.765043514 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.763961587 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.766106006 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764824968 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.764325743 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.764583663 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.765017021 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.764701201 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.765773921 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.76532337 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.765043768 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765349373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.764997853 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766020784 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.765473264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.765464558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.766084181 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765641592 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765292242 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766503216 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.76648701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766270164 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765233355 seconds)
  done (took 128.735240741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765490475 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76396003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76337026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763918769 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763523403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.765658374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765302781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766175207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764400622 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.766585098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766872824 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764915644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76535042 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766435995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766613601 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764106678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768059302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764437097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.76739823 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766578879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76701464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763458566 seconds)
  done (took 40.529775473 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768945429 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766411655 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.76521551 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768046369 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764912136 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.766965263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767813047 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767703079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767756616 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76454494 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764984078 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767801334 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766509707 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764456483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765521235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765603918 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766878351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766737209 seconds)
  done (took 33.487392956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.765282759 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.766503054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768275129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765829818 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766524161 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.768918271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766068989 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76839924 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768241476 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.765495412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.771051956 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768746569 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.768929169 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767866086 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768844079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767506398 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769761225 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766093735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7694957 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766938528 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76662549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770555269 seconds)
  done (took 40.583855842 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769287268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770638415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766657594 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767348164 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.768116688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769572634 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.769360592 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767805513 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769372376 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.76930313 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767241779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769137072 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767344563 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768236617 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.767240906 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768730164 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76954234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76861878 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769939096 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.767403168 seconds)
  done (took 37.064040294 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772889199 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772421561 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771292838 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772441648 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772652951 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77547748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772230482 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772002928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772196618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.77316569 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772746162 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773937529 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773436591 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772840969 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772646241 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773311417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774187324 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7741739 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773693735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773823648 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773523596 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773044394 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774581981 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773192154 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773423755 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77405994 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774438773 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773801748 seconds)
  done (took 51.346537983 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773352883 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772002469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.769212307 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.769987397 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.770302462 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.77015923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770290276 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.769404868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772500714 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769287241 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772905991 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772245043 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773153564 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.77309294 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772007421 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773114293 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772837491 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.771171481 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770238301 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769649375 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.773123977 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773373075 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.772946166 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771560222 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76949417 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772985198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770573005 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77162648 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773200282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77039928 seconds)
  done (took 54.843681634 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.791320715 seconds)
    (2/2) benchmarking "in"...
    done (took 1.793693932 seconds)
  done (took 5.281224668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.770705063 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773716085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.773454389 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771302233 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770599306 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774171811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774976113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770761179 seconds)
  done (took 15.876997617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772982183 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.775169258 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.773920983 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.773090935 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.77513929 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774152873 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781102659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.77644305 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.775055034 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774922402 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.780423347 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781747511 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.776765233 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774280297 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.774725514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776872524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774456804 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775665449 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.777074127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.775081892 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776991961 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777328087 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777769779 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772697957 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778501497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.784873771 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.78037692 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.775315388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775194708 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.779457769 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.775357033 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772454653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777275452 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.776903811 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.774898393 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778980338 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785606758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777135365 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.784055932 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779154994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778868796 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.774519483 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779044682 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779027717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779676602 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.779425504 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.778243606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774148134 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.777365028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781256771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.780819886 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778374724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776145989 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781435453 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.77905977 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785631736 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.781429579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.781946633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786865651 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789590483 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.791224947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784952239 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779554365 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.782423407 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787441783 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.801456308 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785329601 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776969 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.776716245 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.780332268 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787015689 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791007774 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.788543191 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.78168345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783042137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.779541566 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77952856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779442534 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78782961 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783654068 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.782192858 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781547498 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790275988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799421338 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779447891 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782026413 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.780986744 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781076785 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781455838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79055785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.782332472 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.780558957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.779677982 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.779603126 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.781501077 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.783091263 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779909943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781743214 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.777319986 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.780765809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781452709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783390748 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791136063 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782125826 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781524846 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.787314062 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780194405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780840219 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.787868827 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780974422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782252139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781240516 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78666855 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778527479 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784437997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.788394246 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.781898277 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.782017986 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.783257671 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.781525578 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791293012 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80597796 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782882588 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.780848117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785868366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793813287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784007853 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.785065731 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781892426 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.778709369 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.779776705 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783448025 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781951577 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.783464419 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783975776 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783513188 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.780698071 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782809597 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.784151752 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.7838531 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784174384 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783668961 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783823233 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.784746828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.784316297 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784395244 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.789531528 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783945486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784093507 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.784785302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779568168 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783078232 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.78350142 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78558437 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.783914721 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784106167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783202325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784386909 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785066699 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78271907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784477745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784410019 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787006285 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.785267843 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.78877913 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783034331 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.781369359 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783766508 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.783943027 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784666158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.783361598 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.783453867 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.786866635 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791546717 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.784527276 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.787409706 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786449471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786899052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786811312 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788096537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.786916192 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793423528 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.786364108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.790929398 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.786656571 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787668174 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787399028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785977219 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.785474826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787839162 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.788433491 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793636023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797748614 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79388312 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786980359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788151017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.786792797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.792424653 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.789965999 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.788579901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785967293 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787456206 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78592753 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788829701 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788312904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.787641695 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785646256 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785033542 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.787082138 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789632986 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787372093 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.7866886 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787459767 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.783864477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786632462 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787479184 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786065161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.784298925 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785749831 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786692518 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788184804 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.787744489 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794533594 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.784585863 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788516844 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788890062 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786843159 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786541405 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787106497 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78930738 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787438133 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795162713 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788973728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.789561992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794764158 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787414913 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788044832 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793107693 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788125245 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785685193 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.790419396 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795336712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.788643761 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789750492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790576633 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78796926 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78771551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795073139 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.78731576 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78861406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788977632 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.790221089 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.785942928 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789965791 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.789495181 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789514404 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790639319 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788940733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788334842 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790527387 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790093207 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.790682979 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.791129917 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791351385 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.797156882 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.794896701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789470812 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791655496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791340166 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792704369 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790604844 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.790539753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789121146 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802205498 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.799654566 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796609824 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793268565 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790344342 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796016317 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791300367 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794860694 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791066672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791757432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791517567 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791081312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.78780217 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791467679 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.791360293 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792688824 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793380914 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.793452968 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790409133 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791447389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.792191601 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.79369153 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79059752 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.791224796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.791456028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794524483 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792686484 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.791503414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.790526551 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798965351 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791886284 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793191046 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792866136 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.79182334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790989253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.792640652 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.793886341 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.79510898 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.800492223 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794951657 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.80034479 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792647077 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801551853 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.79368954 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794986089 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.800495913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789141928 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.791772438 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.792723313 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.794594792 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800320364 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.795025344 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.793035645 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798664614 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794391742 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.795205497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791226291 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795366352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793118582 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.794819973 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802123977 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.795073308 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.797189987 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796308222 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789844746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794849249 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793687288 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792665817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797199308 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.79582469 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.794308718 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.794073611 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.794694115 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.79318173 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795540155 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.795386373 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.791401679 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.793288928 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802115382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.796851868 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799102874 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.794664641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803037283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796981191 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802670094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.797332186 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796453949 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.796906601 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794980227 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79613255 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793693593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795853775 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.797341525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.79648792 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.798510888 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796430341 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798157003 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795397261 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796972445 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794862347 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804254685 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817239198 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.796560577 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799750077 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.792440714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.797157378 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.800837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.797676907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795358751 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799272444 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805465384 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802713552 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796178186 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797166726 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798418341 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798171196 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.795504739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.796197569 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.797520474 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796644416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.797884872 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.798208517 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800987717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.797003098 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796706276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79883274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797512605 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807227679 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.798109816 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.798933206 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798696798 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796562571 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798234984 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.797835223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.798964306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798914956 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798901956 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.800585188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804265091 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802971782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799669248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.797143991 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799078172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.798446258 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.798564081 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799247189 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.79904627 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80047436 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799407059 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.799613925 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798968494 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.797505374 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79824935 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.799791081 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799459441 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800790458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.80559676 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798537903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794747324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797284666 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797990508 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.797617262 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798518906 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807482327 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801719094 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.809783348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806622513 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805023214 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798701578 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802419235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.80711027 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79864846 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.800490204 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.799711073 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800690884 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801162107 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.802566102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801874688 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.806914067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799466079 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799689809 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808785327 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.801228108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80096794 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801149981 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804917005 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.800875178 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.797305018 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.800625622 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801150843 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808385528 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.802403972 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803753028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802820702 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800113574 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.802923182 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806182367 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.800932792 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.802426337 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798986068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.801818881 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802377289 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800753773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798593744 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801128053 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801080486 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.804301835 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807242727 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.799215173 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803414661 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802341868 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801954629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802804901 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801127589 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799046263 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.799863962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.802378766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803336018 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801530244 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.80471472 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803057035 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.80327048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802114182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804212579 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804846231 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812033945 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808441983 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799471618 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801644611 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802766528 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805943284 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805147506 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.804106857 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80291562 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803282641 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.802189845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804316724 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802925513 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.806291509 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819358366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.803264953 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804292291 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.804584388 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808287204 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804146958 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801579325 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.804771188 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806698999 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806560053 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812506478 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.805850007 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811316567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804874507 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805880764 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808021827 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.80710243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811402647 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.807697266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806082837 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.8074878 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80923208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82007426 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803799092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813733501 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833105137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.805360311 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806396246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.806537966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804212446 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.807173432 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.805616936 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.807366425 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.805039203 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804694332 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.806011699 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.807049817 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811445565 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807238826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.804962508 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.806067379 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.805712022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.806925815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802588733 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806581035 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.805370512 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806767569 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.808208511 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.807392369 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806541828 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818138921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815019604 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.807080758 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.807009695 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.80273687 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810501095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809667223 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816608291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812377464 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.807635797 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.807780091 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.806988006 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807501251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80370418 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808034317 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807145536 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80676733 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804558762 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.819399043 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816607736 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.812257556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.8079189 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809964489 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807777598 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809486803 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810687957 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810586923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.809588396 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.808987172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812676876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.807568429 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.806374198 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810211535 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.815080212 seconds)
  done (took 1070.642678936 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805119618 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804945108 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805680331 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805219362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803880597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80645396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805100614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805219682 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805394743 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805151793 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.805080696 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806904895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805404708 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805880225 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806570354 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806162349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805602035 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.806784815 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806082279 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805986307 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806432451 seconds)
  done (took 39.64754352 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.808534306 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.806694062 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806408053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809165364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806574864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807940884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807361939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809293259 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810375707 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806989812 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809339861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809071996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.807833434 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806681542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808211821 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810250548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810420313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807786904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810274598 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807129222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809639601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807892143 seconds)
  done (took 41.513275633 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.813828891 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811745462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.809900513 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.80655689 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.810563245 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.806647304 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.813174819 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.809950778 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810925786 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811258187 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.810206672 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.812164573 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.817710061 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.814691434 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.812850176 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810859358 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.954387982 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.812908917 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.812882583 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813725536 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.80871655 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817299826 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.809181238 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.809731589 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.81064633 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.813386794 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.81083608 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.811999668 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.812587926 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.813321231 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.817790737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.811095056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812530479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814172071 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.811916191 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813157239 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.815921705 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.813336393 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808955006 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.812498953 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.822033866 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.8330168 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.813942587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.818415973 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.814442275 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813078908 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.816446972 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.820681481 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.81019227 seconds)
  done (took 90.721407204 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.814165361 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.81227076 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.810334839 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812273762 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813935641 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813298746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812691048 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812525755 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810608075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810845545 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814045205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.812354574 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810506837 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813138628 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813726064 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810652437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811441382 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811731423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.810759144 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812075954 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.811218978 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.813838309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8135536 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.81135303 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813765731 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810555197 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810673031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.815066204 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.812152585 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.810633099 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.81403699 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813646113 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8145728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.81259346 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811803896 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.814466589 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.815530019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811874742 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815593049 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811557735 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.814101209 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814865627 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.8147573 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815283213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812701131 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.81252257 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812271608 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.812285173 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.812182201 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.815277727 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815540622 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.812480602 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815407729 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.812538491 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814937969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816412648 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.813043882 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.812824007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.816466979 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.814292762 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.813976673 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815705739 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81451736 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815868893 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.815200061 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.81384097 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.814268425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814981315 seconds)
  done (took 125.036950289 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818016118 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.81777431 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818775602 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81763621 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817846882 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.819149958 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817963637 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818566989 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.819524111 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818812206 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819024667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817728778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.819176175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817660669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819270931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818906391 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819138639 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819583225 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818482932 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819008063 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.819121373 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.819026604 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81866501 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819378832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.820198073 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818890898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819671187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819771515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819839704 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819946714 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820026277 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.820977417 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821295601 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819961173 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.820352346 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.8210969 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819436215 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820736146 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.821113128 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.821598768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.820786222 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820836652 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819954843 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.820069319 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820899245 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820276555 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.821310574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.821395031 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819812473 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.821287215 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820805671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821332112 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820073557 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.822136714 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82090653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.819218275 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820925512 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820419844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820688326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.82095342 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821274956 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.819975691 seconds)
  done (took 114.567635973 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82015135 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819176996 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.817699673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81756568 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819867981 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819042839 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819474799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.820939582 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820285146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.81985613 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820750255 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817262567 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819044476 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820109524 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.81830363 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81908707 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818442392 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818151141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820521226 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818073931 seconds)
  done (took 38.124489716 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.817564172 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82101156 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.818850169 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818246502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.820748044 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818866339 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82162242 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820850865 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818005589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821904169 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821508488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821993879 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82028016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819348268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82153171 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819134396 seconds)
  done (took 30.86292427 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.819335245 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822846344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.824068686 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.823471137 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.81951542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.819854846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.821264047 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819420063 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819306686 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823582252 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.821045959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.821859712 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822748381 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.823868315 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.819713365 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822040952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82032899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.821160868 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823501998 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.824043817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820616465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.820939056 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823393763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823092072 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.820835854 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.820943665 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.820658717 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820209603 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.821006817 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.822653176 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.820210485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.82376567 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.820286314 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.821165578 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.8253759 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.821185251 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.823104394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82429883 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823451984 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.824763695 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822901436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.822528927 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824022246 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.824487372 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822771074 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.823815657 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822329367 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.823533834 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.823194902 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.821993811 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.824789137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.826700104 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.825191077 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825480343 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.825114979 seconds)
  done (took 101.978085882 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824483667 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825012572 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821999896 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824606815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825041159 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822669588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.825062121 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823291369 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822296406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824990095 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823667397 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825140267 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822559674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825632254 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822957428 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82508355 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823191253 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822884236 seconds)
  done (took 34.577072047 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822661045 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822606635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.827065642 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822514728 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.823286582 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825936463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822953116 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825841225 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826129552 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824273523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823458547 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826504047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826083927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.826634903 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824040898 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824453342 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.826734037 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825896238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.824009832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825495836 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828035031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82693969 seconds)
  done (took 41.897296037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.827051552 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827030106 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.843110565 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.846684994 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847417047 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.86184837 seconds)
  done (took 12.800365174 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825441201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827713854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824754697 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828026634 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828100086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826376654 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82619772 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824589882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828470771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826306058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825559105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828428793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828654142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825407642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828163929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828771473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826197827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825960775 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825058654 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827694201 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825013936 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827615613 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825940292 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826369433 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825615851 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825756159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828422165 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827574602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827360687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828180928 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828490135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826120992 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829729021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826976921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829105521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828829618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827676396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829604734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829410599 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827316909 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829571866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828902448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828763592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826105639 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829958586 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828263861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827406627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827235194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827763999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831103528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829795245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827612162 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829996657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831381308 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830803764 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831057793 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827709962 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827722708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8310117 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827997242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827235044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831376373 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828306445 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828602863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831691569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828832391 seconds)
  done (took 122.39336429 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829031836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828926906 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829308787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828363992 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829950606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828097241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828906216 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828625504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829293643 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829222557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831746443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829485647 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828996178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829181632 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828479747 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829844727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827925884 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829550125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827894015 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831776634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830060497 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829037963 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828784765 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829137568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829010262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831865115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829517169 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829717421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829903934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82906361 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829796557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830667002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829232088 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829774793 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830192541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830761016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83009722 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832168125 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830821387 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832739418 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830879725 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834472637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83253068 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831045123 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8316229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831194532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830545089 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831338613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831809023 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831050051 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8315968 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831163825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831480403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831781053 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831751385 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830871402 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831537336 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831024875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831691174 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833806115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831947486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830700834 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835132839 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831964984 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832683921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831034662 seconds)
  done (took 122.566965999 seconds)
done (took 2495.163650464 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.861284801 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.892259205 seconds)
  done (took 15.508057784 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.99513116 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.948622454 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.833033118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.879497771 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.834089724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.831552339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85541519 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833875932 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.834296408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834078737 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833761262 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.019890709 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.829896732 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.834092264 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.834659606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.927539165 seconds)
  done (took 51.722125248 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836680487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.838043895 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.848172202 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.841102447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.836667297 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849969086 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.871214518 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84063187 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870432391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.849912545 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904999143 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.846541945 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836264892 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886365405 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.849766683 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.8516357 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928691449 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.911624937 seconds)
  done (took 35.254898302 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.912077182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.84129333 seconds)
  done (took 10.515171431 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.853195548 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.857010002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.904204594 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.865053557 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.84039859 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.853567604 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843333822 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.844280126 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.872296993 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.017474809 seconds)
  done (took 70.510683624 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.844870819 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.839676643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.839614891 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.837655546 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.831331785 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.834088824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838427919 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.831976519 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515165416 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.889307921 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846280004 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843161318 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838588149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.840271144 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835833496 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86149274 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94951541 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.835949159 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835938991 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.845981351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.838919111 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.908997198 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.853627257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.842840935 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.870318185 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.506646361 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.848410582 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.846213751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942131215 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.838159202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.839505325 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840429441 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.840668728 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.245026741 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.107602495 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.841112825 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85521654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.84743729 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.836268533 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.9762431 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840009472 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.84520205 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.599399118 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.088162169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.946613414 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.885520918 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.149397139 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.860008316 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.840994061 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.868844866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.844307247 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.841281406 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.853904144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.335853765 seconds)
  done (took 130.725229146 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837987674 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.186742675 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006816365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839715572 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125771345 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04650351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839522173 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887451848 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839839074 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.073726692 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099978204 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946543488 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839680022 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837276719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835059505 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835717209 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996198668 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913069424 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839580908 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.835590686 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868367809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084569508 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962755182 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840902169 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.867002459 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053101937 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960747696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946036848 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.725692134 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835792172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902779161 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841431276 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.840568428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837592545 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996407393 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936068391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92995721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841132086 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837366768 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837452987 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510807712 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040784926 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940058083 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981854553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039844199 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046594363 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.626732806 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.837332454 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.580506121 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005999773 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.071381027 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.076723017 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96449461 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841607158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.367116533 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836982226 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83744295 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092447335 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984341067 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.941787026 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842372971 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838197226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83929987 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087853713 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842585395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937445322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842868242 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837933892 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939120758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942342729 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.980956432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056525244 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873224665 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.717844839 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.378563585 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09024548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908730242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093582213 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841889633 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839471159 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921265067 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.688144062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096875366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097499618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096923012 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879897065 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.568658041 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.839644291 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.071168525 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.065764228 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105061876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051399959 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.086995753 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.172850483 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840454863 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.840257527 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.060521488 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979507228 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84489095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187184783 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076097425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.401797381 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862513707 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149976976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977105265 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844667226 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.482379612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843032862 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074259969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885308885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844233225 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840514311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.065251676 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.836082607 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842015205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.482655771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.907510626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847354973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078589474 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845661076 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114582346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843563314 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082449811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.851887823 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876391596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.074992686 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.049824401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.847967365 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089728616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092249484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960644599 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067490696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.540340063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843350717 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133636362 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845705108 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.842383359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014735134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844686721 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99174037 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849698321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139702073 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869542212 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079565247 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845951497 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104841782 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880507852 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897967184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845523109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977972735 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84481147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.779204537 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00322529 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846353926 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843382263 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.660396255 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.844972886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996813764 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.081619791 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869469947 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92092567 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517538053 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845145372 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927396274 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872672854 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.235676817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.845391652 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101988749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.851899309 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.844526054 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.843868989 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088893035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.032767084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847281912 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84363132 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.754571545 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.843769994 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844753083 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030169774 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.301821175 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844352757 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049402286 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850571781 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975925726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848561269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.930757601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186329297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845063264 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.845653313 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845823586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845390399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846697946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11168008 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875171381 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.366731636 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.987180348 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124798873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159935754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096693106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893092831 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849549409 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103243716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847753553 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.912258513 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.848412707 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869336641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079645865 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851135459 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06107141 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.129522184 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703550512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898071246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.850009271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849046373 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845937738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.994211174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94006486 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849232198 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847012365 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.965645268 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972803597 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062666379 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.848437447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.919013299 seconds)
  done (took 897.710869601 seconds)
done (took 1213.703411473 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.846301111 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84877263 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838562904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850961268 seconds)
  done (took 29.156614631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856205886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.85253478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.855206182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.852643672 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.854228078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.853678043 seconds)
  done (took 12.897732107 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332062007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848619761 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850563831 seconds)
  done (took 21.803836185 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.922359516 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.242650024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.9572755 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.2893708 seconds)
  done (took 10.185196576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.856101208 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.856297494 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856704472 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.85568645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857722144 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.857760137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.854620353 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.855164639 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.857428824 seconds)
  done (took 18.481940682 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.822521075 seconds)
done (took 98.120675926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.880595693 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.313378464 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.896282077 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.842295647 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.919775055 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.848389184 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.165400225 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.989012188 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.856145114 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.918669315 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.007475426 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.873720722 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.146407208 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.884158954 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.774959979 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.033343916 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.021804598 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.931014063 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.901400256 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.854789483 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.982183381 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934436726 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.007634747 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.072238978 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.962151524 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.942356218 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.943225619 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.08886092 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.472265111 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.169479073 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.902338222 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.987522029 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.94117189 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.029562413 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.932993963 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.010838349 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.873320251 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.986905682 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.957298751 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851599758 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.21310325 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.096171763 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 2.073970234 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.99683935 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.875636076 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.851391677 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.064879873 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.495844332 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.840645489 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.961173778 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.351272861 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.094110102 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.18041579 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014215996 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.878141072 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.83819347 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.21520428 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882568783 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.856562004 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.363945143 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.560518199 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950150564 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.988712483 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.989387121 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.079677931 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.85874242 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.181309848 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.334042556 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.877403286 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117090041 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.160951632 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.046001662 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.170095001 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.077540162 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.962492101 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.167409592 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.100976331 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.845090787 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.495231426 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222343271 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.004356329 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.858107343 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.017857913 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 5.589414454 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.261258286 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.566808136 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.032591936 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.859142259 seconds)
    (89/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.247746474 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969658897 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.006656019 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.097369828 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262024005 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299640256 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.932366621 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.944476222 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.951716835 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.948697519 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.23472608 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.667978964 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.133548497 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.543193629 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.843421497 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.941720224 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.054640438 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.804605898 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887925059 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.163449367 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.287948827 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306620518 seconds)
    (111/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255343525 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.890485988 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.939551074 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.145226448 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.847299995 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.911576794 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.038457061 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.038118378 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.163777227 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195364495 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.844947806 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.892511254 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.09573566 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114664289 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.164564325 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.945427049 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860913405 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.925762755 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.081380738 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.848101398 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.352814499 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.203693435 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.114096763 seconds)
    (134/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.967945664 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.766875527 seconds)
    (136/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964434034 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.858337199 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88314004 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.857984906 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.419267686 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.849374886 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.302923004 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.039934405 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87616446 seconds)
    (145/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012321068 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891209224 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.036562684 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.87639146 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.073878139 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205408174 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.887824392 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.151870123 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.873167982 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.955024108 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.880336447 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883803842 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.872990296 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.550863588 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.865201816 seconds)
    (160/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411155821 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889572309 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85959973 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.941403149 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.595855888 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.284765897 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 4.750513356 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.862140959 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.804975048 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.873838363 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.060216644 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.861376143 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.987905235 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.994839543 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.289202258 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.124877364 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.279299792 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867256809 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.921043667 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.488154379 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.83055682 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957558226 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931927791 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.170766023 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.24512357 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.131462435 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.270059532 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.250164494 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.69545824 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.991325784 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.86166865 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.865315865 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.516275875 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.82245017 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.260635813 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.038824048 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.852725088 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.269030756 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.849606578 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.862866234 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 6.867862442 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.867260367 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.478366938 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.881948177 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.929551486 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.793050505 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.972217705 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183219215 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.855756845 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.181378211 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.929567618 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.051131502 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.061283831 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.973317643 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.24581637 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.711490548 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.067487623 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.018033215 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.714243176 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.87002882 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.454791505 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.030621095 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.875950484 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.887086491 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.431091021 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.000059741 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.490220835 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.882690091 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.120135328 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.780611073 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.962758888 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.523624479 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035504366 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864214495 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.889611552 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.548369987 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.695664063 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.186019406 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.884819885 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.136818081 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.971687762 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.707681115 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.27864481 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.868755671 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.096761237 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.856626889 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.06562649 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.104286246 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.950000629 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.990518185 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.098413623 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.324555744 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.373456133 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.369632677 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.210769335 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.866237937 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.990852107 seconds)
    (257/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.376497066 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.062189468 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.033039449 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.974720274 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.999548903 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.865140458 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.31486228 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.009687869 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.928132176 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936414847 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.218904855 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.001159194 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.872985296 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.424192898 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.871607821 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.180927066 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.189353786 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.229878231 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.824773742 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.872320382 seconds)
    (277/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.040634 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.85175395 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.015357991 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.042721096 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949730504 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.891267505 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88319833 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059314326 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96293887 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938065298 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.932130646 seconds)
    (288/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.001959603 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.114387634 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.278775428 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.873367035 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.378576228 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936747845 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.685370307 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.009881493 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.034326514 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.830387586 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.076791565 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.948018592 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911995186 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.869908471 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.034471581 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.342600363 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.051740646 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241150395 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.096071009 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.297666974 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.902859035 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.894385053 seconds)
  done (took 1005.475339599 seconds)
done (took 1007.306279668 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.901523944 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894768617 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.878771725 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.90075896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9898474 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.906225029 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889645476 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882396799 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.927466992 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.930435063 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.877713715 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.90403509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.880291438 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.879608441 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.879538555 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89327398 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.194479924 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.91242386 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.896952129 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88981343 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.8967826 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877981693 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.931039001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.905542652 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.885013278 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.884075359 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883432128 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.90059042 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.993196385 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.884745831 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884639634 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.893388839 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.194061885 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913063118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877895958 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.900438665 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.89323078 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.891972463 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885135269 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.912462909 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28280585 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.924388199 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.882341753 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.882399868 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.883164307 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.885789186 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88322969 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.887890129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894595119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895991849 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274393665 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.940927072 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.884965471 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882592003 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.893668032 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.883367664 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.88683192 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898601994 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.901548239 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899408198 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.179348559 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.921345087 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.88632187 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.900085634 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.890120955 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309413769 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.921989167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.888145331 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282010234 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.931496826 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.309232594 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.935684679 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.8851874 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.898192521 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915103854 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.197132852 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.912533343 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882471648 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891922184 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.882125201 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.894919077 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898858074 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.888234286 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.884576228 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898089059 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.912383289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.893753676 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.890995263 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89753686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904932558 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.892936517 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.897100491 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.889373772 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.881056559 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.895376981 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.888304965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.887946188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.886979132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.893015651 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.895777978 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.281935509 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.944673515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.8820809 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.883284732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.885273343 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.898726244 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285148738 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926814859 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.909630142 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.933777393 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.88793028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.181236171 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.922714933 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900167291 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.89707733 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.889113081 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.881423991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.17969315 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311406815 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.942545184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.885889695 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.882333496 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900273912 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.886819277 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.882235973 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.201649165 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.920259262 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898531492 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00627334 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.897979171 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91801806 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.886914975 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.890355897 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.917637084 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902702959 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.919269298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.889792554 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903812782 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.903391652 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.88412999 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.897606628 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.898949764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891131183 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.897557274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883065003 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.917003892 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902834737 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903512 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90949718 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.00838206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887651196 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.183609688 seconds)
done (took 296.124073598 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.963863856 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.877994211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.990976454 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885145696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.970472752 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970296282 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.880502906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.880103877 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881807244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.262630437 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.881603685 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.882113065 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.876964663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.881141968 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.974133535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.882641964 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.880482462 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221999195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.886539677 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.961201074 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879412031 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882443427 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.884372351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.266000408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.878421377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.882250967 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.955784186 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.883696966 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227657677 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.884504332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.880083406 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.228840113 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.974958694 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.902757436 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.893562128 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.891060458 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.966224074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.889024445 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.966577437 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971956807 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.984589136 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.927951088 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.886964532 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.881761425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889622545 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.888637098 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.882116623 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.912836814 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.887530607 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.884424047 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224301653 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.896457434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.893426871 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.883502697 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.883567108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909753709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.886833646 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.891863778 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985076514 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.890182763 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950983152 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.276063262 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.261733041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.887762574 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.885955408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.886127072 seconds)
  done (took 185.405333778 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.956987041 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.971070826 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.957241089 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.896238931 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.938320759 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.957152416 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894108232 seconds)
  done (took 15.37442707 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.897125637 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.891496176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940035396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939889205 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887578449 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.038750207 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.891903604 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.900312015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.886762119 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.94037326 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.891925907 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891905558 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.896403154 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.889864325 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.941357297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.898794144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.005582216 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89178228 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88986262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.040018885 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885121292 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.896064832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94307418 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.899465035 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889378551 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.895305924 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.473171816 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892164846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887322871 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.890888811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886718951 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.930271162 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890609219 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886885824 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88803131 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.00548915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.89190445 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889152415 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.890701844 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884296014 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.890760653 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.891713114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.890462561 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.889736859 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.89003605 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.912221705 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890053536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891030295 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.888886117 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.892532155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.940067894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890834131 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.886224254 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.890790817 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.947891105 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900969282 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89195295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.889198506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892200927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890410314 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043451908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941170226 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.895491642 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944773861 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89337927 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.891423526 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.893479378 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.893290262 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.990832361 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.893133346 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944582749 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.891815477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.051430604 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.918003333 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893527009 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.896793444 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897974434 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89334425 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.891658338 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.899738312 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.890218957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.89498408 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89779235 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888339785 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888541686 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.004959494 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.000393352 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.891104249 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.902234358 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.895913306 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.885585868 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941107068 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.889306562 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.885573005 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944369331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.004370199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.943142963 seconds)
  done (took 207.911905729 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.891958317 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.894184427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.887947811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.904374173 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.887604059 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.887881524 seconds)
  done (took 13.16053856 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889488994 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.887268616 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886636668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885978582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.888729226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.885881377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.887400019 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887847821 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.892987158 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.88407485 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.88478187 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.885529297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885361113 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.887862159 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887401293 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.884464842 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.887358831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880657603 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.883668305 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88707939 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.027650089 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.884659471 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885632083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.883247865 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.886196646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.881546644 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889105088 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.880334404 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.881277972 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.889752485 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884838092 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.88038615 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.879443771 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.88486278 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.887563329 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.877602997 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88161633 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.878429107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876284669 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.878003028 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.87357535 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874714693 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.873374725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.873863064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.874041267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.876090994 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.875030924 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878613877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.872336135 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.871120448 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.872829065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.869170519 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.868087043 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.868366082 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.870909895 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874030293 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.869645704 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.86685395 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.865898692 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.86606277 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.867088502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.866275046 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865433334 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.869978476 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.872458773 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.863792452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.865453196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866872873 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863225986 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.862427451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.862572137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.86024242 seconds)
  done (took 138.15658589 seconds)
done (took 561.829630265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.940919018 seconds)
  done (took 8.720112825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.9126262 seconds)
  done (took 8.762665125 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.410816696 seconds)
  done (took 10.224874991 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.899235585 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.916544308 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.896671807 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.896067188 seconds)
  done (took 29.442843707 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.95548351 seconds)
  done (took 8.766075627 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.916779386 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.891895059 seconds)
  done (took 15.653009834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.922759309 seconds)
  done (took 8.735996082 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.962756652 seconds)
  done (took 8.798755578 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.89657966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.919116569 seconds)
  done (took 15.638616674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.874951129 seconds)
  done (took 8.683971669 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.507723666 seconds)
  done (took 11.405138994 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.898577789 seconds)
  done (took 8.803465212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.962119887 seconds)
  done (took 8.767377436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.941599297 seconds)
  done (took 8.745190751 seconds)
done (took 162.929381816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.882933652 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.880484161 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.882778246 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.87868128 seconds)
  done (took 29.326407815 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.914739956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914737668 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.916599692 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924625118 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.915970679 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912779297 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.905117002 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.907812149 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.923398321 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.914362451 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.913439681 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.914763573 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.913597313 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.903281528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.912878077 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.912222727 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.921329313 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.911698675 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.90260843 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.91313837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.878416537 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.921629876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.912491246 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.876922971 seconds)
  done (took 47.658700081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.070126556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.94690238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.02820213 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.926729581 seconds)
  done (took 9.765047989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.92299546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.925166326 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.936949662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.975787347 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.995177642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.931648665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.896335988 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.89025442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.878884566 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.919834489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.995267789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.915243963 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.004905486 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.868152837 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.050366502 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.864783599 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.864990973 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.916566812 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.968970097 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981666495 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.865824063 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.915250187 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.918106802 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.912462634 seconds)
  done (took 48.107764412 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86085799 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.868231547 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.867435679 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.859938412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.863417504 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.859868768 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.865859261 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.860714028 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.881053066 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.860800177 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857494936 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.85695291 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.857165704 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.857766085 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.856858083 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.870416377 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.868137167 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.854635271 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.85798594 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.861632223 seconds)
  done (took 39.030373397 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.848698339 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.700325216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.196520111 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.102221259 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.846576677 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.848637509 seconds)
  done (took 31.319963213 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.861233243 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.860851891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.851983349 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.911108834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996959005 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.858841905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.851320389 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.864199443 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900856488 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.918022646 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.871970376 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.881067474 seconds)
  done (took 24.394979708 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.847165488 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.851021077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.848434053 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.86498313 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.860847154 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.858391179 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.856783051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.844357976 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.864615799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.870010005 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.857782453 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861597543 seconds)
  done (took 44.05634452 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93358119 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730856903 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499456776 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567012993 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38005995 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054856358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364316775 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017788564 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.849071362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11958409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.420475061 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145801233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155904559 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904787396 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.972415256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36656105 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202412739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141307778 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935295711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645361114 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022470021 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496806841 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.61859929 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028662045 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115383763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.036382603 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.165632965 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863370042 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041623062 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944519495 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914257616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906024554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178158599 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125408328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03861611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91503589 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558765564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.625176388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.895735557 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.590797057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600569154 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.036879669 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913243569 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906433271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83863608 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361515187 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19273944 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.911084539 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608436371 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906728527 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916882294 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996780472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.909354683 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.722867292 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857170956 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.184305473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.903623282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912785471 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478748691 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.98375579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451352253 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.952845563 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.999645525 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644242485 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377493706 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.064246188 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.911397322 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91072134 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840107017 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.605655528 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028144677 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050787958 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.927773209 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556333291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223996229 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.602768386 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986588766 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21159804 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642241038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.954616936 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134913861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862508491 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840813556 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.764191161 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840622476 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184350014 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950740014 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.584604269 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95157348 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077746793 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918853263 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927695318 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913929977 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129230334 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.786133483 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905132629 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.453993725 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183690812 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925481087 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075392594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836334908 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.90522562 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15582654 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.11319761 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071741388 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.48390197 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060057358 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898971652 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95796037 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.747218408 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017652135 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.184012069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961371644 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983357571 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021472336 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857642799 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203477715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929403223 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.064704198 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.516373763 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156181707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.231057179 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151012722 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976123962 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895139179 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896473076 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645461018 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516977864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.112133961 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.890433171 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315094754 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010085699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.895335399 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820899497 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.504924442 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.518941879 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.984801975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102219561 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880615576 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254621602 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809814708 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021841279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988652069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.0973181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.529481462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.961602861 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135127183 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296893838 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.16935747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999734962 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896793203 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995278913 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898549366 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.249958092 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243131927 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.881714666 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.88180867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.629614403 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948047912 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882617135 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.884513997 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677766841 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1716281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914874504 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882191616 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.810829187 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.894139748 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964419621 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885411074 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889122072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.4085559 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.632850656 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.891332842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535906466 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106478476 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889729037 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.56822357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06941271 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965175167 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175977275 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952333904 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.81428846 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.583382319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.584466966 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883546026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815569451 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883792234 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892790973 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893552867 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.080434463 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173722364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93705206 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623126245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.000837853 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894473331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888315484 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88416963 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.406002387 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975706541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435710939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007619743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021422003 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.898252265 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817063291 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888276254 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889027968 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886066615 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.838394551 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937121629 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.629874238 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219161266 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14287108 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.532575288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902297265 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.600818409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.016170734 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.909104805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.460107369 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913354554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.994637668 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99346346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.930052018 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.610452369 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.702675475 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491802005 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242645511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253294016 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379060569 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.389148376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.252547529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092994084 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154447942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448263688 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980666633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098075057 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864182911 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005368041 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.573845964 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281981151 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93646965 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147141821 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314070797 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.559047072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080671322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130726769 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955721879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793999564 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957857016 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.44394451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076865144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.52934772 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15210658 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089738291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.49995703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.029592224 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.922489183 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401011322 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01302559 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.6302085 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.281675274 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38482851 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.668649862 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293014663 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923578971 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367150504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287801731 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.200600852 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.122195488 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85649867 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932510139 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932488108 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.922910587 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.9018141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.789766857 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.188796767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933595061 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156751591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.121095376 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311687435 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83382946 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.928744347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925065976 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233708152 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.796042686 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168893872 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.321639532 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.500145415 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929548113 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849127423 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848989363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.61586371 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914534105 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885895772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149037673 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.026981571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864517099 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340033634 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229476143 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163537953 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.924720538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.193698911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196684284 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646552835 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939695723 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.012216987 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.476191574 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.608669903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126785513 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139354627 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705246762 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132932854 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.557179919 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.886226636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.899726777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117147114 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117989191 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.558888729 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150446474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.619357269 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.909491423 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278111627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962415892 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.541178488 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.108499034 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.986488009 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904106378 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975539116 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903012244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.903929633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904297688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939638311 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.548512826 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.031702773 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.908450645 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986748385 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011151737 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.481226449 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.904967436 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184513966 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290253091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242722992 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962730975 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894658755 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896410166 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824732787 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029233151 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334918233 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164851589 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021201464 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.033238878 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916567678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.473257349 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231823716 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21172341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166508791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.785378684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891788784 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959773517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.114877492 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903070568 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.100765914 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131930545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230173692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365575902 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.065443893 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175706964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166797632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.260079231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892769381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482372958 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.900537008 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432490457 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.939382851 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556437561 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181599326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904970205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112472809 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914924062 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.09380201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.345097863 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675327476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25970472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891761758 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95872114 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179923863 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303496701 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212229566 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973977945 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904200578 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.588262146 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030961472 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.792733765 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144849206 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894821163 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104256812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.6066924 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902940013 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184987124 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209210909 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.890617798 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.814338279 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939007162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.897418324 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112641083 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165855753 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140148022 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893497936 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887125892 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.696426374 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17042406 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946411099 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811350175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.883214624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979911851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126729172 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900016069 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.396395956 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.581665372 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194687878 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.802998005 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901014142 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336075992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344556843 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232051456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407685431 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13010232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44341591 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.791973158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262741618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887081044 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321993995 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265624149 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.88365076 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42386998 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001047216 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.163716809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212448346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.892345608 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645224671 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.926929506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102325049 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477453645 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821562601 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885534605 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942819709 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88268974 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00968349 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892989361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.838958696 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801563164 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.725090793 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371823589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.886145196 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.94695416 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.464921207 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.490634896 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994630706 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038689649 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88572465 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.602724707 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.17356209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134810028 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423093041 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.958797398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.885707881 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882924735 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808637263 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144194529 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.078893119 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194118348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.272172707 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.000135309 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886326184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.097211746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092637848 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.538356518 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044039449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318741691 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002610434 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.811524924 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596461064 seconds)
  done (took 1692.776115994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896852467 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.894388186 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.8924516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.938090411 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908354973 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904007722 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.956460124 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888560738 seconds)
  done (took 57.085965628 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.883951159 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.075827504 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.892796181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.885344752 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.910480248 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.885593925 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.065484829 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.905714155 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.90792829 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.902066184 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.891938204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.892814251 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.580003288 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.92006385 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.894764086 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.90538044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902003562 seconds)
  done (took 75.117649581 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895968757 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.237056431 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.914691027 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.920201218 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.869859522 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.899786656 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.872681885 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.924137693 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90042185 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.069858764 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.229018686 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.903240547 seconds)
  done (took 90.454028252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.910021711 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.900125738 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.901591395 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.899156221 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.901085431 seconds)
  done (took 11.336148156 seconds)
done (took 2202.24408025 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.13102189 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.080122755 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120978072 seconds)
  done (took 6.018870882 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.041454303 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.090319106 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.207993456 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.227898092 seconds)
  done (took 10.388384621 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.190028819 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.264515396 seconds)
  done (took 6.269400073 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.220784974 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.930551424 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.282889917 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.895213241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.897124063 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.898972071 seconds)
  done (took 22.512927552 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.899443753 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.900241428 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.898573864 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.902551431 seconds)
  done (took 9.415623879 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.881496468 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.602796081 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.885598707 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.899204566 seconds)
  done (took 21.08603984 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.649794935 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.023213784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.640875751 seconds)
  done (took 9.132126293 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.468508866 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.815455277 seconds)
  done (took 9.101624794 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.056228411 seconds)
  done (took 3.872848067 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.927083772 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169528595 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.453804433 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.42976878 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.515325852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.72557659 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.232608794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.133066235 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.349782328 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.361009782 seconds)
  done (took 25.115218963 seconds)
done (took 138.296331661 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.243614228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.925958052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.10155532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.250506941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.135656797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102258056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.114894442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.241889968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.93249941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.923428818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.256005326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.132367758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.06262251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918877615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.06681874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.920400011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.130422664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.263466011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.939937218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.176003196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.122588337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.903066274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.092989853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.917648658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.134992776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.054686489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.447892153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.927160854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.083101618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.458740238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.057614637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.314275468 seconds)
  done (took 169.173341376 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.899264172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.900546581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.898535231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.901275391 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.419431535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.903111842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.901367492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899697026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.353037478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.346861385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.90153273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.41152923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.902668084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900138418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.901439959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900618839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.518029182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900652437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900932868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899203285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902122597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.253265263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.90261576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.26083522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.512286394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902852679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901506171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90213713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.900692887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89990488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901072247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901176584 seconds)
  done (took 210.523583641 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.80164719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902693589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.902973618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.902967762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.901816032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905181236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.904665751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.902030382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.520684026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.517059967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.907819439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.910986625 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.913507621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90251716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913332802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902257109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.917935966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.87983854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.915467449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916731051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919157176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.530940227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.91982314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.521816126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.920592133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912681344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902878108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917912734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.920008944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917231885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921583088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.903154735 seconds)
  done (took 221.27859414 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.156862623 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.908618062 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.909973773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.8381853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.909022411 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.907075924 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.901675099 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.161856526 seconds)
  done (took 19.537813982 seconds)
done (took 622.341633509 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399494952 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.247212893 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.093060023 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.933526686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.165365354 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.96640324 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.927384379 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.992818319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.54621435 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.000099426 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.600733057 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.954267512 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.68303366 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.959667305 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.050164825 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.988426869 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.519764509 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.608941771 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105372591 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.998728063 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.104567768 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.857168744 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.015076252 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.580427174 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.702848838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.917238895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.999124536 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.524501732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.940409471 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.089896727 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.672374186 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.228860585 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.945377573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.929787763 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.987815025 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.96718699 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.2026438 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.94537895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052732731 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668596194 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991504519 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.456076282 seconds)
  done (took 104.345820665 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.901083556 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.898831359 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897797568 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.898422811 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.899003636 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.898890648 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.897672464 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.897588256 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.898365121 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.89816271 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.898184138 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898164682 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.89880935 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.898311844 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.898371109 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.898408962 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.899361438 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.899663636 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.897010967 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.89801507 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.899356297 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.898953441 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91437518 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.898702684 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.899979765 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.901363167 seconds)
  done (took 51.22014353 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.913029498 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.061061401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.151358699 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.93547438 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912448156 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.916181521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.931159198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.917247463 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.915126401 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.914721865 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.018967384 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.920364919 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93126478 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.149573818 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.933678312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.914624267 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.913858475 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.914546256 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068965833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931205949 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.932807704 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.919527389 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.93332303 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927918479 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.916426058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914813428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.917300847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.358452465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.923786718 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.019271768 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.961456158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.938631849 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.285579383 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160020703 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.972904415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.922905871 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.91504678 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.021097914 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.921210292 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.913853342 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.933114129 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.919465946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.150048931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.397953947 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.931351349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.914490123 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.366770677 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.032178416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.957273898 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92426878 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154042434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.934583319 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.916219368 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.918010563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.952957121 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.920905712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.914830998 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.209059936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.928569028 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.933533843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.921214519 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.915720178 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073857355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.925597468 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.064659875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.930103706 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.922722337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.918704024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.151914198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935374127 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.394262873 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.933048538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.918320317 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022329844 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.071954926 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.402762203 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.932698584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07579152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.300892602 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.942404428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.923907193 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.347974255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.944826774 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.924847129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.918971993 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.917425291 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.916420265 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961118583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.93272807 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.330507168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.403897747 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.230720949 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.944333473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.932291238 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.919015414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.208957832 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.927161087 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.918242275 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146180089 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.410178108 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.933476589 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923093504 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383445143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.935229384 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.937026029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.928187365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157119581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.936419871 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.962972125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.917272831 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.924355275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92061758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.937325546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.926397374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.919965833 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.379545148 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044016611 seconds)
  done (took 237.164121487 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.914334241 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.936356047 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.910995384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.940092803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.91399211 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91725841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.912832434 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.911553365 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.918831331 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.913530462 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.912709711 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.913266551 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.914147749 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.919188209 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.935483203 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.919395821 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519398945 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.914032307 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.915964469 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.920566225 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.579797354 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.920898634 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.9127102 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921013753 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.923771336 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.917090598 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.92437455 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928266599 seconds)
  done (took 168.839546011 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.920637026 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.035171375 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.94099011 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.948074711 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.929175459 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.917502473 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.94361007 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.936579195 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.925007787 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.918406339 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.917746523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.981891923 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.93129649 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.016877256 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.953158116 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.951399329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.02266429 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.930535779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.917113347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.919457633 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.950045431 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.91541749 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.980337288 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.04778758 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.94089243 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.036944461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926816557 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.922607247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.921403806 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03881552 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.938521593 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980675505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949459734 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.938153386 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.042360928 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039402955 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.025437406 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.95096517 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.925420626 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.918253863 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.91970578 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.910749774 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.038129626 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.940397167 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.923665315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027175503 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.940876158 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.924250399 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.931719265 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.920484669 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934185337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.94144511 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98996522 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.051887827 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957045226 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.946472692 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.944662111 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.195913391 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.931825721 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020253444 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.918427685 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036760573 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.944538696 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.909210036 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.923422421 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.927297256 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.951551929 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.95375101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025641803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.932274238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021252518 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.958362709 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.929520393 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.922744429 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.926322949 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.040278699 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.042678372 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.96091623 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959210185 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.954317297 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.91924763 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.923512237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.912190376 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.938846123 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927422321 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.0388353 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041647589 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.934324183 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.925488981 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.925597096 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.926685527 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.94959589 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049487998 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.960509736 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017054616 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.992705216 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.00146238 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.938931411 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.937036102 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.927784435 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986738201 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.939809839 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.935032473 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.24161073 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.994688086 seconds)
  done (took 208.102719936 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.394950264 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.976316967 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.980505614 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.253901521 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.282045365 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.948868101 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.971628316 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.973113429 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.997934694 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.15832596 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.047915983 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.993957254 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960141224 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.945420978 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.974001174 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.994847629 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981949127 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.284611116 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.068300676 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.09836676 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.957677981 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.236680343 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.244089611 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.378430883 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.007784186 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.321200224 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.634085575 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.114198966 seconds)
  done (took 63.029478735 seconds)
done (took 834.528018752 seconds)
SAVING RESULT...
DONE!
