cset: moving following pidspec: 2393
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.905638781 seconds)
loading group "string"... done (took 0.593598521 seconds)
loading group "linalg"... done (took 9.385694285 seconds)
loading group "parallel"... done (took 0.18209588 seconds)
loading group "find"... done (took 1.49077652 seconds)
loading group "tuple"... done (took 2.169129839 seconds)
loading group "dates"... done (took 1.462804469 seconds)
loading group "micro"... done (took 0.231724885 seconds)
loading group "io"... done (took 0.621011992 seconds)
loading group "scalar"... done (took 45.64901768 seconds)
loading group "sparse"... done (took 14.292263304 seconds)
loading group "broadcast"... done (took 1.261148479 seconds)
loading group "union"... done (took 12.61793623 seconds)
loading group "simd"... done (took 2.693757717 seconds)
loading group "random"... done (took 10.912828592 seconds)
loading group "problem"... done (took 1841.774540991 seconds)
loading group "array"... done (took 27.523162232 seconds)
loading group "misc"... done (took 1.190918274 seconds)
loading group "sort"... done (took 4.058346394 seconds)
loading group "collection"... done (took 20.236876898 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.711195935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146823118 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.184271934 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.372891614 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.216147039 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15530417 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.176680449 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.574381405 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.016276235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226960969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156825766 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.574160064 seconds)
done (took 6.216357195 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.293242677 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.465339288 seconds)
    (2/2) benchmarking "String"...
    done (took 0.138953982 seconds)
  done (took 1.259862688 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.084908517 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187401307 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.102208407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.119491268 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11918128 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.117964325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.119005421 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.103325526 seconds)
  done (took 1.521632087 seconds)
done (took 3.818117257 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521102174 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.911355008 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531071391 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143116246 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.172204773 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.163193854 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321991936 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.173049589 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129334354 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111404422 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.185698273 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.395659803 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.51735779 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.04080683 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.113617601 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.13770017 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.09513922 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772088429 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.094051227 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139588955 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.561000654 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.12406837 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.127495874 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149265844 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20993843 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130083853 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176380665 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111717799 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.766644883 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.112625903 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.200398119 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.113122763 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171967563 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.26545721 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.105071398 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.100866276 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.727915313 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191022106 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12286654 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109434725 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.728130593 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089801679 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203276737 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110604278 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.119222783 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.204715662 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122816086 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.107180016 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095449343 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106739434 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182562441 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.500714136 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.117895136 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.160679641 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.118040211 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741781379 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.106469804 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.167082068 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.148664422 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.116477157 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09106218 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120976492 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.179596153 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.127114457 seconds)
  done (took 20.767321345 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.130928039 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.153627342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.103457749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14898584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.152508967 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.106110832 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10760138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088332405 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.139056984 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199377376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.150003413 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158631611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083607879 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106940955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112306385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.259453995 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.135590518 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.132479984 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090774251 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.117110036 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.149631492 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107348302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.120405529 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.120050522 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179370366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214383212 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118979785 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131933483 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102358389 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.124919963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137097784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.171937149 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.10095036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088218461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194950391 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131947202 seconds)
  done (took 5.54385273 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.212837962 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126765633 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.208682746 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192312719 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.158262403 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.195933809 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127785758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.275455821 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.30846823 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190856145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138891417 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106973733 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104053706 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089517517 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103177515 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78156264 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15209019 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201293286 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119354714 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114792093 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106310037 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.737383811 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096836029 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.1061819 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094739597 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.099077006 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189132174 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111301276 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.399529345 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129778847 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099298834 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143326725 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220698889 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127686099 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155295813 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111300898 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.144990358 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090013857 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.25341366 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101647392 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.106779461 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136072943 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127513169 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.144624708 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109470005 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120050865 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242278055 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.109406389 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131703175 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.180323257 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.21211114 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106428161 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107129506 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.384316218 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13049281 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113229052 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091444234 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320742333 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148229428 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091378772 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.103858241 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095466646 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.105505095 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.768102255 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119687832 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.292183697 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090072103 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.178779648 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109656421 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115447315 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110470655 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095440731 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128213339 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124088405 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.107576641 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086447366 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.106662708 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.103936268 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.093948544 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125129463 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.107726675 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094962537 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.104102651 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157965293 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106938883 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.127028934 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110537013 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134981294 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110216849 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089327847 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137686334 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106253472 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092994843 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.158293662 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113608216 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124902048 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093558857 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.152470236 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.107277207 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215759456 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090747535 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133091033 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.110917205 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122787251 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.131718348 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106617621 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094003473 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.104687095 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08929859 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174634672 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089674064 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.106446836 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091241905 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.122717347 seconds)
  done (took 26.421375268 seconds)
done (took 53.384688618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.481056237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105029514 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.123743619 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.123801842 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120996472 seconds)
  done (took 1.695012764 seconds)
done (took 2.408540278 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.39395237 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.208394755 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.130888439 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.206425199 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.11473072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.214827887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.197187371 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.132634345 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.242552515 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095072502 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.220655914 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094952467 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.116397393 seconds)
  done (took 3.108508094 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105444125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12863168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090463697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121376863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084189208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120627776 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101636344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144384707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119114249 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095964098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100714867 seconds)
  done (took 1.920484607 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101230947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123468793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090555993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117768415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085947781 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116342245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099295795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127331129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099701659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114140873 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083579866 seconds)
  done (took 1.865801466 seconds)
done (took 7.596954308 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.096885366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.467523673 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.130261715 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178737029 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372310268 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205211277 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.560007184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125747305 seconds)
  done (took 12.066724085 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.159513636 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08994274 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106193978 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092515715 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106990146 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092477711 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.106574866 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092749095 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10968807 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091553359 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106316927 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093115032 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108256448 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091791168 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106246404 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093233206 seconds)
  done (took 2.421224651 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129080327 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12848093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114517699 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117785404 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095347544 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.112043111 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096664453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112650687 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109074549 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095381929 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117685303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11562806 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099328587 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108898709 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096329694 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11801198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109186005 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09683355 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113961919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112281521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101349616 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.110973456 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099689263 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115925863 seconds)
  done (took 3.463439416 seconds)
done (took 18.662435693 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181246189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109863692 seconds)
  done (took 1.007429481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.112303152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.129048037 seconds)
  done (took 0.961093156 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116256246 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.10582295 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144397236 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123752763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091015089 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10607526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140914539 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091647782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.106076405 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091068701 seconds)
  done (took 1.841322291 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09426962 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11029203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099003566 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.129088734 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117602389 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092714359 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111971675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093981316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113083333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.105082743 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100106129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126830394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.113696288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1114609 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113047268 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113474044 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100408828 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.111619548 seconds)
  done (took 2.683231741 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090208054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107832504 seconds)
  done (took 0.924457755 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092761171 seconds)
    (2/7) benchmarking "second"...
    done (took 0.105105163 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093074232 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108721999 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089363329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.105708912 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.088681977 seconds)
  done (took 1.407153628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.567741702 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259570343 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.360529477 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125177671 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145306046 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.389841099 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146476125 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.124109019 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122973654 seconds)
  done (took 3.012106804 seconds)
done (took 12.558905588 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.101558295 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.205118953 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.594220645 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130969921 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087693408 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.171359916 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281330927 seconds)
done (took 2.300965049 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370578516 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.137959874 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09923661 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089127283 seconds)
  done (took 1.421151497 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.089270205 seconds)
    (2/2) benchmarking "read"...
    done (took 0.11252402 seconds)
  done (took 0.935661962 seconds)
done (took 3.092792661 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08960424 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.142219414 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087983657 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104803387 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085777762 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106471866 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.08577791 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10303166 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.209052204 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.104191524 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088575801 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.103829883 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08820729 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104526879 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086018369 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101407264 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089031625 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08484131 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103001111 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08844111 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102790699 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087492212 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.102157378 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085819601 seconds)
  done (took 3.203294126 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110109993 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.106564527 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.094556333 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.111612915 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109841611 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.094664071 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.111768242 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08964305 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111696387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.108009487 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093142714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10974104 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090394948 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.109768005 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108243832 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092882825 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.111673305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088974622 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108334909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093032547 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1115151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106062959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092993846 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112098346 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.092460636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110708977 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.108300741 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.089349111 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111329132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092248133 seconds)
  done (took 3.81971419 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098041256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101898094 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086884864 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115061818 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085900025 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106758868 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.086713389 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.10350255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087155202 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.102896949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.089124999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.103085715 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087031032 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087014755 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.106096618 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.109553155 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105740707 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103708807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086530997 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.103796061 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.092322606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.103122599 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089782522 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.103266846 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.086162237 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.103601138 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086884186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102648342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.087924184 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08566824 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110405951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10971451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086463133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116901066 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094058814 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.102693149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095744093 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103183746 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.087962065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.103068801 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086606948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103072074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087010024 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114855881 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090609871 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104746492 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087525582 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.104740423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087361306 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106674945 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086092471 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103039311 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.089280706 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.104304742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092260641 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102772864 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08745585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103245131 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08873998 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.103161945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086255893 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085187542 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110709188 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0873519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129486193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116285466 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086513375 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.105690638 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090457338 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.112851331 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.088382364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.123635477 seconds)
  done (took 7.806392112 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092024656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115503423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089179022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106648023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089097266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105371483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094708734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105218078 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088978447 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124976521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104671672 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089341968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105633203 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091588631 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104083757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089326633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114664963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084330447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.104915766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090731213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105732294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093758832 seconds)
  done (took 2.935465531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236292786 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114602186 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154349488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126256906 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124734819 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105258385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111801991 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096062076 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113053195 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115741817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096990371 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111574563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125258609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097340546 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116400212 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115999449 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094289443 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11685009 seconds)
  done (took 2.922673122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103406764 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10884392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.115402535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109122539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.108136996 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093176615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114341392 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106192727 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110876788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090185892 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.118311362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110701596 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092638867 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108667991 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092450431 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108976661 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092213612 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108992236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119894631 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097677013 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114505838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118862571 seconds)
  done (took 3.093195341 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106759035 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110255129 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140644572 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093797635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10365949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088550161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115827209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089431116 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116858086 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091655838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108771217 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088419648 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.114855931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107635744 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096696454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108773687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091947713 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108405938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092586033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104471087 seconds)
  done (took 2.832568911 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136044498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12523181 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124832687 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118504062 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125665467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106579367 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136723895 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125206983 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106377391 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138822309 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.126328402 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107741255 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136087869 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132984961 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124992469 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118493647 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137242076 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139744079 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107737708 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125804637 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138901872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107096322 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135930966 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125165184 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10684368 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12869176 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125310052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115280371 seconds)
  done (took 4.242452572 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090039099 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089606845 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.106983643 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.086784737 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.106744933 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087484516 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.105757565 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.087752311 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108613472 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087146368 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109140621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090060251 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107568412 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090595131 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108141832 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089827847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107880781 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087689194 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106590536 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088348846 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108076106 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090338431 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090936672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106301889 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087123991 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108642922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087804371 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106025364 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089847331 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10598174 seconds)
  done (took 3.684297392 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101478505 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11757439 seconds)
  done (took 0.9788101 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088866862 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126305426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087748366 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112490319 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097194336 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109888841 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118991325 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097253203 seconds)
  done (took 1.598620565 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.117878521 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.131643904 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096470725 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122058833 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.129415402 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11228501 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.179154937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115754973 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.098837891 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.110611311 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112077489 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.110240006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.100616727 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116063407 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.118893375 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107136626 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106757481 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10172242 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117435332 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093156364 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115405382 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126934585 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102066622 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118494519 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.094094409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.122618484 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123408927 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103193479 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116262577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103233475 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117747836 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084997081 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.115728759 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096962905 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10821356 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.130164103 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109244676 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116420824 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100359479 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116021734 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12055689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.086795571 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.121029913 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099612644 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.123842357 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09605695 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115966976 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086206651 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.110260753 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.113846124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087135028 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112882557 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086356094 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119825756 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101647091 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.129792069 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094629525 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.114792046 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.11444056 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094600964 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.117471213 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095964072 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121907059 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094674019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.129907662 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.119967167 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100317207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.106000016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085657573 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108032036 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.101042321 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.136898067 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.121475482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098529495 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116400309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.089379391 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116573625 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09803477 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118311886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.121589922 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096594755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118892845 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103041104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114019268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096098358 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117324474 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094289666 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114132275 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092680416 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131845479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112610199 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089140365 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.111473344 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.103257506 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.114707043 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095342753 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.111076379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101409207 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104542218 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115265533 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097643555 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118406589 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105010757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116488353 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098549509 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.120261317 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.123985065 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097401956 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.114427606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088401647 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116992614 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.094277383 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.120140514 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085425957 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116846191 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09556536 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116359224 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.121367568 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09392407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114903519 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103869447 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.122787605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093639446 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106651277 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.096501513 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11497417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119751753 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104168484 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112458427 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087754259 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.10619238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.100997091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115570767 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098487459 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117548571 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117031897 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.086826351 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109014726 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097497484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.122783827 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.095307169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.117974918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102516526 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11916903 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113765903 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102780601 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.114178275 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.092783723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.121175519 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.095800146 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10704615 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120347266 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097239015 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113328779 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099057318 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120340328 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.097247557 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116393542 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094118434 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116390157 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097451168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.111398424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09703455 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114652041 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.123812228 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097324933 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.106477495 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.089102577 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11749873 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.092758276 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115695018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092606271 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.11633267 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097651697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109693928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095295305 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.115831203 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128115549 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105502998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117723314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.100834377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.123810474 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096018877 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.119696657 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.114662023 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098736327 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116867706 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102662709 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.119547985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097820375 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.115644119 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088152292 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118142065 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102346112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.112374634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089849162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.112194656 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115793381 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104603051 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116209143 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098153914 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114771117 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099437566 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121340233 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096399086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116954747 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.111772638 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0978289 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121002403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098268408 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118122119 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104279853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117584498 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08775467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121241308 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094538081 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.120428566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106821733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094352804 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.112169011 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099206005 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114935356 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096583563 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.105776191 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103782135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123681305 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098259542 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.112489439 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096571329 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127949778 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.115359271 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100969664 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.117880018 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10084716 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131156997 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.112539465 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097010847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.125340548 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097377253 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.106374691 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100405888 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114931537 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.092125589 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114719566 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094758097 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118045605 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098766991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.119227342 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.105253106 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097504231 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113842362 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094292121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10735576 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.103679398 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.118118728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.097528683 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127419819 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119101425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099368112 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118799843 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097664211 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117654915 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099585411 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118858518 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10105268 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.11615717 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093212019 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.117754067 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.111900182 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091150839 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.115536134 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097896392 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.118366147 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09953192 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115948572 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102544402 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.119062511 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117913284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116575293 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.11443041 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092959543 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119790641 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119240437 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097042335 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.116454462 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088948341 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12395588 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097620183 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.125328984 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097172703 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109971221 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098167051 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.117965395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117973666 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09924109 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117724858 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095945484 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116701738 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098237066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127333937 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093773386 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.124753122 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119616188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101466033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.117185754 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099015828 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.116572891 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094074943 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.117095371 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098612091 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.118938295 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116348963 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100777626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.118787915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09733622 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116692047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099101605 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.118990973 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099934199 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.107585325 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09313619 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.114475735 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097375185 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122703833 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117860289 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096803194 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116952467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100793021 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117201471 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.090313241 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122414293 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100145383 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119596062 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127380342 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094019021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.117017721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109018314 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10794757 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095933133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11148066 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095456851 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124726817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098644627 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.124152263 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.117867183 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.094910629 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109497682 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100227658 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115540878 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088348075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.110781371 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101601548 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.115598528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096577776 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119440501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10036704 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120492948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10152577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11764209 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.117612857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099194504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110255997 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095004731 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.113611854 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098583837 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118515468 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094519817 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.110695215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098266685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.119365816 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098368445 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118228565 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09674987 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12500023 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11751315 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.099513286 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124005592 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.089503471 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.118722267 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098891939 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117476126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094484338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.120488897 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100337791 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120885399 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.123177884 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09807073 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121210523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098460964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112123887 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097828168 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11769118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098750842 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.114982126 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099424849 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.125353409 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.090693104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.119458832 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118188245 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096170143 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.119435581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100272179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.119304919 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101968982 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119903983 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098197714 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.124101088 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11828831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100775252 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119975712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097516315 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.12336783 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094235603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.12672451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.119739135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100261656 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.117148439 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095506839 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117438855 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098109867 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117171269 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104166099 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120412298 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093391947 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.114426577 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091674635 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.118912553 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123119341 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105905231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.118811901 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100798644 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.109610956 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.091131453 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119911217 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095108647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.118421781 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.100714315 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124099794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.119280849 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.095978615 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.117184074 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.105017404 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123887393 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101226178 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.116562359 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.120638031 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100631455 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11915138 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097584295 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.118183925 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100178853 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.121436527 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098746043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.115361467 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128873912 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104186982 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120242257 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.097615598 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.121632085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099263362 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.110936574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099864355 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.119514921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121374143 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100011542 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117878458 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109429229 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.114800838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09860074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123877731 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097190362 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.125896351 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.109674224 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099890061 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120566066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101308424 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.110213051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095581881 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.116063496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099488311 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.114869918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089555753 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131053754 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.124015071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099991096 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118828429 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097502109 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.110896645 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090156588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.115497742 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101167874 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.118782298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106696656 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115848617 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.094560494 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111382582 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118795781 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101085492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.121917612 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092563133 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.110778773 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096081817 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.120588949 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106522397 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118299407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098853385 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121683569 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.119189298 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09312392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124076966 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092082727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119978623 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112020575 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.120962287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101445105 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.12424906 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126354325 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10023376 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.110906695 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100769895 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.120096895 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100357532 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121734188 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121402985 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11531381 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121762148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095166015 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117821417 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099015453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115728946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.127432451 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101561402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120300498 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101804061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.117782794 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102092839 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127510711 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121964409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100087345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.120261675 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097659017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118538241 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096805511 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.118570772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101495902 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121160889 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09793044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122790184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.094275541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131179814 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.127118528 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102025097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111500373 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095675409 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116644976 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.090552404 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.120877424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093339006 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11772649 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096965513 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118698996 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101853011 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122356827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.119048076 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102225076 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.119377266 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.089255173 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.123220147 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100795968 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123102925 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092101489 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11969447 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103827566 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.126065662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124536141 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097564711 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.120040608 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.098675741 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123684297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090858956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.123619102 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098363649 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.118547987 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.095492102 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121275301 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100544209 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122117477 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120432981 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103367352 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.120527755 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104319252 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123429537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09254413 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.112366376 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102754406 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.114591708 seconds)
  done (took 65.881201402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165282334 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098225062 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111616505 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091342774 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138452367 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111898302 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09115359 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112544878 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09242477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125908136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090682851 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111722004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134280458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141589157 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136854954 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106984125 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111062222 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091843289 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110803158 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091914494 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133579646 seconds)
  done (took 3.226749728 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116688013 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.130465628 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128148746 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.133624481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102341028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130216625 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128648271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109329879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135048232 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124115961 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134371319 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10925481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125460362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.124131275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124474116 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10666948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133981877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122050572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.109868425 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.129402419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126680641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128825939 seconds)
  done (took 3.54053602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10505049 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.119164595 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104884275 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113077669 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099183518 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.113301177 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.104707298 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.116047903 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104446393 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.121368086 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096785709 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.12127273 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103959668 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11447178 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097370393 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.11609914 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103908682 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.121011762 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099847994 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114582508 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.141490171 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092568595 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114641681 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096246048 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.129576791 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099534175 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122555895 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097638828 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.118447185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098495414 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117609668 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.122203587 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103896961 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.116740106 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097399929 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119318385 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099731174 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113853382 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095934497 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.124095807 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093700592 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120498871 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105448468 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117362958 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094617887 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.123342031 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.097965519 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.114335755 seconds)
  done (took 6.109005363 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134602392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173924522 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101557683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141401337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137639575 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.135530111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106072112 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140327304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.119810734 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120983758 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123971637 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.140148503 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120662252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10553153 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.12623403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120989944 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102327389 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122598571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130333757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105547094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127739146 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125102254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117577914 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141712166 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128991017 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099448533 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121113173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126846901 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111878756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130338736 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.12642656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111136148 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.143604354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12391249 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101555828 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125163247 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.144742553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10342042 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125499016 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.117746972 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10336092 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127176648 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106344468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137984027 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126962094 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.129890998 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101725967 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120155154 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134010492 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110811793 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.135149192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135771454 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10495814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.121650656 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130358054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115419065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.121894854 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123083879 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110973192 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135413455 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096585083 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127518263 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141375879 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127320284 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109962587 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135880334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123533353 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107807714 seconds)
  done (took 9.404417602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108538687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.14652225 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137911437 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137765473 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105969798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12556232 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105202671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127468186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12642406 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112177362 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128045905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.179555521 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119779222 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111661963 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126640096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127107093 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106379185 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126108058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104967613 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126897324 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125676347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138423989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105651652 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137388329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139969728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097756794 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12877667 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126185965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138660847 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105981635 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140738311 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126093921 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105395494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138490272 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139145301 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.126390555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096199754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127129755 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105677258 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127208587 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11936241 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116454277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128301373 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.119557215 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105730325 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127802358 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138614376 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141367803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11100713 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134765406 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126647077 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138331911 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105615247 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126894183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137746451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146219273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117469615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138790325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127001995 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139446524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142167811 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125137372 seconds)
  done (took 8.63072032 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097921594 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096064281 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117065517 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.093276475 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118574116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093522345 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118142297 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096527131 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118190839 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096445086 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117390066 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095016267 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115594383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097735805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115344909 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094722557 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11635649 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09470592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119330194 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094451527 seconds)
  done (took 2.959631051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106118268 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.140000936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.097193926 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126499208 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.121081575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10463222 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.12057867 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100735488 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119385889 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100437642 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132426532 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131688392 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098034154 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127300473 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13236192 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.126147635 seconds)
  done (took 2.739245249 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119418659 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132996051 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.146283574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103273298 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118061484 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105539426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11998489 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.092827973 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.116529407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128521479 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104445069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.130195949 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097471196 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.116858613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.098573525 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.125746275 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.093054099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123651741 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.097114676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.147201793 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125347884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100167032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121203623 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.099035901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.124203993 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.125174055 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105180325 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119630068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.095211187 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120202387 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.122617272 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.10649458 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.115827145 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103452657 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11796366 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095001051 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.119326543 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099047521 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125612547 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.097528409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.118529093 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121692076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.097947632 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.120686889 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.093386234 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.119888446 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.093905266 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12654606 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.099996319 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122578974 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097475445 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128041709 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126727915 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109952627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129871122 seconds)
  done (took 7.116808805 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113588227 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12407204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10158739 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117867237 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100632465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.129051078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123162558 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100520392 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.121126019 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09493472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121333867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10224224 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121335339 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101369529 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122025082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101347849 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11513672 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120864709 seconds)
  done (took 2.890892912 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103777573 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120022533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1060842 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119629253 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098376659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122170964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093716127 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.117693981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096629206 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.119918622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097844582 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.121531881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096353014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121665762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097426953 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119986001 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.099690755 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119359196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097243796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116268971 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099554936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119734856 seconds)
  done (took 3.264301836 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.121272109 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.160027717 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.137728057 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.147174532 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127457149 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.102457635 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.138189526 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.125335142 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123450629 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.124867441 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101632668 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.126796689 seconds)
  done (took 2.40168905 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12503448 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160067654 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117402845 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100693108 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132982427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103282036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126007738 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124462098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115808877 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144597745 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131135686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142390752 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115781323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137937318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132386728 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133987273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103469695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125428347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097920997 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148365346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126302497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136887833 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10231506 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125880787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125882049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136459137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116239838 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138948269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125265741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138433521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111710362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125473156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138096565 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13997565 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101836054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138048398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125100686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125007245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134218787 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136312585 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100414328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133648214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137717689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133570199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137831487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10428966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132501891 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102302837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12569815 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155126183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133641157 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137372223 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11074847 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138868152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136744299 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15596247 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139757865 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136362029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110822956 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140598139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136779386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133135253 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136464836 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140003934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111311126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13660066 seconds)
  done (took 9.338560571 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140232772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12037652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126626932 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116622794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13805202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124824445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125532953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103781135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125617472 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099697209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175768589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125352837 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137231977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136955385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103651916 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126961961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125915948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115249322 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122119991 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155931933 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126368673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115298671 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137126284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137139589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140001124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133894401 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104610117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12610318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104865023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12689716 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132871851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103902432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138714991 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119586368 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137061415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104038989 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125867687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133180493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104127966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133788563 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137581756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149752536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104573437 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127477681 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139857821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103688646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127469078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122627902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104167208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122783292 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140163805 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140592396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118348856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138570502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126605219 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103822404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127900703 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126586017 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104026287 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134645912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137055042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104746254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178822335 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104192437 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126114994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137970696 seconds)
  done (took 9.198611843 seconds)
done (took 174.550323329 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.119405727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.162146168 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.114097403 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188692912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.120531985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.134422123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.155179084 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11633103 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.121520708 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097994409 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.120430302 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102085425 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.192603508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.097653976 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122400663 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102294116 seconds)
  done (took 2.951244559 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202884931 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.316206024 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.118926801 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.127837172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.129744062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101562018 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.126390713 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.105598352 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.122653262 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112093995 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.125041931 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101589021 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.135457021 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.125169105 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100154 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124806944 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111185996 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.124901807 seconds)
  done (took 3.297530404 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126088971 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1817099 seconds)
  done (took 1.196715201 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13648987 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.206365594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.336345228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.181436548 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.129990953 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.147258216 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.18116801 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.143922843 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.218891017 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.147428913 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.147894802 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.106053579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.154536363 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.134895627 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109641688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.128626649 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.156639452 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108399449 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.130223367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.107066397 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.152054026 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.130758654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111924075 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13077073 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.208165227 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.14778985 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107354424 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.131053101 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.130128581 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.107217123 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.135117709 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.145420307 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.146558119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193526435 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.135811856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190416497 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.396687821 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105763814 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.129674857 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.127679909 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110353032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.132481251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.145871144 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106296752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.130111898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115968888 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.130688728 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.130715506 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114287645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.139983151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.136064897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112143233 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.211005898 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.139135206 seconds)
  done (took 8.919446438 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.899395037 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.177013701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128949176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.018133433 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161361003 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143865445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.91072473 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.152781233 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.266444012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.922393826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122271179 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.143833129 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263243345 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28027365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181467353 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369151144 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.792223298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117616167 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160397732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.174659616 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133224349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133104808 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149924722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438960603 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.130352237 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103285741 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134231088 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139594862 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188771093 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127211384 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107335381 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232197279 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295151511 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227308987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107444892 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.125857505 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103891239 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.218728807 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275901867 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.24873025 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194558416 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123212416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102595102 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141837349 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.148200536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099353122 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.215380025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.203455887 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202235604 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130041729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.139035385 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113738364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149501209 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189446317 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.127157271 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368376609 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372338031 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102634073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137104048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.147111461 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299125622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104541977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258251102 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154525294 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221216339 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.126264537 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852124908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196103742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.126739632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113016345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.136304627 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13268064 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115784746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187853922 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398686911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142635702 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131278009 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10255965 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274079475 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10334378 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127866459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1926546 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131394591 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112655659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143937886 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141342013 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200097221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278440782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143255186 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1367966 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108661466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139871709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.131729503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.243923199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25194879 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186677812 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264276998 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115674993 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.217632771 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194236541 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139175156 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.200236487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.136384005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121419121 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140265987 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.247534493 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164276638 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128134675 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109226743 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135261265 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.168286234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107035811 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135283928 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197267668 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.497207494 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.195162387 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.124231335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10745893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137283951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190822856 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134264248 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271511631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137349861 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194996943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134667315 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.124292461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112772678 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.216031197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118001255 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136939006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141383812 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111283682 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.303217953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254212927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1197251 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262545493 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.20130695 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137352626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204490294 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136504797 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200485822 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13715263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115635101 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131503239 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843002221 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117200034 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.135161494 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133390689 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213708999 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102891523 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129628575 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102838734 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124761023 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800111008 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131904801 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101136681 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129667445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137346061 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111870185 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135192357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132172229 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191941197 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266877708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.139552834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111233167 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127692834 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191171786 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.130517042 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104209258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127479713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104191006 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137663735 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10745493 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129562371 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201623145 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.210940951 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229102951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569446185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12765197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104071611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264930361 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102756389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340130278 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13653521 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259161645 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196082329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12495773 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369710982 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.200492598 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214279376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129936748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201903948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100252324 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135764807 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190308547 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127277425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110251726 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.213020835 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144481599 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11811453 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187296747 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126629169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25892875 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100434992 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.225101185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107587912 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14123717 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342409818 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103179043 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150556345 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.214533788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10816719 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128305333 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.607354361 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.128850042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115234074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13833805 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25740738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.195431216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135940577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135350061 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116172764 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.216370534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239770533 seconds)
  done (took 49.432354399 seconds)
done (took 66.674943069 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.332737472 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.29634745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.338604582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243005308 seconds)
  done (took 2.211834745 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.20064806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.175325795 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.168803549 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101565509 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.177944943 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.126153618 seconds)
  done (took 1.868080573 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.52489181 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.410083216 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.377219694 seconds)
  done (took 2.233217221 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285566353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.318066606 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395145459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.517127457 seconds)
  done (took 2.552088404 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.230810572 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.145717638 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.115306693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162974619 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195418202 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197034671 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.162825543 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172764528 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.149465427 seconds)
  done (took 2.509110219 seconds)
done (took 12.300186587 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.349253022 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156000373 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.278896296 seconds)
    (4/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.265148817 seconds)
    (5/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.184881501 seconds)
    (6/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.230176111 seconds)
    (7/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.31837048 seconds)
    (8/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106819366 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.151368645 seconds)
    (10/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.277411141 seconds)
    (11/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.234108011 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132347083 seconds)
    (13/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.264120574 seconds)
    (14/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.228551873 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.117918107 seconds)
    (16/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.234107726 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230765384 seconds)
    (18/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.201821391 seconds)
    (19/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.325138762 seconds)
    (20/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.232701191 seconds)
    (21/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.312877604 seconds)
    (22/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132996676 seconds)
    (23/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089074403 seconds)
    (24/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.287761441 seconds)
    (25/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.259625707 seconds)
    (26/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123983252 seconds)
    (27/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.214248833 seconds)
    (28/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145168322 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118553824 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.18069147 seconds)
    (31/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.201196531 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.169704911 seconds)
    (33/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.231395026 seconds)
    (34/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089911631 seconds)
    (35/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212756958 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163815123 seconds)
    (37/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.130355055 seconds)
    (38/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.228498011 seconds)
    (39/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133354823 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.165996966 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.170097832 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.12545315 seconds)
    (43/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230088698 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.150207089 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089632303 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.18173524 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.148538476 seconds)
    (48/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091656262 seconds)
    (49/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132780368 seconds)
    (50/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110664763 seconds)
    (51/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141553081 seconds)
    (52/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174310249 seconds)
    (53/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.228379273 seconds)
    (54/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106024858 seconds)
    (55/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.137214016 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106246105 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.227410086 seconds)
    (58/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.149523186 seconds)
    (59/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217919345 seconds)
    (60/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.088806831 seconds)
    (61/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.1330597 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13411454 seconds)
    (63/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118929177 seconds)
    (64/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.151078147 seconds)
    (65/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.110942301 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.163075839 seconds)
    (67/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.230312417 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.160180474 seconds)
    (69/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.230900532 seconds)
    (70/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216271805 seconds)
    (71/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090393821 seconds)
    (72/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136181749 seconds)
    (73/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.160126168 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.167810725 seconds)
    (75/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.255844448 seconds)
    (76/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176140743 seconds)
    (77/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.118664926 seconds)
    (78/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.115121296 seconds)
    (79/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216515659 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110959441 seconds)
    (81/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.186707718 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214288242 seconds)
    (83/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131424693 seconds)
    (84/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090161582 seconds)
    (85/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.185430067 seconds)
    (86/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14883094 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089472839 seconds)
    (88/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212041693 seconds)
    (89/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.228421179 seconds)
    (90/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.141691077 seconds)
    (91/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.127216371 seconds)
    (92/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.216450181 seconds)
    (93/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.166256604 seconds)
    (94/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090355221 seconds)
    (95/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.14355641 seconds)
    (96/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106609306 seconds)
    (97/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181819946 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110134213 seconds)
    (99/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.116974445 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089963855 seconds)
    (101/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.138005906 seconds)
    (102/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.156566891 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11732802 seconds)
    (104/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.175922877 seconds)
    (105/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.089148416 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135257975 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10769204 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142008296 seconds)
    (109/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.139549996 seconds)
    (110/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.22858605 seconds)
    (111/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.089675096 seconds)
    (112/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088812133 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115207623 seconds)
    (114/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.125483258 seconds)
    (115/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.165876238 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.128424999 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107538321 seconds)
    (118/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.115427233 seconds)
    (119/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.135357259 seconds)
    (120/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.115969185 seconds)
    (121/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102591578 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.144493007 seconds)
    (123/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089875564 seconds)
    (124/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128228962 seconds)
    (125/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.18548693 seconds)
    (126/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08937611 seconds)
    (127/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.175904213 seconds)
    (128/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089651053 seconds)
    (129/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.225518148 seconds)
    (130/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114638796 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.129589571 seconds)
    (132/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.114659264 seconds)
    (133/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.097866717 seconds)
    (134/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.096906464 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.115841834 seconds)
    (136/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.173639857 seconds)
    (137/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106778639 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136224204 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10561469 seconds)
    (140/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186458744 seconds)
    (141/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.150187847 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089313682 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134608189 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109177192 seconds)
    (145/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123986976 seconds)
    (146/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089638448 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.16678272 seconds)
    (148/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143696661 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102621224 seconds)
    (150/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.115784127 seconds)
    (151/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122151978 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135596547 seconds)
    (153/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115282258 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.140476955 seconds)
    (155/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090601187 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.15990393 seconds)
    (157/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134778613 seconds)
    (158/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.089806885 seconds)
    (159/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.088381181 seconds)
    (160/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.116872873 seconds)
    (161/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0899594 seconds)
    (162/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.174474331 seconds)
    (163/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132023201 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119817372 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.144502812 seconds)
    (166/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103111604 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136379275 seconds)
    (168/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089972092 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136066144 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.135490504 seconds)
    (171/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089847479 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.115788683 seconds)
    (173/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.131816123 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135640241 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.105513482 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129307092 seconds)
    (177/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100230575 seconds)
    (178/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.124827265 seconds)
    (179/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.141691834 seconds)
    (180/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.115102539 seconds)
    (181/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090271887 seconds)
    (182/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136415794 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.161497209 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14184454 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136727912 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123370169 seconds)
    (187/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.13394817 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.143437524 seconds)
    (189/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103738063 seconds)
    (190/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.216070781 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10300674 seconds)
    (192/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.098951454 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089938658 seconds)
    (194/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.116950519 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115054497 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132886933 seconds)
    (197/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134526082 seconds)
    (198/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106922244 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.144943699 seconds)
    (200/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110291185 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.152401431 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111240527 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137228683 seconds)
    (204/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115943751 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111093939 seconds)
    (206/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.140486147 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106973136 seconds)
    (208/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.12484839 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110283928 seconds)
    (210/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.116153338 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111047203 seconds)
    (212/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.115745329 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109874352 seconds)
    (214/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.11516197 seconds)
    (215/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106043167 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144531497 seconds)
    (217/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.098599955 seconds)
    (218/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133068247 seconds)
    (219/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.089548552 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.115828374 seconds)
    (221/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.097696217 seconds)
    (222/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.117226424 seconds)
    (223/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090316406 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.116347832 seconds)
  done (took 34.131918993 seconds)
done (took 35.068034141 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.440877969 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.149267041 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143230352 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115320743 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165890246 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11827605 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144198425 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.145897456 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114147728 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131935685 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104636854 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.142688861 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141675491 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.135676802 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.145107788 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106774936 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134173263 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.142335156 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115833801 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.144531945 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165226607 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108510595 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.140773959 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106492067 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165389402 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10797797 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.142106095 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115333617 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141408973 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.132067968 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115610244 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133422922 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117265147 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.146385156 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10508151 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134164257 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104913961 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.124344468 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132319974 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109615027 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.141759325 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106629056 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.143723276 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.133654969 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108934401 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131442669 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104305472 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.143978387 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.104048999 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142257878 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108694835 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145095298 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.130796802 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104629624 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.130952191 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107605607 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143381043 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105057376 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143359752 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10441683 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.133680324 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104846187 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136536914 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104225367 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13251457 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.132519009 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108144799 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135042127 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104317111 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13534701 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104495698 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.134504506 seconds)
done (took 10.458929236 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.11089636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188663199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.164727552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138081129 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162028584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148080916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.145750573 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12805911 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141222841 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.156242044 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.133140016 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155027584 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.172245521 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139269076 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121705304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135994151 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112251255 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.145254307 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.168503758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130183622 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165276958 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.139419889 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162302697 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.128007191 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.139044423 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168617337 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114485059 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136120569 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.138318743 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120220746 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.158001446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.112056169 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.140598275 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151662693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118651 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139685985 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147912292 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109430672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.138305354 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11019594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14971896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151061323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110575036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147974533 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135870967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114315362 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139737784 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112204813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.139588018 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107133847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.141634724 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162084285 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139183499 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112594944 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139118002 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113681418 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138933836 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.140805567 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116558363 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141076483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110360414 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.139342703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113611822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157875656 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.140792138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138386727 seconds)
  done (took 10.067690388 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130472323 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.172438622 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149102285 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121174239 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.144592306 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129088053 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103112922 seconds)
  done (took 1.936818095 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103763612 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16380189 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141189342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.167670439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.154969734 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.171308323 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121116574 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.131610173 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128645243 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.143509715 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.161236226 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189808245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105035655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145319906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.170355351 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.104058093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.170636486 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104390487 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140047612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.168884174 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109822486 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154349853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.146294238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105440844 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156165497 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10561771 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.204301949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143242788 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104317016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.13855407 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136903385 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209353136 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128232792 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.143016624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102191879 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.163612602 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.155424496 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109214346 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.159997897 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.137222991 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128544771 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139248198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.138867722 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111049154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.139754211 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122179421 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144226095 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.140477796 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11062574 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.162961407 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116065196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.15731218 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.133757772 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.108703441 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143606954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111398554 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14633104 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.136140371 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135536528 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140137685 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.161285582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134358629 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.155585633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162547354 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123176687 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.157082206 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.155492723 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110789757 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140071798 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111936699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163537506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.13597354 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116528568 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.149463063 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11400098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.162860757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.163485323 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109667639 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.146472945 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108890564 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.135613581 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105185911 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.151683534 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135089645 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107307182 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152020584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117624834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.141723016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136137649 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.129966346 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.137328615 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.144790442 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117266456 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.137593023 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149268317 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136435674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.145020395 seconds)
  done (took 14.430826527 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107406281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.133698658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111729054 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134481667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106560685 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.133923216 seconds)
  done (took 1.730141908 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137528947 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.139356977 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150696873 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114732124 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.195132026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.160851352 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.163646826 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116235161 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157850413 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.150029175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.133298354 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.163657636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.160585749 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116667828 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.164516205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143392019 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13720677 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137196886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121302092 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138524303 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.151114719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.116781705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138002226 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.157994212 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115604436 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143291476 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143013573 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12320301 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149247893 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115464739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144758387 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142139607 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113467911 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.143629997 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.16350348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113289629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137663032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145156856 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11421475 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142444275 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136522114 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138313878 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.148364994 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118244458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.14433846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.140640783 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11785906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144347039 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.164254863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117683809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146525994 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141583907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115900016 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145817189 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113758433 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145704598 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145643373 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137683469 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145763067 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.142564036 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111844432 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14321897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143105758 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118031281 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.141052232 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144177436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114998135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14204072 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110657028 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142731243 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146001827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.113035285 seconds)
  done (took 10.948602301 seconds)
done (took 40.096841065 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.231390779 seconds)
  done (took 2.236307066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.012443153 seconds)
  done (took 2.019779344 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.721610328 seconds)
  done (took 19.7639718 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.573883615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.667248335 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.072656865 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.190190546 seconds)
  done (took 3.508460914 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.049189885 seconds)
  done (took 2.074745484 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.345293526 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.29579417 seconds)
  done (took 1.65199681 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.894439897 seconds)
  done (took 1.914737301 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.442759618 seconds)
  done (took 3.464442659 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386992846 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.221604417 seconds)
  done (took 1.635520895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.617775845 seconds)
  done (took 1.639837594 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.918789329 seconds)
  done (took 37.945246216 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264423299 seconds)
  done (took 1.30319683 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.329091214 seconds)
  done (took 1.356779659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.008559846 seconds)
  done (took 5.04384276 seconds)
done (took 86.577432668 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118611298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.14927384 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121768851 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14666129 seconds)
  done (took 1.562510978 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124425743 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.142535002 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120083851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143130573 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.152179879 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116035367 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142261009 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123369767 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.14376045 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.116448821 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.143024859 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.141927995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.117445972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.140928791 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112196925 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144985015 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119083611 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.143436384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143238324 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116024426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.141559558 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.116088545 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146503035 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.142039839 seconds)
  done (took 4.230149655 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117903506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.139289154 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11434104 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138851568 seconds)
  done (took 1.542598387 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125007394 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.162639253 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.133327557 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.153863269 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.162608247 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132852097 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.138976717 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.109493533 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142061442 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.151026142 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114031814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.164469165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.160725407 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.109367124 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154394591 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.103772849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.136763949 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133669021 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.153006921 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152999806 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.110344907 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.152974874 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119573023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155404022 seconds)
  done (took 4.368002311 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218710548 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123772907 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.163833444 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.190050683 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136208859 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.137444391 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.16497241 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.118437492 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.14342723 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109341352 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.139620002 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.196862511 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144223358 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.112855198 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.137559956 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.116031624 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147882678 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143740565 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112742033 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.152044703 seconds)
  done (took 3.947944555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118109545 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.13942458 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106315202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137307641 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117602998 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142380691 seconds)
  done (took 1.803001588 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106690173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104072282 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.13504052 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.103836657 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139991853 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105298608 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.132848072 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104939277 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.133477763 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104695752 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133362477 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104105484 seconds)
  done (took 2.450159299 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.254609044 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.137326176 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137898532 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11090863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.142294273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.108228116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.153939489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108486632 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.198695315 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.140635544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.153476932 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196676042 seconds)
  done (took 2.890984996 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23748652 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11617162 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298518 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.411043278 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188613703 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191826544 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303839672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192485837 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212133177 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161377261 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222948503 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181991426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180186449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207957086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16416258 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.211308465 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200941789 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231973776 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172873384 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238465836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190181278 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195588365 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209551861 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177096181 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1610831 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192624611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.111423814 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156868983 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198140951 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195272346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197427697 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172084573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163527615 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226752362 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280289853 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203093227 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.338350285 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17405392 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.220456961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210459924 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301860884 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165909566 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222771941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180252753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156651947 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209194682 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181131372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207811239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154920502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135590205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23908686 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203319775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208019636 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178509789 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331161498 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176892926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168582466 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205328569 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21540165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220636943 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194762824 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145089219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211166556 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210369854 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207770394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168493928 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191795665 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147315397 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20344744 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225478215 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209369593 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19146843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.250508296 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159499339 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190369086 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195578436 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179084251 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205640784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158005397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144686673 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174995955 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164368347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121118035 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213031061 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144242596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233981822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158101641 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211697099 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234026347 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184387343 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186117784 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190924697 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194325861 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173194168 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111574325 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170677784 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187566497 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183849066 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154825661 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182221273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138722284 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150586121 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177662201 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14483805 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156352413 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159157226 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191614065 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191169799 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158594583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19177659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174133528 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153345912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227324847 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216794617 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124815056 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160974969 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222345363 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184683564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160960414 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202875471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216128718 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.189552158 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1665075 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199138486 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222037122 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166918943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217872653 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18126519 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161450383 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145247709 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185464649 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179891067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179061717 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152298747 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178120165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221758482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154946408 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131471386 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202078412 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149213572 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151058108 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138074187 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16578757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16712135 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174336806 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131887908 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179980686 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187239106 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181226401 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18284481 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16905105 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226498824 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156874337 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.188320507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173329434 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.110740306 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204991815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24322151 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127964974 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211923768 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192987185 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253233962 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192258112 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122830907 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237352426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125423924 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.142281085 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196711344 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186758309 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187643597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212772622 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22021814 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191274807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179434367 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175431908 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192636485 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.203250606 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180666279 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169980898 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190028121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197080295 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144836641 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.115987089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.149715164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134303082 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159842928 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155647528 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207886153 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189191004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213952136 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187830147 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164384478 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211768649 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148490829 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190431611 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199123674 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163583369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213075126 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211009475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19323159 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166362442 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196249508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.111409432 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148932305 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157810439 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192750873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126033601 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163732273 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173313299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211941014 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200892911 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174941944 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229247124 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224853724 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22307907 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.112021724 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190991973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195955926 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185073547 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2139583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12776574 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18338212 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20696183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183474756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218583053 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187845951 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195310744 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260789269 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.184435448 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128177544 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176301708 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194549349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170509294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188068976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171200892 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160260544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147598841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160389499 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149844081 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206899092 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169216576 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204859572 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183279081 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197119326 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149777366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173811038 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18957273 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140284713 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.141247942 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197618701 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21312366 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167625153 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183134912 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200226775 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159542691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348754492 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214997007 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240965155 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146745292 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172773656 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189411089 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185178631 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19011543 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209884969 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172880921 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209652208 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186367107 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135630251 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161161636 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172233313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176090767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.177751399 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.125769114 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180819607 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169242933 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209154077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168763218 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18656589 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191978922 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173080519 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146906703 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167021871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229876602 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185205492 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201981073 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.184157949 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191523709 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213095915 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150201029 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150693466 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.117422044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208618517 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156728029 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18638849 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.208808048 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252292252 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185263502 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194546895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132561794 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.147719798 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186831471 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173306243 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226255163 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168598852 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159126647 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218424943 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.176775695 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129531254 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191202514 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312859454 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167637898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199517382 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.144303368 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304700437 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119599135 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159452475 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187229386 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195380002 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15465866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183713673 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188471675 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170184706 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187189853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167261173 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216476842 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264605691 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201741175 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202392201 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.166523949 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182722684 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188394826 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202342792 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135623198 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175779662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189458854 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212121135 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211811432 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158671264 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191620466 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190534449 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187591665 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199069055 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15817348 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215850004 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122886763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223336079 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137795207 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147836678 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185435582 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.209363844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15760164 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201483861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187066028 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124574564 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151377006 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184738304 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187238541 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182708704 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127237042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204157501 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153218332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191616937 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209913959 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122189618 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182211421 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170652526 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154511379 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171817139 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137135464 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162207508 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.197019231 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209429203 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.152874959 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202511537 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199291862 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19091906 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185496298 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168123945 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.655756955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.151894809 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212081853 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173882265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216207694 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173732843 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193640902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189068335 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143911186 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198573113 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173915998 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250705522 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191830518 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185991628 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160496901 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167575818 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138142725 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.155286278 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177774878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190132999 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166092656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129565378 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183724811 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171031182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169829043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132017808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248025444 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143985947 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239813452 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209937507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147524404 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19353093 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231089866 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121781753 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18727598 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197151127 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167165623 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184529179 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.153080466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.127837867 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208333823 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.147743432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187607021 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186435256 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156616993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191577137 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157751892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189074899 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172708456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18828276 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11691186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17929657 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185350864 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154297428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.119290622 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184466934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184141043 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.186067979 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150008871 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169094298 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207695177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147102973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161983247 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310600468 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186462768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220216819 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.179061337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126107117 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17126885 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185121854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181016422 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187737713 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.150947431 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123996627 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.155096468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.212074225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.181403494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183581722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210266294 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185354461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21649908 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139261899 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.296174172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165530742 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182959242 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.128656544 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.153169507 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166235637 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131298833 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154646657 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248116667 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209417924 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148784331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170281946 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150344465 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.115937842 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156277731 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18797031 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179450732 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186333195 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174018046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110132182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174503529 seconds)
  done (took 89.747839894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226873142 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.245422541 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.19049676 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.236180765 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204019563 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297366523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.248270371 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267655784 seconds)
  done (took 3.05827811 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12242071 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159659754 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.165110154 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.150076577 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.148582508 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.395972002 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159608626 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.11693921 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.215540534 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160193736 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144273679 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.697987246 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.144518605 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145617157 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.138587217 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119715954 seconds)
  done (took 4.325062232 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.657830011 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.596493145 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.537317271 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284225514 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260827413 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.206907998 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.831212111 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192137949 seconds)
  done (took 13.71384613 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149202548 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167257788 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.326198664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1701727 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185016032 seconds)
  done (took 2.150251803 seconds)
done (took 136.817621768 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.115037184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.148270262 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.116033447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150086693 seconds)
  done (took 1.664063688 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.130064021 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.130502809 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104781265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.129064282 seconds)
  done (took 1.640331276 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.555289359 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.098387447 seconds)
  done (took 1.831139252 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.141238852 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.161728596 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172553194 seconds)
  done (took 1.635307074 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.123115608 seconds)
  done (took 1.271212839 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12437325 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.148521262 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136880956 seconds)
  done (took 1.565418946 seconds)
done (took 10.756433158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143086487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.455663763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437151213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130162451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.744055804 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.397170913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.1010995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183473401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191403638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109875543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164686811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.722135395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017616464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.396147467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000761119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.489580761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691941983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144002293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148276333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11205915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.074734106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108545634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142857778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112154501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721855889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.414693027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143051565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.497685971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109659136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146734492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399947186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142175777 seconds)
  done (took 17.937484645 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154543115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.208370049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150163406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11147656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.146817568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110865074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154300398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155393294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204637187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110687594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164005957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109403428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147903221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110566173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166779892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109413131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145991802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111927721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.15179253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143913243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133386711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140656039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111737609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143756479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109611475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156030691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110883137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156366705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140906473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115916841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.146941334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110819941 seconds)
  done (took 5.599775315 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160695799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217046571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152571724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147464082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194108995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144578704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.235836426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.184253824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207180905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109590001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164958041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109199754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.184190128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142796619 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135671266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.14246194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11235202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144504155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11831216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145996605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163742627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110626805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143497456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11312972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142578416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.124580228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142807473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.154990669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111392567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147056271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11656098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142768856 seconds)
  done (took 5.931138472 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.118638853 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.151053301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130398669 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162597035 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.112584639 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.150322128 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.117824477 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.145449734 seconds)
  done (took 2.248533193 seconds)
done (took 32.875246144 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13432194 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157468544 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125227689 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.1543677 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.147917965 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142320312 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123442794 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.141590241 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.119566396 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.161121079 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109131536 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.144028337 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.125530558 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147523918 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.127079695 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.153554376 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.166285938 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.128169323 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143222958 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121138949 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.143858156 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.133992249 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.150341514 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11088815 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.172401534 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.14687752 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131973114 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.147521373 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.115988013 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14568547 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1288732 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149303636 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111789821 seconds)
  done (took 5.713287013 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.142350673 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.194621884 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.107926365 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.144248013 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.188934469 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.109154052 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.173770031 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.108205105 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.14334771 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.108870427 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.141910428 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.137769734 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.178188379 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.178364458 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.194465438 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.14955633 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.171003794 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.18603118 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.134144678 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.184963858 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.175179807 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.108256434 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.180442395 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.188474185 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.108688244 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.141416669 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.156536042 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.176711095 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.189569558 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.179297788 seconds)
  done (took 5.855605146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.120845637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.162787401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.142015699 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222935875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.189372382 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127991273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.160562412 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.164612411 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.142323598 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144312102 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124204738 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179822582 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163265713 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124207716 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149757997 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128642211 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.167192102 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.113053328 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.154253677 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131960436 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165945035 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.159296592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12873544 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15633075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110598065 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15422514 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118221098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.160880265 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.15312338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123090615 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.149569518 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115787248 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148528493 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.121961565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.148638847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152071599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.135882091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156742096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126279795 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.183147988 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.15456425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116861986 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169427426 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164008209 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.149078634 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15263893 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124992625 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157974394 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110694406 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166045818 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128041667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14565845 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.161443241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111480035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143489454 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120799027 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145726927 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114869512 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155915595 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115562433 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167914191 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121424191 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155695288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147250272 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122926556 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143486161 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112093053 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149794985 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139354476 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152509114 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180425914 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113140078 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.151372759 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.122338437 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.153035161 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123306526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144887044 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121142511 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155592874 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118122697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156338066 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147005916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116653463 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164116832 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127544654 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.153184505 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150150916 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.119952319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147338852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114260569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162210769 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113166291 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150545162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123931362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146817438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114713356 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153107253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.117355451 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14572285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167700537 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117719796 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.144371965 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133461333 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147063767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115594852 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155759008 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125172624 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.145747972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.117607086 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.154281519 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144705262 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119689906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148769196 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112637265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159508413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126669417 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152475003 seconds)
  done (took 17.780669222 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.276206734 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.252319433 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.22640586 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.348159937 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.171365218 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.17960177 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.248979933 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.201791593 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114145123 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.190428335 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.20719243 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.214147349 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146688878 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147115861 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.286922595 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.318013063 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181146692 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.192912138 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.191387246 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.172836189 seconds)
  done (took 5.455260463 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130949505 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.188248932 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.177385228 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.172922136 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.113599563 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160967247 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113557795 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.163226836 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.11336662 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.15635285 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.145251593 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122215302 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.149588745 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.11722052 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.165608968 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.163646754 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117870184 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152851936 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129736329 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.152110482 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.148111323 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.167492474 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122442607 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.178065126 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.120465831 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.162711482 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11152929 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.155540743 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.142987538 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.112027259 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.152075826 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128326619 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153717907 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114511599 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.152510752 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.14664218 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.110597424 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113804131 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.148837949 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149597733 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13173074 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.149684969 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.113013562 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.148321723 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129318758 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.143520347 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.118366054 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.153546834 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.150313836 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.123018801 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152665109 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.118676252 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15375978 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125795575 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.143727481 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122858003 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159714215 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.153173932 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119359963 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.146268194 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111307007 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150853486 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.111127794 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153182839 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.11850603 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162757005 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.156645357 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112265103 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.15293321 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116505473 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.150375102 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.164560778 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.132980093 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.145314086 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.109774468 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.169375875 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.109688207 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.13470995 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122094713 seconds)
  done (took 12.24076739 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.1472512 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.147391833 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133680163 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184720874 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.26554985 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12300828 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.112996476 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.168853439 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.155046273 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.121790109 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.154787834 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130353574 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.181313456 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.1633822 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113893334 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164783667 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.118095135 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.19462035 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.167850965 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14940382 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.262354352 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118130456 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.164006068 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.161432642 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.151727599 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.163646744 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.185928283 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.11851872 seconds)
  done (took 5.634995059 seconds)
done (took 53.84357215 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.380404207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.502003613 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.268726201 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.267630724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.279457899 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.290591517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.290152313 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.462585933 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.081421535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.257861606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.267758754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.267811914 seconds)
done (took 28.81296041 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.438377956 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.887011764 seconds)
    (2/2) benchmarking "String"...
    done (took 1.617017096 seconds)
  done (took 4.715958335 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.266944231 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.267600477 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.515435725 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.267890299 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.267862044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.273035524 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.267071448 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.275336508 seconds)
  done (took 16.327876342 seconds)
done (took 26.941577246 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.301509353 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.738238766 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.540006013 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.288720903 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.275627948 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.281507692 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.26000345 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.337222685 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.278712041 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.258289551 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.29175639 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557562229 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.259614724 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.69258969 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.25742895 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.290317369 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.269562931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.599166699 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273391547 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.323815192 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.257668857 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.261391715 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.276119463 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.298025272 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.286436007 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.274096573 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.258526224 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.269309327 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.52671637 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.29481383 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259428921 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.291447062 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.274222805 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.274297027 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.396054245 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.305445529 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.565253091 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.275104317 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.261169915 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.276443493 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.566688046 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.72214039 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.271511694 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.286997265 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.282460092 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.343933413 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.266141764 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.053890374 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.275870337 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.292347613 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.339261114 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.6740322 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.276243221 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.286202164 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.283992879 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.597101184 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274335764 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.359081047 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.308911495 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.28519673 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.273372504 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.272544251 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.346667347 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.27323194 seconds)
  done (took 148.966916469 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.273394644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.277169753 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.277010658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.281918862 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.276777056 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.277476781 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273281738 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273077845 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.277942098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.27685086 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278509128 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274795025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287341338 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.232179643 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.275145877 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.294343164 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.277642433 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.310502804 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.273692384 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.273937238 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.281950644 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278244291 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.297623375 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.277925128 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.298799992 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.365095473 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.306880898 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.323800421 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.275162208 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274951068 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.296149215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.28274098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.989509471 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.128431987 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.288202842 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.289006889 seconds)
  done (took 82.997042608 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274128717 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.275221505 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275672829 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.313061289 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276218688 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.941171369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.950663431 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.077025527 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.495603489 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.990992553 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.706656201 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.27796419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374920316 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291074758 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.276434603 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.292395066 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301098768 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276447215 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27625185 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.957519947 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.29242348 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.385698013 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.489636718 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.294781042 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312823381 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.679330371 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278139325 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313750395 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.626638916 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332398325 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275772132 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.722488051 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.924103182 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397496133 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279331153 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313750977 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278386091 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277756625 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.570054107 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278275046 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.27808762 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280583374 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.090744891 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281371816 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.92071661 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277023228 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.321176677 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277434533 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279042959 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.736451061 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.257702225 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.299706228 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.277596078 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.280074445 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.27858939 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278209624 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.316504976 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.769386975 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40496579 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.279141902 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281284485 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315801313 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.277789563 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.578499624 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279315183 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.433256021 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.340272382 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.488876636 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.959106345 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.281581835 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384115173 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402533207 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278862093 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.27927604 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279147109 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27918871 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279373265 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.39481461 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279294531 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.76188779 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.279471326 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.469711921 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.299014443 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.042938054 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.282834273 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.382693646 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.280281317 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788342517 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.283979032 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.279262517 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.206741889 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383990348 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.27923876 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.279656057 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279403599 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.762230314 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.957492952 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.672374849 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.283721344 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.995661205 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.284347164 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.770567225 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.918278761 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.091960935 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285770284 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398708579 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.470896803 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301222805 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280157528 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.065299221 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285954701 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.344090936 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.281014415 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683633738 seconds)
  done (took 379.421876955 seconds)
done (took 612.577845275 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.002583046 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.948582444 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.0919987 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.983035344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.942216993 seconds)
  done (took 11.175145555 seconds)
done (took 12.377516052 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491494929 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490741585 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350100506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494375736 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317264169 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513680112 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47532996 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.303633929 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39673858 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.373840793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395476061 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341131233 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321561535 seconds)
  done (took 19.471217694 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575978382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.283472088 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366169805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543029031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322003327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578578163 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.592431174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283763227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429744652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296249129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.296821884 seconds)
  done (took 18.776105965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.566438612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284545098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35127726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547372727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325899088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587843033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.624032336 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283596632 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433272189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298018644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.297818001 seconds)
  done (took 18.808457577 seconds)
done (took 58.25949471 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325803107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.460904871 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.311172143 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.299052417 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.291908881 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.294663457 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298687977 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.292941298 seconds)
  done (took 11.789438354 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.29245531 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.289555394 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.289277691 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.290633649 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.288360942 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.291966924 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.307121693 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.292428681 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.293954111 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.290772329 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.29016581 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.293278898 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.292308564 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.291712587 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.289331042 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.29265101 seconds)
  done (took 21.885555694 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.292466146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.290346163 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.290796292 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290476206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.290159551 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.291496612 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.291639528 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.291476176 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.290300725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.289876178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.291310351 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.290265175 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.290139028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290091473 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.291665281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.29184893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290936729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.29119535 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.295707299 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.29057338 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.29124454 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.292064884 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.291865287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.290913165 seconds)
  done (took 32.211984387 seconds)
done (took 67.092464945 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.286408265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.301911904 seconds)
  done (took 5.798265119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.355153654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.353564504 seconds)
  done (took 3.921178004 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.295945789 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294712395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.29530519 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.295752876 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.295516693 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.294353894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.296118247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.29512923 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.294583728 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.29525618 seconds)
  done (took 14.162717154 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.294283853 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.294357624 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.291862428 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.294521997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.295033155 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.291828672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.294752586 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.295273883 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.295331323 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.29325981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.29505201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.292344499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.295501476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294215748 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.295941257 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.29330549 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.292335697 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.293570078 seconds)
  done (took 24.504363714 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.309170307 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.317154545 seconds)
  done (took 3.837975681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.433465289 seconds)
    (2/7) benchmarking "second"...
    done (took 1.336170419 seconds)
    (3/7) benchmarking "month"...
    done (took 1.409537308 seconds)
    (4/7) benchmarking "year"...
    done (took 1.400868217 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335225795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.316215067 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.336165649 seconds)
  done (took 10.779324873 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297761593 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.497564487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612768028 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.885455956 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.297569456 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.342003654 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.165356583 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.342723203 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.331738353 seconds)
  done (took 14.985610634 seconds)
done (took 79.197096294 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.288107247 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.316177472 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.311486745 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.305887997 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.653048074 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.303641271 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.292890459 seconds)
done (took 16.681784187 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.289826811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.297533656 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.279494006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294502517 seconds)
  done (took 10.375708368 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304786652 seconds)
    (2/2) benchmarking "read"...
    done (took 1.6438624 seconds)
  done (took 5.161829374 seconds)
done (took 16.748736561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29821925 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.297933183 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.299252247 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.295247695 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.295210499 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.299147608 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.295986313 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.296225928 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295482169 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.298417052 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.298442952 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.299482853 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.298194173 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298301146 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295976079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296792257 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299991657 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.296593968 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297329965 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.300182581 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295796432 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299287029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.295429809 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.297435116 seconds)
  done (took 32.356152507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.300540307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.298434567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.299680854 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.299218232 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.296687476 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.299316518 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.299680428 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.296903684 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.2999141 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.298901135 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298328612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.299292415 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.299639314 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.297483546 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299771133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297627776 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.299663076 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298393719 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300001123 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.29793861 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.300587853 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297464322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.29827336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300219677 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.298311386 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297524565 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.301613169 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.296641755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301791305 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298427576 seconds)
  done (took 40.184699772 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.306484086 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.309008628 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.300983369 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.300844725 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.301193077 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.301867895 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.301967274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.301241968 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.301332741 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.301818569 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.300924874 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.302163057 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.301409595 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.301076306 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.302387541 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.301766227 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.302088952 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.302865504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.302324802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.301641681 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.302828054 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.30255785 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.301729813 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.301668251 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.302040538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.301241844 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.302438849 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.302196577 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.30234011 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.30277657 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.302939877 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.302767521 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.302631002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.304815458 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.304012808 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.302680772 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.307771187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.310307892 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.303434938 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.30243022 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.302940889 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.303551961 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.303638588 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.303606014 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.303532988 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.303280516 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.303737088 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.30307466 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.303335205 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.303460405 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.304356052 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.30384452 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.304286025 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.304480699 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.304361228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.303998818 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.30405918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.304243943 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.304946905 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.303189499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.303533085 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.302587635 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.303168652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.30452579 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.305398173 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.304274281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.304669945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.304330707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.305233394 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.305191938 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.305857795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.304270198 seconds)
  done (took 95.06042659 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.305044046 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303088825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302481026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303370203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305197568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.305072035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302457683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305886709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303013432 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305506519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305264215 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304146333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302882019 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306876675 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306794794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303788944 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306366071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304186405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.305831304 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306086471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306093575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.303458854 seconds)
  done (took 29.924541902 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305615194 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307950082 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.303826375 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309425971 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306724458 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307673293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306438542 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.307284758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306173149 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30416973 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304197665 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306959874 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305970502 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305308336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304335747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306737405 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306736999 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304944323 seconds)
  done (took 24.732729523 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.305436244 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.304762431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.308091917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305143616 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.305236561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30823507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305210538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308339595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.307559584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.305914148 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.307991676 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309521623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.308595254 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304428808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308250461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.306110996 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.308421057 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305818962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308978315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305580185 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.30536923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308824009 seconds)
  done (took 29.975953378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307870407 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307712998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306414414 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307040762 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305469076 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309388518 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.309449906 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.306921569 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.3099496 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.309586191 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30611691 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.309083241 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.308640372 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306290602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.306737585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306625538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310210977 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306578339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309736136 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307512099 seconds)
  done (took 27.381022181 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310815658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312217972 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311934445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311436855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311060341 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.311440007 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311420698 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.311975332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311593297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312671095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312334252 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312940417 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310963201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311975407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312168198 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311834263 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312174141 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311919012 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312996746 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313151682 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.313041637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311667021 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312030205 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312311031 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31232442 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312619328 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312649024 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312919054 seconds)
  done (took 37.964755331 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313333931 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31223057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.310060892 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.310882108 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.309283633 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.3094261 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.311487879 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.310420983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313432432 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309991381 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.313182579 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.313783971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312254888 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.312926089 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313010765 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.313642376 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312446189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.311021466 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31057435 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311169292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.312401326 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312615557 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.313823857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310976601 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31182829 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.31394098 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309934552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311589862 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313843349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311261837 seconds)
  done (took 40.58560807 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.359618823 seconds)
    (2/2) benchmarking "in"...
    done (took 1.358488393 seconds)
  done (took 3.946879782 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.313248483 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314908925 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.313894761 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.312712938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.31209914 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314638916 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.315356178 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312967697 seconds)
  done (took 11.738865865 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.3155964 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.314962937 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.314938647 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.315856619 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.314896626 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.315758517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.322273264 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337857091 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.316563712 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.317206437 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324778142 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.324392245 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.319147941 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315845201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.315982087 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318274825 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.316859798 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.31637662 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.316168623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.31585517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315895719 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319156168 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31999109 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.314849856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.319111083 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.326699208 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.320893666 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.316692117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316466154 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.320726051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.317517786 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.314550321 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.317172416 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.317196366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.317428153 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.317431373 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324495379 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34202163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.324002788 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317895167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319015015 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.314665145 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.318458038 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.320225542 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319896132 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.317641701 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.318121606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.315154026 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.316217015 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.322144905 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.323469043 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316989627 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.315660655 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321530302 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.319153227 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325339457 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340962391 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.322662995 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.328925663 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.32967552 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.331393952 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.346169094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320641555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.317947926 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32996948 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.345079921 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325772939 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.338740644 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.316163617 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.318930455 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.325731529 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332224347 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.347764182 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.318121904 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.31996813 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.321005054 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320731463 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319762735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327873257 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.344831219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.319645556 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319989887 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332424665 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34541544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321614853 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.319887835 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.320440846 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.320039251 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324078149 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331503705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342209536 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.320987 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.320645996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.321430582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.321438955 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.319839509 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.320121824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322352262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.318725927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.321634955 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.321534931 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326219104 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.331105774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319969499 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322130986 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.327823742 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.32248573 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32230683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.328453511 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.321673837 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321969207 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.324253948 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.32860077 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.318479497 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325788217 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.329922239 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.321245487 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.324483098 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.322611774 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.323250749 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333722372 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.350932607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.32290479 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.322979986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.328384342 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.335590082 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322809812 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.326026928 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.323876918 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.320610966 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.320580763 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.324288316 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.32309611 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324215847 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322712749 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324587217 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.320544345 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.322858427 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.322762659 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.324912355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.324267297 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.325080566 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.325087848 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.326223151 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.322770653 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.3252396 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.331318567 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.324678141 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.32592296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.325393084 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.322048152 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32370781 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3253522 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.325085192 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.324748683 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324380544 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.325117524 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.325341095 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326409356 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.325840327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325211818 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.326679947 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329751675 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.325467191 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.329519909 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.325304655 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.322619862 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.325320159 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.326322559 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.324379236 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.325985683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.324554911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.329041759 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.334310295 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.325764328 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.325778455 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.329211189 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324802842 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325849085 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325018237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.330845034 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.335520649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.324963167 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.332792678 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.326374545 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326945186 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.32792128 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.326868094 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.32721303 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327316742 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.330757881 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.335222563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340128154 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354887684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.328906164 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.331773772 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.328847107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.33049415 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.331696738 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.326856019 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.327808824 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326924164 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328745086 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326928109 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.329906583 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.326685727 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.327433571 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.32749465 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.863683391 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.327076628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328518399 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.329341484 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329284251 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.325911659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.32785707 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327346475 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.329023296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.326061189 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.32842805 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.327793552 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.32886664 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.328488926 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.335375691 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.326560806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33163627 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.330958755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.330562851 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.328347446 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.329226685 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331592777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.32950607 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336650599 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.352043672 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.33052587 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336868571 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.352689915 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.329664776 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332414982 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.330854571 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.327444663 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.334605786 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338935528 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.330061631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.330884485 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.330436816 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330361491 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330731849 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.336838776 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.328189701 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.331264734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.331481276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.3311113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.326768749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.332090076 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.331573502 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.332210584 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332927922 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331562845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.331964515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332556668 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.329393646 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.332127441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.33187284 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335880273 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.339062644 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.336319925 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.331080422 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.333659915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.333120483 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335423447 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332149356 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.332019751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.331559156 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344549841 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.359470937 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338057522 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.354773859 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.332186601 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337294804 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.354922055 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.337066268 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332239 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332727604 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.3321328 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332438669 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.330064454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333321038 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.332331271 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3332121 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.335274027 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.337272998 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.332518882 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.331860843 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.332436625 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.332228067 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.333588911 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332992438 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.33309855 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.334582385 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335341186 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.331419769 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.333526333 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.339890862 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357683386 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.334680796 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.333150819 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.334230595 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.333439141 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.334760076 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.334036507 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.338622731 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.341773559 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.338050319 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342915195 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.336316314 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344521488 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.334140305 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.33884887 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.341788815 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.332700389 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.3326965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.334461401 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.334494168 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341680982 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.356728369 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.337634794 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.33884769 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334750112 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.334787134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.334888329 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.334604502 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335954842 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.334896752 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343571867 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.362152711 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.339957288 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.337951754 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.332019618 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.335106617 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.335478092 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.334848131 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.337677622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.335221088 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.336953448 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.334715806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.335628906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.336454786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.335883222 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.336654868 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.333580521 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.337300443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344085844 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.362569422 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342332095 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.336952724 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.343717206 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337448183 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344084996 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.359485354 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.338617489 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.336234203 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.3375118 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.337802387 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.337771936 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.338531723 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.337537512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.340192925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.341972337 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.337740621 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.340024477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.339158233 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.337411042 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.338873352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349134076 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363403904 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.338968063 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343068965 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.336531029 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.340655381 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.342447758 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.337605049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.338790596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.343950014 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351181482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34767283 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.339399747 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.337880663 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339867039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339349524 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34036303 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.33934866 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.3381796 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.340772776 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.34093577 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.339836975 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343309698 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.338749815 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3404695 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341720641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.342350925 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.349807456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.33976386 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.341061402 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339447266 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.341488028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.340536491 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.340682993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.339937388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342895047 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340654668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.342041867 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348903387 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.34889561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342479796 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.341221308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.339957944 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.34254191 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.342723261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340607443 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.340399935 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339678603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.342074243 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.340317843 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.342282383 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.340310675 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.340256669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.341582593 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341860333 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345454675 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.350113417 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341272021 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.338556723 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.340552401 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342405569 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.340637714 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.342009624 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348952769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346137228 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.353407998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.352046685 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.346393442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.342351735 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345965303 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.350671602 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.341936631 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.343620106 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.34142853 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.34357616 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.343509576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.346856623 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342761915 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.350457754 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.342746187 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.344265483 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351039312 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.382222125 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343422319 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.344756915 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.349346371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.34450424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.342396159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.344839318 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.3435747 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350440103 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.367283639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344693396 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.346152142 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.344221874 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.347727732 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347786356 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345035058 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.346842124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.340739766 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.345412955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342839804 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344910446 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.34097363 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.345088977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.344863294 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.34850202 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.353115603 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.341710948 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347221832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.345126047 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.346200231 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344672635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345891748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.343395852 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.342428282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.345639104 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345199248 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.345440231 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.346876816 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34487484 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.3469664 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.347204357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345844909 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349665256 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.358751084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.355041632 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.343194796 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.345838968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.346619282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.348869705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345616699 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.346029953 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346352793 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.34696745 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.34548197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345695023 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.346113325 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.350812639 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363579947 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.372450455 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347282677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.346468154 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350003445 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.347807953 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.344423539 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.347167336 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.349385075 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.351962517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.355172031 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.348275262 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354329894 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371116639 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.349163212 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.352541482 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.351934625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.358346044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.351140602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347660427 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.347518823 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.355471545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.366258447 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348481669 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360639456 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380959703 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371716275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.349701402 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.347803315 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347893268 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.348572012 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.350609138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.349501021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.350248251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349617536 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.349175717 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.350111124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355950525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.350891713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.350409181 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.349636212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.349674442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.35088902 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.346800938 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.349027158 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.349858135 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.348999075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.349216974 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.348981496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.350010548 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363648104 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.379610117 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.349642091 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.350240451 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.34651935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.353538486 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.353809109 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362175648 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359310727 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.348739588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.350746275 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.351503539 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349013218 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.350112629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.350003426 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.351762435 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350714488 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.348867995 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364675227 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379251316 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.355165339 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351145541 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350843765 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.351236954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351108826 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351571733 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351042923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.351983903 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.354489244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355678286 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.351705309 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.352484015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356163896 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.360167325 seconds)
  done (took 798.330474149 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349043053 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350463887 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349624414 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350009394 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350309753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349886847 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349725418 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349891277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349397352 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350575673 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350265995 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349426963 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350112728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351512439 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350043791 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351502827 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350749654 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350102619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.350059859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351355946 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351405305 seconds)
  done (took 29.619864034 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.353272104 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.350562804 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351906205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354247845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351816554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353579554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351184914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353021668 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353883048 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350378479 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.353613861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354387322 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.350600718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.35096281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351833764 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354561111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353522638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351778793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.353822772 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.351928527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353761936 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35142239 seconds)
  done (took 31.022337661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.353754858 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.354050598 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.355303737 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.352823529 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.354625833 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.351885684 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.354296217 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.354315977 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.355375074 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.354866073 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.354113084 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.355615135 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.362818816 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.360284067 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.355553172 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.354409012 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.354149833 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.354649207 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.356870771 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.352452977 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.360656078 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.374797132 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.351987211 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.354727102 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.35505326 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.355677027 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.355444656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.354959225 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.357768085 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.359595138 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.355818727 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356203407 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.357222881 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.355718632 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.357863202 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.360421662 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.356337966 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.352762078 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.355431802 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.367772537 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.378937394 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.357154901 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.362780322 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.378249231 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.357247869 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.361800283 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.365615279 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.354899424 seconds)
  done (took 66.44335564 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.97679058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.012857004 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.999771345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.004882736 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.010429667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.004435745 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.007837988 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.010159726 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.999331632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.001219232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.004942251 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.000607117 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.010826673 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.998752967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.996735097 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.000028041 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.99991961 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.000008056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.003908785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.997345281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.995659089 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.002947625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.002415242 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.014434986 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.004938127 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.995451953 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.002053991 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.000165364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.01044611 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.010982098 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.002955827 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.002220635 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.004960495 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.00232646 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.014205661 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.002546464 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.999940974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.994401183 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.002144362 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.004031848 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.010465859 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.004554685 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.005056621 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.006072541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.005229493 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.018522684 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.001076479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.999548137 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.00083462 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.997851696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.00549518 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.005804812 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.00255503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.999579438 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.005207219 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.003711138 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.011883009 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.00096842 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.002047894 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.004368998 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.001647251 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.00615844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.005805538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.999901756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.004625743 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.001921916 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.002504339 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.018816154 seconds)
  done (took 137.51353337 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357394756 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.357192529 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35599945 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357642747 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35739916 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.355534145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.357930666 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.357766692 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.356487319 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357739325 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357615736 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.357817442 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.356633246 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.358749088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.357588841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357625985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.357807176 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357624798 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357483806 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358140758 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.357631892 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.357999095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358673768 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358429839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358894483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.358700426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358112679 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.358776391 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358024789 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.357902153 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358686867 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.358204541 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.359403496 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.358167685 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.358711622 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.358802879 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359321759 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358874134 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.359372922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.360875751 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35915892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357477084 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35857209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.359923495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358995179 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360061202 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359734575 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.3595459 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.360740984 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359424291 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.360258581 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359233516 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359198339 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.359629044 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.359865442 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.360707705 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360319735 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360969552 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360530786 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.360182539 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361125828 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.362256052 seconds)
  done (took 85.511462773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361252141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.360513003 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.357773092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.357542182 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361196227 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358707175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.361775701 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.360469593 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.361863799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.361481012 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363309678 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358380196 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360899048 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3628167 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358252289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359508326 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360502592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35840018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361600553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358719186 seconds)
  done (took 28.476773639 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.360572127 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.361324949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359442672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.360864951 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.362382044 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.360125599 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.362012119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362549664 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360102103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363537516 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.361441366 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362511961 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359177214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361545223 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.362999911 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360007449 seconds)
  done (took 23.05306084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.361564656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362221241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.363192586 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.364142414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360978867 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.360006493 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.362807045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.359850547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.36090908 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.363629278 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.362811579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.364796956 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.364273652 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.362319107 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.362362296 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.363134217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.361604462 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.360834408 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.36385871 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.363541704 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.361087493 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.361517082 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.363732248 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.364888197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.361058009 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.362261964 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.361753794 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.361287885 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.36235249 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.365035599 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.362620927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.363119993 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.362257247 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.362091376 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.364318517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.362354838 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.365184942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.364341389 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.364878733 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.364491509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.365313589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.363553437 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.366231223 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.365130997 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.363536521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.365409281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.361698727 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.36348267 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.363409691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.36371947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.365523604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.365868246 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.365729048 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.367168528 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.366248048 seconds)
  done (took 76.2568425 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366913335 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366489091 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.363683781 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366524327 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367281346 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.36454498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365710297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365780222 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363975804 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368099672 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364781343 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.368342901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36418963 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366911398 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364337381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366428857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364342494 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363664696 seconds)
  done (took 25.858257162 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365020756 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364825185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.368865996 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36455469 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.365112812 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.368200089 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365187774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.368477491 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367056665 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.366733351 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367240204 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.36711574 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367990813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.368270762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36504881 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365722119 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.369262778 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367378375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.366691669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366328134 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36873872 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368713752 seconds)
  done (took 31.350628011 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.369118688 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.367731574 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.368941268 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.38605751 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.390101116 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.368090789 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.369917986 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.369059481 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.391996069 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.428569401 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.421770154 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.391398037 seconds)
  done (took 17.900657087 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366404875 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370093328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366677016 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369137733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369523607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366654803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36716051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367410755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369140879 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368015838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367483023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371076144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370270168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368117266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369519335 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369608144 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367027927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368424306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368695097 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370358373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368109485 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37033234 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36853684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369911551 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368474255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368289194 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370846491 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369006433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368127596 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370580742 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371790459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368632134 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371183872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37043348 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370442409 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370506489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368692012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371645551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371343984 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368702573 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.371162304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37100484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372381052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369928509 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371637134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370348041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369898936 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370290544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369625105 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372860866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371758685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371053613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372871604 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372905394 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372641899 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373803512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371076772 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371664312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374082649 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371020502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370463563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374362787 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371448724 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370998792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374502131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370951579 seconds)
  done (took 91.713498137 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371763585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371686216 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370539574 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370830907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371888033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370436573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370532816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371229136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371047682 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371110136 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374031636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37191426 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371906906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370185773 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371407439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371242546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372320268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372082796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370642578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374476029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371415659 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372344223 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3715795 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37314174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372602405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374435072 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372054696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372635902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372482934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372772281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372052929 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372616083 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37392702 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.372698512 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372259964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373257107 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373568448 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373450004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372979061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37619077 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372755269 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375375937 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373472291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374146715 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374734673 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373812186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373325683 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373913379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373200537 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373149812 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374354041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37393838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373770932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374007133 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374021599 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374133001 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375263669 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373519828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373671533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377626688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37437879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375527273 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376456142 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37553435 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373370944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375737474 seconds)
  done (took 91.910122505 seconds)
done (took 1910.023757712 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.542238479 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.493904966 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.375897294 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.38234676 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.375543705 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.377400283 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.39246463 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.375653664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.375731124 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37597978 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.376518177 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.585731566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.378628776 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.375709318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.376445058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.472837368 seconds)
  done (took 27.929194107 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.408609684 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.38384435 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.519590823 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.401527817 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.408798106 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.603785547 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.44336211 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.382590811 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.591498471 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.404533344 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.371819958 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.407703892 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.380956952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.371476743 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.403219069 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.605601641 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.676237944 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.371539917 seconds)
  done (took 30.423783032 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940126586 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.378487608 seconds)
  done (took 5.606482866 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.404957463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.381784766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.384725912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.381018344 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.375441453 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.372277885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.38118637 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.385015041 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.375432569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.536074205 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.384172212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.394192471 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.408189315 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.384713781 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.380285342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.427112011 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.536655175 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.382686157 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37911409 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.389408223 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.382783584 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.487824752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.43326115 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.380702952 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.536249262 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.376932033 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.386403856 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.391498434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.533660833 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.382959518 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.38316111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.38345182 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.385770217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.329045151 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.933257522 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.406104786 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.414052151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.391545827 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.379610209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.559820456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384778622 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.390418704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.38898959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.929210845 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.54351782 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.524384386 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.412614761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.385016927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.386028877 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.457271129 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.383674374 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.386447682 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.430874161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.268096574 seconds)
  done (took 88.473551896 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.378366043 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.37623587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580532623 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.385892305 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.376573021 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.376899993 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.379107916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.731254643 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.395422919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.378791465 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.701466078 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.01860866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402560329 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.423558716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.224471412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438884562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.379861489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.396085263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.378596431 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.383798916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.977567513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377480374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.39740304 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.473718597 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.421848735 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962244704 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.376948813 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.410509311 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377666142 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.376502257 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.970143458 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.401811936 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.435136492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.379200074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.686730611 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.831248155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788480463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.382194383 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426256085 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.379676004 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.390014729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950285376 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806500742 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.379131716 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.377968296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.955842518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378040171 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.383549766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.383417705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636422105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.378875483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.378907331 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405649248 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.37914595 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.378976729 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.447699618 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451933536 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965511348 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378424118 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.379931793 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.419863623 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.380081271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.388589422 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.382577949 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.381520314 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.813167532 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590607522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.383650687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810452671 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96779881 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.399694898 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041706417 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398735788 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.387728676 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.567112477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393290339 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.379423936 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9783268 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.403615903 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.380403718 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790630288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.380972235 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.70667414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.403282491 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404125659 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990143202 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.386305674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.472169428 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.380819937 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.380334468 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.38029522 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384508881 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.71471452 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.421978019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.382307998 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.382263363 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.390162828 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389460893 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.382340683 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.38539476 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038170102 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.410888818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.382348533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.382702553 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383889724 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.38279793 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.381990512 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.383065564 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.655760971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.381933384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.412330086 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.38284703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.382925673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.389623149 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.479546942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.389985087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.761206463 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.383690836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383575671 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.40407598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.381186701 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426695081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383343489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.384329577 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.321769148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.682667594 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.405359491 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.382386046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.384429812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383386585 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383904072 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.384477753 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.41808857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.385456257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219024066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438674544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.404949533 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.383163725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.390168506 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383900911 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.390252605 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38523106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.696339322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.696807858 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59734309 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.391379041 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.384053556 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.225754475 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.416913561 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590391381 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385909144 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385624028 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.646815141 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605364294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.386188559 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.388322281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.385868272 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.65301718 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.384355006 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71171283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001789506 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404649054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.389206321 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.225325272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148539408 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.386711329 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.384412321 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.707953854 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.408354258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.386221007 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.385236587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.386609911 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.385569294 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389942655 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.386013553 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.387123801 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.385661329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40664237 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.601876304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.385478551 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.396868878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966355968 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397036916 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.386881624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.387277089 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.393128706 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.387661808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.481756383 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.389086172 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.40756619 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.389077542 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.389613628 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01513624 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.387761986 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.388746107 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.603611526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130679257 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.407747035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.388148919 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406859911 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.265706884 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993067625 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.423521907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.768880738 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.393994616 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.432235917 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.388809646 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426352317 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993955074 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.389358785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409291397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.125704615 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.408450224 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.803699416 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.388120743 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.38845725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.082227983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.408768939 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.388134555 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.388961136 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398591373 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.691717721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.389749806 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.4177759 seconds)
  done (took 512.387001729 seconds)
done (took 666.10330127 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.388136883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.389302169 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.375706267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.392629929 seconds)
  done (took 10.851842263 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.400520234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.398533388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.39874353 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.396405504 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.399561334 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.397985296 seconds)
  done (took 9.695960633 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.391099579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.391375256 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.392276232 seconds)
  done (took 8.48066767 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.642393798 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.414338159 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.798127341 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.424783453 seconds)
  done (took 9.586648916 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.398916448 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.399041583 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.398838313 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39925038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.402948486 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.403503774 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.399417555 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.400939348 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.402256657 seconds)
  done (took 13.911144248 seconds)
done (took 53.826971531 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.395539501 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.605300821 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.417236334 seconds)
    (4/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.490121572 seconds)
    (5/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422799111 seconds)
    (6/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.40081221 seconds)
    (7/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.3962136 seconds)
    (8/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.410718003 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.43609749 seconds)
    (10/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.047510535 seconds)
    (11/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.552147578 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.427585637 seconds)
    (13/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.611855148 seconds)
    (14/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.445482817 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.503651205 seconds)
    (16/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.456371597 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.484514632 seconds)
    (18/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.41547743 seconds)
    (19/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.79029592 seconds)
    (20/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329007728 seconds)
    (21/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.617589384 seconds)
    (22/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.427544787 seconds)
    (23/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.387850133 seconds)
    (24/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.550274005 seconds)
    (25/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.464679678 seconds)
    (26/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.623634548 seconds)
    (27/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.535230082 seconds)
    (28/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.413931618 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.474381517 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.508062906 seconds)
    (31/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.526765786 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.413783624 seconds)
    (33/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.404345722 seconds)
    (34/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.062293566 seconds)
    (35/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.505281596 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.539038154 seconds)
    (37/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.170234562 seconds)
    (38/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.553723803 seconds)
    (39/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.650840465 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.452087366 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419949969 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.540459819 seconds)
    (43/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.405793887 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.623902052 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.625913343 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.468093594 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.397284923 seconds)
    (48/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.18320332 seconds)
    (49/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.428739035 seconds)
    (50/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.486775078 seconds)
    (51/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.423092309 seconds)
    (52/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.489314766 seconds)
    (53/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.518393704 seconds)
    (54/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.409667974 seconds)
    (55/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.494776924 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405651191 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.180869599 seconds)
    (58/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.429237325 seconds)
    (59/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.389798921 seconds)
    (60/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.384908297 seconds)
    (61/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.413142414 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438155759 seconds)
    (63/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405373588 seconds)
    (64/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.411171231 seconds)
    (65/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.516698741 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.456449019 seconds)
    (67/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.060733566 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413813866 seconds)
    (69/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.122795436 seconds)
    (70/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.559227591 seconds)
    (71/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.422775922 seconds)
    (72/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.571355667 seconds)
    (73/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.572485579 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.416831981 seconds)
    (75/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.503437081 seconds)
    (76/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.385800083 seconds)
    (77/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.421988387 seconds)
    (78/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137701236 seconds)
    (79/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.48791452 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.477236014 seconds)
    (81/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.600914512 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.560603035 seconds)
    (83/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.426522018 seconds)
    (84/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.051434724 seconds)
    (85/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.57926295 seconds)
    (86/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.407219988 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.182228026 seconds)
    (88/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.074538044 seconds)
    (89/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.486709781 seconds)
    (90/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423210889 seconds)
    (91/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.309184584 seconds)
    (92/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.158008847 seconds)
    (93/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.816738027 seconds)
    (94/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.336438186 seconds)
    (95/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.4434252 seconds)
    (96/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.411300441 seconds)
    (97/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.384634741 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.531906959 seconds)
    (99/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.312810263 seconds)
    (100/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.505636007 seconds)
    (101/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.465386563 seconds)
    (102/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.398636148 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.459840225 seconds)
    (104/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.422258097 seconds)
    (105/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.199798534 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.5238962 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.607478425 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.446199886 seconds)
    (109/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.611981025 seconds)
    (110/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.064157463 seconds)
    (111/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.421766682 seconds)
    (112/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.183550272 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.406126452 seconds)
    (114/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.549018778 seconds)
    (115/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408744247 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.506540898 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.413477619 seconds)
    (118/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.651785826 seconds)
    (119/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.410322807 seconds)
    (120/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.495432985 seconds)
    (121/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.492149676 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.408502194 seconds)
    (123/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.049457165 seconds)
    (124/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.446757458 seconds)
    (125/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.515394668 seconds)
    (126/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.483689217 seconds)
    (127/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.481992708 seconds)
    (128/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.448309863 seconds)
    (129/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.487923707 seconds)
    (130/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.487893149 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.636836633 seconds)
    (132/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.524966023 seconds)
    (133/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.615259923 seconds)
    (134/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.455960823 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.388248914 seconds)
    (136/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.42824506 seconds)
    (137/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.412180863 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.458153994 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.414714417 seconds)
    (140/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.713922883 seconds)
    (141/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.486897327 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.558037657 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.410383737 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.457808695 seconds)
    (145/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.584551217 seconds)
    (146/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.557779883 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.610725819 seconds)
    (148/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.412685289 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.465841729 seconds)
    (150/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.611057258 seconds)
    (151/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.439431501 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.521976778 seconds)
    (153/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.767156359 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.536726628 seconds)
    (155/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.413890742 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.680236113 seconds)
    (157/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.413558176 seconds)
    (158/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.448857077 seconds)
    (159/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.494566442 seconds)
    (160/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.511549446 seconds)
    (161/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.628734753 seconds)
    (162/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.508379711 seconds)
    (163/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.434276012 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.50153701 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.427003908 seconds)
    (166/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.576470179 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.523808571 seconds)
    (168/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.0514643 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.531022508 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.597679468 seconds)
    (171/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.550229227 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.422472115 seconds)
    (173/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.441475257 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.459631962 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.410243724 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.491388023 seconds)
    (177/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.390369472 seconds)
    (178/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.456170423 seconds)
    (179/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.494834165 seconds)
    (180/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.48700835 seconds)
    (181/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.390064447 seconds)
    (182/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.446051447 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.404136952 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.466179332 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.596432358 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.512273577 seconds)
    (187/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.404196534 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.419506442 seconds)
    (189/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.510316293 seconds)
    (190/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.219200916 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.46731612 seconds)
    (192/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.583685844 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.135015997 seconds)
    (194/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.398136571 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.636454066 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.419271807 seconds)
    (197/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.412955988 seconds)
    (198/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.418537302 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.44396174 seconds)
    (200/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.444661758 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.517477339 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.406284471 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.447370593 seconds)
    (204/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.267290379 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.404507669 seconds)
    (206/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.496463168 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.421801728 seconds)
    (208/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.584324966 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.543270006 seconds)
    (210/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.547177579 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.45904455 seconds)
    (212/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.253683045 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.491546933 seconds)
    (214/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.470542924 seconds)
    (215/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416551523 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.582545938 seconds)
    (217/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.584095366 seconds)
    (218/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.43737149 seconds)
    (219/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.488878352 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.190732303 seconds)
    (221/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.478264918 seconds)
    (222/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.807173165 seconds)
    (223/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.547558314 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.414223702 seconds)
  done (took 386.349093212 seconds)
done (took 387.652165575 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.462237488 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.592411246 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.433813754 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.43448033 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459521358 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.41446738 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.454307949 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.422959433 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.419525734 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.419212181 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.413520223 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.42486536 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.436255896 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452529694 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.530971464 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.424196712 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.434337319 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.417847957 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.458924033 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.475986287 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459547354 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46107107 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.431189031 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.434809696 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46456042 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465220379 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.437803655 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.411369124 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.416556952 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.457863086 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.422188044 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.437893511 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.467416399 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.467980562 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460748122 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.419686547 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46071635 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.593626105 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.454043668 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.452609008 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.421535468 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.468644876 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.433132827 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.428574482 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.46916918 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.430284984 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465091185 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.541896182 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.423792011 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.415266143 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468828656 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.480460601 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.421898761 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.415954889 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.421521885 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.541754773 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421330973 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465324909 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.422772004 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464077009 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.533002717 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467070059 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.481241965 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466101961 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.422531942 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.441973547 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.420819147 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.478543419 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.418479545 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463857866 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463799708 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.425917299 seconds)
done (took 113.88634475 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.541784927 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.416651946 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.578405298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.419189777 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.585881072 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.565461076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.416718906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.417396227 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.416023658 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.211531543 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.416784443 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.417601407 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.409752128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.417016744 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.547003165 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.420241294 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.415661228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.114051853 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.420133122 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.557718321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.420373848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.418172565 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.418636251 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.219893408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.420378282 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.414055466 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.559600795 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420123286 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.114008437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.415364786 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.416103067 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.118029584 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.560519658 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.437624631 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.43082166 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.427677155 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.588762297 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.443806673 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.541148554 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.541073873 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.58155524 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.460357591 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.415607563 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.419354295 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.42253947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.422369355 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.418718126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.447629024 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.418445764 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419595341 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.115894597 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.432147896 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.429382531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.419964334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.419745191 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.440761966 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419535252 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.423186277 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.56706701 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.423585119 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.544713101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217220075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216029331 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.42359041 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.418178852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420378639 seconds)
  done (took 114.114012416 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.489018228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.500836899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.547759424 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.423603492 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.476346932 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.553036041 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.423841419 seconds)
  done (took 11.741148896 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429180035 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423333507 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472946192 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474833375 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.422551895 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.636137668 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423662005 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.435141021 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.421403213 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.499813455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423142746 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425189641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.429750865 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.420345122 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.472398931 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.435696173 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.540843772 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.425187763 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424300895 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.581209452 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422556903 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.43043811 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.497454807 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.437192058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426159729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.431712589 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.383759768 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425301487 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422134139 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.424996055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.421433447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.533176319 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426704524 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.421301056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421526622 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.587016974 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.424510723 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423465354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.425908138 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.424079098 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424343439 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.425543586 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.425294262 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422935284 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.425980142 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.450959145 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.426771171 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.426796179 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.425666131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426544598 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.499955046 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426925658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.422931877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.42296591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.50367499 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.432414371 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426799992 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.423516619 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426539027 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422906396 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.582724719 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47487391 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.42778965 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475375175 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427825687 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427980696 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426278472 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.427142916 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.520906687 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428278347 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.475819517 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.424812569 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.651569401 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.451423937 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.429892031 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.430259946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.430324349 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427268922 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.42382537 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.434439125 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.425004961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.4294409 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.434549293 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425550287 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424541303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.611474224 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.588223646 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.424721205 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.441283393 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.435647796 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.425848246 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.504088819 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.428600227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.426468995 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483623471 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.545430441 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.506323813 seconds)
  done (took 147.209055934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.441754048 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.44184426 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.434342857 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.457596671 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.432279975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.430604151 seconds)
  done (took 9.97112721 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.431494491 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.431555909 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.430838011 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.429260359 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.430363618 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.430278579 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.42933061 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.433816492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.43372123 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.430582474 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.429963824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.433723768 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.431367645 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.431932367 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.430920416 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.431074931 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430734701 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428176021 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.430837927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430718502 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.430204738 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.43026673 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430108914 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.433520514 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.435397272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.431232534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.451110148 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.431354181 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.431689514 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.440841303 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.455677219 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.430835616 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.433877882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.438267511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.436236866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.4349351 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436530655 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.435075362 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.429147138 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.43182473 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.435120924 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.432278726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.433259495 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.434604882 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.435263167 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.439522224 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.439512342 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453286543 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.433017986 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.435557921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.435171645 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.433171716 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431362299 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.434624873 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.435396535 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460392258 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.440064608 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.434044278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.432198595 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.436642166 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.436768148 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.433088114 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.436752304 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.438124509 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.432562253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.434847266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.438190093 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438764223 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433750233 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.434296742 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.436027987 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.431342203 seconds)
  done (took 105.635440267 seconds)
done (took 389.990359176 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.343653945 seconds)
  done (took 4.680097637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.699076682 seconds)
  done (took 4.039704721 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 27.430342081 seconds)
  done (took 28.775468497 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.524726209 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.550554958 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.439535869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.435535295 seconds)
  done (took 11.288650762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.909328844 seconds)
  done (took 4.246875556 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.432754844 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.427426167 seconds)
  done (took 6.199936099 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.846896154 seconds)
  done (took 4.185724527 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.991143917 seconds)
  done (took 4.336972695 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.43033747 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.439105326 seconds)
  done (took 6.215564665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.425538503 seconds)
  done (took 3.763902999 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 40.506635077 seconds)
  done (took 41.845704468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.437541586 seconds)
  done (took 3.778407328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.464401495 seconds)
  done (took 3.80233639 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.880569374 seconds)
  done (took 7.219144949 seconds)
done (took 135.712878529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.427374663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.426742388 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.428219912 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.427367765 seconds)
  done (took 11.048359511 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.488728404 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.489140324 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.489811271 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.488878574 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.487365978 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.488750519 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.462465332 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.461763303 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.487756254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.488990183 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.490334264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.488181363 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.48885667 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.462987868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.488331454 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.490099212 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.489034994 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.489335109 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.463617878 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.49027305 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.43875532 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.489720258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.489338325 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.439390018 seconds)
  done (took 36.870521712 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.936329026 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.512259788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.593652329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.493740157 seconds)
  done (took 7.876124586 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.516125884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.516575694 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.534744157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.571022205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.584298254 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.542778523 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.465028044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.460548401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.446260106 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.517854011 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.567315378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.508685475 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.600808688 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.438290994 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.646945857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.438684661 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.438996046 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.516307906 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.568498247 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.585832312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.440229293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.515899542 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.520436169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.508534698 seconds)
  done (took 37.793095573 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.446241846 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.451276685 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.438657722 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.45379576 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.438556289 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.438112709 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.439727882 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.444677983 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.437028656 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.438427978 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.438760909 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.452758981 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.442457823 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.438453357 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.446263605 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.440353522 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.445160827 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.44257548 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.439764385 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.446557602 seconds)
  done (took 30.202467784 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.430175708 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.432247801 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.785566151 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.693295919 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.434640533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.431809001 seconds)
  done (took 14.550643693 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.530208013 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.712899853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.441554127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.893067913 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.973208385 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.440642714 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.442944059 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.74240499 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.164468601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.151693182 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.512713968 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.528026296 seconds)
  done (took 21.877578348 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.437287792 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.433879153 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.437455077 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.452226029 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.510712398 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.446678865 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.44925539 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.434978132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.514466204 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.515540604 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.446648089 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.512930165 seconds)
  done (took 22.938128856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53181346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434660335 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435813739 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451746825 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435794055 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287510013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520913192 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2732808 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.467031708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708707287 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451504002 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534499709 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695998367 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438121079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438913083 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445167416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672501433 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047297694 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439311665 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434921936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492835863 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44917579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455727043 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7117798 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441248942 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436639673 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.700072127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436917053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804442255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457049283 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449037844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437166571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71286563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213776956 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564914729 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710601122 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442529272 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439682587 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.452446737 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.439914603 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471479189 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440080893 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450017469 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439056334 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437626139 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449708268 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288859856 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.473018659 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.435357588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438890651 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779464683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540847166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.444443466 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438710585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454030456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440658336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.44373558 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543521409 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022813061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439113897 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474156485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.442833274 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461920752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441426672 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190747954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.448069963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.444102896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444506199 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440430259 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439875192 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480136979 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440636651 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.464421171 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440917789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293529495 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442097821 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442961383 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10837654 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446409577 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.443578864 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676144369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440773973 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44060415 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.439092463 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440347337 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311156492 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451539894 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.426961507 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464021478 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281294873 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74470138 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465649253 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472817734 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667570934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.42696705 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441181028 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.459494762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443497777 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464573488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292017081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468063651 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.44850699 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704698447 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.656658798 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447505456 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453083784 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04255024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474509056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.462111986 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446055734 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721729397 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.15565459 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.462667888 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456108997 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460774013 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442029015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352341211 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447798929 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.549277346 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446638863 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757997078 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.426299539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446344953 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512464117 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446737765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442941439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443063206 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446655617 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444635525 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.710668596 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474461437 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.460061991 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.444162255 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443679847 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.441589119 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475040697 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.446985671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676691291 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448318004 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724283827 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44382764 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44503393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445476946 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.672004568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.445524715 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.781651089 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711236821 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44703822 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449330025 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461178727 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465880354 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550869831 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468798806 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.449510018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.707364279 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.450790659 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.451084682 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445316595 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44780088 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449514497 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.452591106 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454284131 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159703347 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42132369 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45374468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342105406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.461167339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515077248 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452870014 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722840259 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.45106916 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454453162 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.453326619 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.452496452 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678780998 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457934257 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.446569573 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527981693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.008177659 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184652538 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462024999 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.448122881 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.444018922 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.444303046 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447707992 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447681289 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448650466 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722178344 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467854688 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471764869 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165869175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449173268 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448257107 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.455147321 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.462028562 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.454836103 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449447054 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.448920974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465449341 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449766765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.461618321 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594228403 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.46376927 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448925032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.967192184 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45523879 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448446816 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44873092 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48300614 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449447701 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354078149 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716764333 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457494581 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779622968 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450266046 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.467401858 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.448756534 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456116037 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45135457 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.456220708 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459677734 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.462783132 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449970116 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452996784 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02716947 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321921852 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113617367 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45311079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.454826796 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450589576 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252215073 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474929254 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450435049 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733281409 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249547373 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474302063 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010688874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47794605 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384329638 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782043725 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687712121 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451108986 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.469804474 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783825522 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6658989 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487314468 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451987649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4503229 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.437187218 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08934538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493234344 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53147134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252495835 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482770965 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453954096 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.500847622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.467805489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971512323 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479806375 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451406873 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452365948 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451459855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357622996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459564808 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450250098 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184729697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472833418 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.041170685 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479734164 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.731851816 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470918038 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.460299807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.469181792 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.470737402 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.715554743 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78711766 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454641944 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472223973 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118793492 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.325230447 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.460774908 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45557435 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36177604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454926429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820841627 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.458155929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451982338 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47970081 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454889164 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453597472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.452018936 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459755168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428172823 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066205059 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.458175177 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468270852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456025935 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455877579 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714820365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.471525691 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172749679 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68899077 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457303718 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479445941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.460401365 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468172361 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.443495874 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456591699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454542361 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471508899 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683107569 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477401567 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.444310503 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458920206 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669121943 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.457996272 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456047558 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764197975 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.459078716 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.471432925 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325037365 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491245308 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.470988761 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459035203 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476152939 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478555917 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528119867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735427021 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.474566869 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.46968246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976780552 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485141564 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460024958 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.472314326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554899967 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457820931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.469937788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.232156072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178005534 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325282461 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179868448 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805788071 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46425259 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466776659 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457580867 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622029303 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458485669 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73513285 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457714369 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.462364504 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481736906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463562723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459101374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67374359 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735088104 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459107565 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458245862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483457463 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.458547425 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471281331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.672264891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078426702 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134358516 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461096923 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458427284 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312482321 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761954967 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459313582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459444929 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460341153 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.47523503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.480742513 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.466644023 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464190705 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605304925 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803748193 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258898724 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.498756231 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.486660323 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.97763443 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461399259 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.719820686 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474605279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.742011893 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184482453 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313077321 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730780135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532435237 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739999434 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.463653317 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624274239 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.473306466 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460553605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460155557 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461678429 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.458743858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473172865 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187053722 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73128397 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.466862873 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.474193407 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494057354 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.473152962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687319109 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34447973 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690791709 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473699173 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468058351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462730574 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186537742 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808512835 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468032465 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.46801208 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770230913 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46562796 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486466581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.980874843 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.460701302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134635209 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.440632439 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487172713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463228965 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318295829 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185999175 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.480689195 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079385505 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465018815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463006288 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759153951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.47139917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46362151 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741004834 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.46893526 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464190961 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745921229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.183247599 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.408180854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.479682776 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470711734 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.466712795 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46423582 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468404526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465329974 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475157662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.001499043 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492508877 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464932017 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477084517 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.480506981 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465604337 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.500514824 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465413484 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.472978979 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.466071205 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.466475006 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467280088 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569662199 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112488769 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48929335 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.153553313 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.79379458 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726520123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466501666 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.455001412 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.469854599 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466913157 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466607669 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46673017 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467167646 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139607671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.468188937 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.478737921 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471003915 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.466760216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680496586 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48612201 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749245372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471332118 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484033514 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.452870064 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467641838 seconds)
  done (took 1023.432339774 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.552454527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.490083066 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.493631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.538305929 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.479262215 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516974985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.546310577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575836498 seconds)
  done (took 21.567938167 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.467476204 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.477418266 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.484623922 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.478418907 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.467747107 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.031890485 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.503085874 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.481438237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.486337298 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.479904658 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.48478784 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.455402454 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.500741237 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.476790808 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.474155171 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.480512599 seconds)
  done (took 34.613343442 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.915346776 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.826185369 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.359444919 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.543184017 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.502939512 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.486867137 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.970509169 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.498300329 seconds)
  done (took 29.478804265 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.481511064 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.482129976 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.482686834 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.481956436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.482517324 seconds)
  done (took 8.787532454 seconds)
done (took 1302.372975989 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.474162057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.477047853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.473973366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.476693172 seconds)
  done (took 7.277945239 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.457409234 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.458105593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.459942128 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.471761167 seconds)
  done (took 10.223497892 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.363120861 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.257979156 seconds)
  done (took 5.997787833 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.011209238 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.013943267 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.000714172 seconds)
  done (took 7.402382163 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.805971271 seconds)
  done (took 3.182980075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.421893589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.471316591 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.223752567 seconds)
  done (took 8.494648609 seconds)
done (took 43.953724142 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.470665639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.72512221 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.629970408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.477409035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.633748517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.631618584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.330115856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.48250237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.475078831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.471807223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.470717694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.634680987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.241480035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.726829746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.240911177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.819118106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6334957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.476352063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471301294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.477872688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.329529177 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.47892269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.482223816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.483753826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.633708067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.619541547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.479073299 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.820756371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.473645589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.484794621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.62039328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.475441753 seconds)
  done (took 86.283077618 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.47217794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.47298225 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.4740676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.495166685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.473754327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.47449046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.495968692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498343526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497660857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.473386074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.473296899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.472325786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.475313151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.497274559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.476315149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500523529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.48500495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.473937554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.474209497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.481228235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.474176668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.494354115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.495252928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.473102487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498450801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.474209608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.49846851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.474362303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.498064741 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.479180568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.475319373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493960944 seconds)
  done (took 80.847983182 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473360796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.474839675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.474621772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511457033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.474060178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.516871888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.473939176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.475435429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.478013766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.475861005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.487219716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.473803155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.499107297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.475103796 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.478406677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.475193976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.486723748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.481444915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.475074164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.496145692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.476391937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.474855898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.47589811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475044435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.484158656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47781851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.496690571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.513265501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.47574294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475535027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.499754628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.503789752 seconds)
  done (took 80.868268925 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.757502299 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.48394411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.483617255 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.478409596 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.485643356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.484270908 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.478675253 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.76281199 seconds)
  done (took 15.798357214 seconds)
done (took 265.173002478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.48567843 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.089776247 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.527205974 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.475508124 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.506467083 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.505890289 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.736139326 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.525334338 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.737657311 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.498249359 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.52935545 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.476806025 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.490375321 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.645494392 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.440531518 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.495603992 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.486495828 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.477103724 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.179716622 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.79222348 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.504709807 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.479223459 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.445007807 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.513054573 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.470275034 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.582693819 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.604138877 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.718202024 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.660413237 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.580358445 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.11770396 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.48756659 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.477246282 seconds)
  done (took 69.126969935 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.48638896 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.605782829 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.486721688 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.487617286 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.608400337 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.48661926 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.48609054 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.487914167 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.487471541 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.487614131 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.486205439 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.488673329 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.487403057 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.534947187 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.613280744 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.507031376 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.488041009 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.603685786 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.487951475 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.481727031 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.532482424 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.489040129 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.490976448 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.536726712 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.489357929 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.488951126 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.603090108 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.489639384 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.486041702 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.602122364 seconds)
  done (took 46.885580736 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.489386117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.2033873 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.364290587 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.495898429 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.489282385 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.494839914 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.85440172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.490167944 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.492165339 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.493134121 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.105703314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.492673913 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.528790819 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.399596 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.493433899 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.490434168 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.491737182 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.49086336 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.20826348 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500141847 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.879407184 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.491453902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.855820532 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.501168237 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518896063 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.491485503 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.495437488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.454736296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.492268334 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.104095231 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.48976169 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.851821518 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.394656504 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.378095913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.490140963 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.493810232 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.492281015 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106095323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.49372979 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.492241222 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.85567967 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.493509327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.370315348 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.232907328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.514765452 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.491008269 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.473040396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.10350083 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.802240052 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.49857975 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.408219637 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.49625013 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.494333434 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.494555784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.801419606 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.494213427 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.492224447 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.490269957 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.498399111 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.85794435 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.493694341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.495895498 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.207956957 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.494134339 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.203916615 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495885337 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.502601966 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.517423044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.38289339 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.496960822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.261442365 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.515876676 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.492995135 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.105462315 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.203974456 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.485504788 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.495852452 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.213712711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.429557714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.856829791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.498189461 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.434779845 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.860550661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.498340478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.496824684 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.498162898 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.494378718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.577129158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.856747779 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.189864537 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.254979287 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.509791733 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.861372238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.503341135 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.495806751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.488371214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.495009839 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.495669889 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.375493384 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.26713435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.51840112 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.503872708 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.271760456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.520863332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863736717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.50160888 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.390563756 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.498117345 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.577981861 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.496036461 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.5034283 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.524174336 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.862382427 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.499591962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.49750504 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.241860916 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.146345482 seconds)
  done (took 212.715399045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.490454262 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.510881308 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.488574674 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.511716372 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.488402347 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.498797849 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.490827843 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.489664296 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.497530761 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.48963281 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.529836372 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.49971161 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.497688978 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.490248891 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.49009714 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.490036129 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.490908835 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.513038422 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.491559048 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.490646242 seconds)
  done (took 47.335553186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.49742013 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.206092486 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.178656103 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.499598819 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.495321557 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.498739289 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.568601633 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.496986732 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.496174349 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.876195402 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.720219598 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.500493944 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.495539949 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.495709935 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.179696732 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.489452649 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.875913883 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.206913296 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.499679386 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.206311074 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.48890205 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.498509659 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.498211077 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.207476262 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.877653919 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.865324531 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.572452271 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.210308346 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.497340197 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.497784202 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.209581512 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.500634443 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.499906171 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.202631885 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.521019219 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.514723823 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.497310221 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.573003314 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.57426748 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.881175115 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.493065228 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.867297896 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.511050942 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.688846861 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.501321041 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.489901539 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.208475358 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.52272784 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.490993652 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.499987743 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.507484594 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.184608483 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.523103049 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.183379035 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.519553362 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.501664802 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.212292838 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.183685205 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.20686174 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.728945826 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.505502158 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.868200441 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.499558034 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.213476573 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.524239357 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.50234808 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.502650954 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.728296988 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.234753656 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.869791027 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.881692398 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.882828997 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.502530627 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.57558184 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.520766177 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.50305917 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.571857755 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.938258177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.882834474 seconds)
  done (took 139.805084589 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.823926704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.630447765 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.990089886 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.191406761 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.573558722 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.637286918 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.628542934 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.795865692 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.5078098 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.588657023 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.284870864 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.615630661 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.326751174 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.586581667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.609755974 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.667435524 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970341276 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.497621423 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.229498062 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.276618295 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.57595006 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.620327653 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.105080591 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.733350586 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.51849516 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.093300204 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.528266799 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.279070926 seconds)
  done (took 58.287736958 seconds)
done (took 575.536658685 seconds)
SAVING RESULT...
DONE!
