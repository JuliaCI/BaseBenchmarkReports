cset: moving following pidspec: 1732
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.5632213 seconds)
loading group "string"... done (took 0.522560489 seconds)
loading group "linalg"... done (took 9.387599469 seconds)
loading group "parallel"... done (took 0.172193264 seconds)
loading group "find"... done (took 4.483969062 seconds)
loading group "tuple"... done (took 2.066091491 seconds)
loading group "dates"... done (took 1.394867378 seconds)
loading group "micro"... done (took 0.198840062 seconds)
loading group "io"... done (took 0.520683482 seconds)
loading group "scalar"... done (took 57.574725739 seconds)
loading group "sparse"... done (took 13.740841054 seconds)
loading group "broadcast"... done (took 1.715857285 seconds)
loading group "union"... done (took 10.561049792 seconds)
loading group "simd"... done (took 3.552333503 seconds)
loading group "random"... done (took 13.244718602 seconds)
loading group "problem"... done (took 2.253856407 seconds)
loading group "array"... done (took 24.245004494 seconds)
loading group "misc"... done (took 1.160007701 seconds)
loading group "sort"... done (took 3.686075968 seconds)
loading group "collection"... done (took 21.83468615 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.687948252 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148032862 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.25871222 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.20749376 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279191368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167922085 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158984492 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172317879 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.658699392 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212724929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138577215 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418577593 seconds)
done (took 6.283161223 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262932527 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241450345 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18818996 seconds)
  done (took 1.146757777 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078656505 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158302997 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110454598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096825617 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09567712 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111648436 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09501396 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110406324 seconds)
  done (took 1.501165719 seconds)
done (took 3.709938421 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.553482734 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.891204733 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513701211 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181402248 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317553489 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306063294 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266697925 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221444767 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091911122 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085048807 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177396941 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.442696556 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.38768226 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.973757649 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068138064 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094877922 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.155861794 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.791646136 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081080605 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108975068 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530151674 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212743816 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116379414 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106026428 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187009135 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136259564 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141469553 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103100214 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673007573 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133720293 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214086676 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084694489 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139458125 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167590553 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214122304 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111859211 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67962159 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205715205 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097635087 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101758877 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682891581 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119121267 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207533601 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107670581 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068705312 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164471022 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119256976 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080238202 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094809935 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103456943 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159271786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.442337896 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108022527 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192690794 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096067307 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69484016 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099230183 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275771082 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128778895 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094289977 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092946911 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089099498 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16092696 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095333654 seconds)
  done (took 20.299988939 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169777401 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186474084 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079084184 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158510286 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125210857 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099772432 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086565457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080870466 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128521468 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17937299 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.145095806 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.19400389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078167287 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092096191 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169727497 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230802004 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127674411 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105047691 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091031008 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108972509 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124947102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113654123 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093975577 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092841788 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17234313 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206487299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111793319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124261369 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091748669 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098498628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144593746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145679012 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095138637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091006819 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18993249 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107994139 seconds)
  done (took 5.382527532 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244427729 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106828145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250739398 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.136229161 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199320092 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.136448662 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189698647 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178483801 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294537007 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.218170646 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183647186 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130318801 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097352364 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081975942 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080804039 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097636558 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354059958 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151739711 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193756773 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187688115 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099725611 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100467916 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362573515 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102445412 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089184224 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113195506 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065386343 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227565421 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096269503 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.069233312 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084808493 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124071329 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115702305 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216073903 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126859293 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121178669 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115493243 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087451014 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223374193 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120143168 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081350738 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116356344 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134706045 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11745458 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111950685 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12768127 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219950041 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08973867 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112499198 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.041480721 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198010753 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146017511 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104275621 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273472127 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129678251 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102072842 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112877234 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.785500505 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11695703 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083941205 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100442823 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080371566 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096918335 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09927591 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.458920842 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128603898 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.512386825 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.101046243 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.139637454 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116591815 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121249429 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088594029 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089509236 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128886567 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087301495 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178099449 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079684128 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.106767455 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082101616 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084839233 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111096965 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113545738 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102848885 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082481349 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149114758 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114445776 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10921671 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126191252 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092466226 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087295244 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130556963 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083149869 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107548452 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168713481 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119712345 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113044842 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118873265 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145975143 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090507615 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.256454856 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099757461 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123558946 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100249892 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115163042 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117682594 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082774538 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085478075 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098718544 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082932077 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149161723 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.106090874 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082938294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090450832 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11235445 seconds)
  done (took 29.010629096 seconds)
done (took 55.411616803 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.420219211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082084437 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081499538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102301531 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082545814 seconds)
  done (took 1.568656857 seconds)
done (took 2.345307869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314252147 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200888195 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088152968 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192147533 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087507903 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19944826 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185508307 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101901139 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205786533 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086535218 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194905058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088541846 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106829245 seconds)
  done (took 2.849702736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104240818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107581488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103290433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121991857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086764423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103563377 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120929152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109701473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101612522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114743518 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087102034 seconds)
  done (took 1.933296996 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101357408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105301594 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092652487 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118600668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086710113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10006595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117205798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107163687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100191422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114352075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087555817 seconds)
  done (took 1.909561037 seconds)
done (took 7.465938611 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.217746866 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.909115339 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192074728 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243294696 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353122663 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297800623 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611479805 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202996367 seconds)
  done (took 15.935283624 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.127179895 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.191874018 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098629396 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09301286 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115255504 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096380896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091863852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.117175201 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09205647 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09200956 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097885267 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112591388 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092867916 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091709819 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108639163 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096431859 seconds)
  done (took 2.552981059 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144607701 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143516205 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099711501 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100164459 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113965303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099403032 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103748639 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118041015 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094966282 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096728656 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120479833 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099128497 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097781014 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112043898 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099604594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119082868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110938495 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099986275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117882259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116991921 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099935825 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097844361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115002222 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100309212 seconds)
  done (took 3.482686634 seconds)
done (took 22.751745125 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149816724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104946177 seconds)
  done (took 1.035198816 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166545818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185870461 seconds)
  done (took 1.13971558 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112357615 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092133579 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138528058 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104909955 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092556836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108626968 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117308357 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109887655 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092535899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092349203 seconds)
  done (took 1.854334932 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095337586 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096686604 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12360975 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.17060267 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119653499 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095222591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096466017 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113794227 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098873342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091028219 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116026478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110939885 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096494373 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129285172 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097264593 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113725568 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101699564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095832446 seconds)
  done (took 2.7546793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091783213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093090131 seconds)
  done (took 0.978372644 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094560784 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0922053 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093960807 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111796466 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091912895 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091313502 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108644424 seconds)
  done (took 1.477880584 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524221772 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236136485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370797296 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072200208 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123833181 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.447460756 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105192221 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070960553 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092461463 seconds)
  done (took 2.871753148 seconds)
done (took 12.901099509 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091647601 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.243871668 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637892918 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114213569 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092782495 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162455167 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319532002 seconds)
done (took 2.45826925 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348742354 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164295022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084110943 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092187099 seconds)
  done (took 1.481663341 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083410536 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099751946 seconds)
  done (took 0.986668882 seconds)
done (took 3.271554624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091002307 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090670926 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.141622182 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090957284 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090323043 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090028396 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.110223657 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090355812 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090014789 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109853675 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090037873 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091059577 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089775351 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10963373 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091089158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090199567 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10644205 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091449508 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089903813 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089200899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107723718 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090611351 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089631451 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106195733 seconds)
  done (took 3.160538541 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112707152 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09228881 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11215423 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095304017 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095297344 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112002648 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096794332 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093142548 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113199943 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092195778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095999843 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112505199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092782468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096209399 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10984836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095289056 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095698616 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091498514 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110088669 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095816267 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093301492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110732394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09648636 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094778419 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112089073 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095042204 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092663922 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109888196 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096639804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094998336 seconds)
  done (took 3.805242535 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097910465 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087842581 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089475666 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117338871 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087566259 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091542513 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105589361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091986552 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092174047 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08979213 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110799893 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092336951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090394547 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110215949 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092768558 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094341932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118660531 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091964907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090895704 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091361725 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112408827 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090542498 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090941905 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108789919 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091979102 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087671053 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089993125 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108476832 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093371913 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090523103 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110835944 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094510612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091284143 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118764774 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09367244 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091575073 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.113716414 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088759492 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092222432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088139428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106581744 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091331569 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09037212 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114669901 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091815156 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09159711 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090661112 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110843047 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092165633 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093426843 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106208967 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091075962 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092798571 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091214415 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.113231823 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089386686 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092809914 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10624798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092735043 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090094255 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105777858 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089439715 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095360669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091394058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124134872 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098188916 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09021068 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110911998 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092803379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096714589 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111918216 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101722425 seconds)
  done (took 7.835691986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114554084 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100218631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111113127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094183213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092250489 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090916875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1146098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092455349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092765005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116455988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091552462 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092380173 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110621359 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09321082 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091901332 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111394465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098268803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091885282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090831236 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111835311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092556971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095824846 seconds)
  done (took 3.003602173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238621108 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098470498 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13985246 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123283948 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109812565 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123228979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097669986 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098555125 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113629436 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102047505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10182726 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11460683 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110988651 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119351016 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102146884 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101580523 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113787882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102417547 seconds)
  done (took 2.926383277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105208769 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093316642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155362757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094604499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094095067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112139906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099333044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112180633 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113536644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094547694 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10097466 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111931036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094159711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094597162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112404049 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093668395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09472954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11179729 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100786286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098962137 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117263821 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101063098 seconds)
  done (took 3.120805203 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110103949 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09421371 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129958926 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097547332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092597808 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111948288 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10028084 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09330007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119708962 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093678075 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094154767 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092937868 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128004306 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093953622 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098341862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111799437 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09481884 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093889607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112514532 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093263222 seconds)
  done (took 2.871366045 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195004815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12746133 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110538213 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11711114 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129029038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111031173 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136557137 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110425812 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108946986 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138162334 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112588887 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108314408 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135947427 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113886965 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127243249 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1188755 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116415222 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136160723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108691217 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127873059 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121435362 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109697401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136446608 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109917955 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127837069 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109740774 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109275215 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132455955 seconds)
  done (took 4.263903988 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093423148 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09195085 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0916926 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110158087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092633006 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092235778 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091700129 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111266025 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091800293 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092218484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110588347 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092511879 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092819919 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090931135 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11191515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092451391 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092704517 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110596339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091940093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092449367 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091911213 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111167228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092295354 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092076012 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110176458 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092932459 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092021509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091247776 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111392948 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092398812 seconds)
  done (took 3.734758468 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104952111 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102521738 seconds)
  done (took 1.030785227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10006459 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106187067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092070168 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111625377 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099536749 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093263858 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120268566 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099342839 seconds)
  done (took 1.645982884 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167865182 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191622152 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097559913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12462231 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170779562 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183243763 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129562337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119441817 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09279405 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084895209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184301605 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084916168 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112278055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091542036 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093831296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12090749 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094954932 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101676172 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11942879 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095520797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098368144 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117482337 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096393487 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102462377 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108551025 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096266046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096462493 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124556661 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090807393 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094205762 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110689696 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095041223 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096665294 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117108657 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095450445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.191757459 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101535182 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088871056 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113940162 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099836561 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125187908 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113283032 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097190569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091863142 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115137668 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099256165 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097999708 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112671822 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087228942 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089841455 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.114141675 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090442034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093456359 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093606605 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112723578 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100458197 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095845662 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109329175 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090367117 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088466211 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111533043 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091147762 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094941337 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116221798 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096408336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093516675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112250704 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094132921 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0942857 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112944744 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094092724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108438822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112876161 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099501672 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09776292 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113797969 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091720375 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099030404 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112027625 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09573411 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097580014 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14201849 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096122198 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08958238 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109078588 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101454418 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095651557 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115770222 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087209575 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102166894 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113492357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095266976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08726372 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09140595 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108855409 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097951201 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085819749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114217141 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093028014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09831119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118150341 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093797439 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094930391 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117432532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100803407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09311283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.179472395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091624414 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108649137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097443007 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099365346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087322679 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113955526 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094253196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090749437 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110719167 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099592401 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09394001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115164276 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098892943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095866599 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114823508 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096759679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093531551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109383681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100048101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103127408 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114234038 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09753724 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096119319 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0950534 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113555052 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099961236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090312841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118880975 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092322615 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093777295 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114463822 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09957364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094057217 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108831694 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093693258 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095313332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112287257 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09884383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095583571 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109266612 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08789044 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094621338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109186882 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095709056 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103940865 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108627709 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097131591 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090800339 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102408006 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.111689479 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098945264 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095768992 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118553281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100440498 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086743439 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113331283 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097611025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094978139 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110457009 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096553808 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094650499 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11998301 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088319674 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098549574 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085594468 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.11283963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099635315 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094937345 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117028198 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091285367 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131612603 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126346789 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100784704 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093309678 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114425876 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098585615 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094103557 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117896024 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099902366 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098896719 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111406013 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093964561 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100101429 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11004253 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098201651 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092893653 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114157879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088701489 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09667692 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087349995 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118310957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097062586 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099769398 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119202144 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097740366 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093667092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122920907 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092379811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099044911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108177979 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100863029 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105161736 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120176137 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101719741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096360113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111653935 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09696943 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103119029 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097456299 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.1169947 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096903579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088056295 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108729371 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101187193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098138776 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11077553 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097353021 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098885966 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116683142 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095106968 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087427309 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118485734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10067955 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102078281 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114355026 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093010523 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09287897 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121316101 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090008198 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092771308 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116373614 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101596987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095376017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095008994 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118336227 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100724386 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098468582 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116665388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093402813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10271033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113187567 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095592261 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091536201 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117900728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090679313 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097565186 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095110305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112730722 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091366144 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098001829 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121443591 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09968287 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093698048 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120055834 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102412747 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100930656 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114000408 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.112137631 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090251973 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107440688 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092955066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088113893 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115997825 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09201253 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100269593 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093604625 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115066818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099796579 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09660662 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113542062 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101437931 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125269424 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090280327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088594953 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092605753 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116200303 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092193751 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090932726 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117050666 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096835256 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099179121 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118310571 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093296053 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095744693 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121640747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093213818 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101520195 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120101271 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10328125 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091704408 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118894328 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093451349 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099354221 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109072237 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096141468 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094264667 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113772862 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093685692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093758183 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09092885 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109883525 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092159782 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100622475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114694046 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100972782 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095231967 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113757417 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093460501 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091193088 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121726493 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095781225 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103985977 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115294294 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090534962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089592813 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099697057 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115950786 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102663915 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091049356 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119463009 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101998221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098789981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.11607914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106021335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103020482 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121951282 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102594389 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088961144 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112416322 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100710706 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095600349 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11833811 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098824972 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089806604 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11777003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10184216 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097339038 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093325837 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109743883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097487165 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101659159 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119103906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100599648 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09735226 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115830483 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091962283 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098920394 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120123524 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097855389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102726833 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115730786 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101382493 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092496243 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101675259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117835725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090807856 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089014586 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112958894 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103482651 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08939573 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120968152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102861963 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093295822 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114898694 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102361652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09264058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097810293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121274995 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094895826 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105251295 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11811475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094499776 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100162526 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.121129909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090580844 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09402559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115803607 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103670306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093931883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.12065428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098137549 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101020923 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118144832 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10213243 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101911963 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101610024 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110547078 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103448903 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099557081 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.119019168 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094108815 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094154552 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110029349 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096530487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102311934 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113203658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10616971 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101813496 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114122925 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095199979 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101876654 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114731326 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103691026 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094006085 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09681251 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111256703 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098124815 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094445149 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123827041 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09353689 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09000182 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121647131 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102019657 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100300147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119375306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103528412 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090076817 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109580149 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099318524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093558124 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125134943 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100960739 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0945904 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114224189 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099815729 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09840068 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102266864 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111148622 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093796918 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096695973 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118280338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095935859 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09123898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121164262 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095959434 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097792077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115275676 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091173599 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095352306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122280276 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096884813 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092251849 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113910807 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103992531 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095543004 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093056342 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112082557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102353239 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096815024 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125662858 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093941599 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096690207 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115830087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098568842 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102928038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115351515 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097497477 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095143469 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122654905 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102541038 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089828305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11433695 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106410473 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10144496 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118919801 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099603847 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095976319 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123378098 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104947953 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100065664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089127033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112314078 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096453749 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090139417 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119191672 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102309834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094978335 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115216725 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101826339 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101338644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118924671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100454204 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090328205 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103542746 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115649448 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099324478 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089784463 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.111738068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099819762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102040578 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115546703 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097384618 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098858826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120665548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092348723 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095414245 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120158392 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102116169 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101945376 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096302147 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.117883678 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102404991 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105676548 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119361197 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097055098 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103973768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.125622578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09779358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095994724 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120805983 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102702913 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099857304 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12502519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.096089705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096646858 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123866173 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105179582 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106470948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116254443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092394574 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10134574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.115300952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092913354 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101049173 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124622897 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105074902 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096778281 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095108845 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127000222 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102766742 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116850134 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096354967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095834223 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101303586 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117142375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100927481 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092879413 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126338671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104446207 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103454196 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12634854 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091727756 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101848724 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120189315 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104866204 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098123163 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112716779 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093322041 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10003695 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103440708 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124427702 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102151934 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100632703 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122591877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099222169 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09661067 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114603978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104902715 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102450971 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119192047 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10054139 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096920949 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118338837 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099332849 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104698439 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103695627 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119483515 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107852057 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103294727 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117473391 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095425841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096894582 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.121331332 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098924545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101908058 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115524239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093416864 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102880749 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124209484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098391876 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105361117 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104647334 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.118919972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09967258 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104887066 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.124769897 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099745655 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098638875 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120937448 seconds)
  done (took 62.997659503 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147835109 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105126188 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12050735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099319126 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115846995 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12238411 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099384536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101762472 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122700128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109240398 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099384743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120087035 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115516404 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142053725 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118086701 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108301 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120994232 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102505564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100314591 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121107707 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114640761 seconds)
  done (took 3.277712287 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116915285 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113252686 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131781691 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113727228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10616208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132897868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111531637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131314731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11398888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106910349 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135002925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110642684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127914401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108332421 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108325879 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129547498 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114637513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105865587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132898543 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110412672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128867606 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111617422 seconds)
  done (took 3.477092921 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132373953 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103225841 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097190607 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121428263 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104224955 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099134818 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123974644 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101828002 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108497008 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115911092 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092813315 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095676784 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098117514 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121681852 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094550084 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099923073 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129491758 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104982171 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104767113 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119664598 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092209332 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100662568 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100751627 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113086419 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106084014 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105727475 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120809095 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104757456 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090323074 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124837185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101866864 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094664351 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089998478 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112329353 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092286331 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103564432 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123446352 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101976973 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100758479 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091778766 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122671469 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104648798 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091310524 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121510186 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100985197 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093705188 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.123663011 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101680264 seconds)
  done (took 5.977886317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129715988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167276138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.342311512 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138889903 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137219331 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109232582 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101885634 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138266056 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101174853 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126149535 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116569568 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113446934 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127634511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10662543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102570399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12755732 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105905186 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103595516 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129350453 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10370547 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128889992 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106356438 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113796963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134831383 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1067556 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10326173 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124613416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10799646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112056601 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130019951 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107620746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106950372 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136174554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104043764 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123567055 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105957726 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115199428 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125514877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104827325 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103055699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125303715 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107539609 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105241758 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135853168 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10595314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105533298 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125894177 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10192448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111950885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12662871 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110336891 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135318093 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107112128 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105243307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127178597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115031407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104429086 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124005142 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107629904 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112749964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124073661 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106704525 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113774731 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126182218 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110244704 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133421585 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107549599 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106739174 seconds)
  done (took 9.175465646 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134708632 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107477295 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137248397 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116766604 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10664783 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129923264 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109012356 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106829481 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130416968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112673322 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128286791 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227774573 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128056539 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112956879 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130083674 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109758131 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109354122 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129435234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10873227 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107476164 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129997176 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117168275 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108217438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137566636 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11875373 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124941783 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109742349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107590829 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13703578 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108683682 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118016978 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.13054054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108653066 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13647296 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121551385 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107765572 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12441188 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10894443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108294937 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130068671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105327813 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117056846 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130107584 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105530635 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108265421 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131760129 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116469486 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139762392 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114356481 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112983605 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130994509 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117335788 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128393797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109319208 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116752095 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145199682 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11675192 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13732133 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109920298 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116636271 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137958331 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122809334 seconds)
  done (took 8.435626035 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102566134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101135975 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100357942 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121851939 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103098611 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101030571 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100135985 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123009072 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102084941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10132889 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123656855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101266344 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100686925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100537815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123470859 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101585253 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100749864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122578933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10191762 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100909258 seconds)
  done (took 3.022526033 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11061459 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118726284 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123676465 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110401169 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104451384 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130252581 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104016671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103592099 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102111102 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125945153 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111748027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132694586 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104403857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109718559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132627537 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109374942 seconds)
  done (took 2.725351129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12208647 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119471982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213999062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105175673 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127019511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110692682 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103303698 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128983681 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104477042 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109219661 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130641929 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107393759 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103971295 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125931412 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104861884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106362436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101731227 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130825958 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104914145 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217471234 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108175143 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105402571 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129080914 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10827322 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104542599 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131737197 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110243817 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102376047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128333803 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104241106 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104874862 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133889698 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104337807 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110032855 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127726566 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10560349 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103936594 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125806814 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10818609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104724822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128041343 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107952203 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104561386 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12772522 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104615689 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106440003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102026078 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132918057 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106438089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105968174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12697415 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109443186 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108452469 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134299283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112015721 seconds)
  done (took 7.352120441 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115184547 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105184669 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136475111 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102919378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105196436 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104248596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127950157 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106397328 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104069675 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125080776 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106752663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105531032 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127706585 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106354419 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105891795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125934732 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102801008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106118419 seconds)
  done (took 2.917587754 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109889354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104363187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107693493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125852766 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104400907 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10312389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124861641 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104363737 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102889061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126330177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105228484 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10476056 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103786407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125722044 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104716181 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103506376 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12717514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104012995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103467366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123995723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105050245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103739703 seconds)
  done (took 3.327951161 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115877684 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215389083 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111224435 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.22459934 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101548374 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123700533 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112104777 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100522095 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141210661 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100827144 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099757285 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122541567 seconds)
  done (took 2.470419052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132243177 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141439187 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126848988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105834299 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113284232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131216325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11008353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108499899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139547551 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119992434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131888042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118152112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116955982 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140562527 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113614079 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135865995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109741006 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109658171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127957454 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124596324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10909182 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13882195 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110020585 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129712209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110611157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11679583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139385444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119927566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107986568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140362829 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113370877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130492497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117656568 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120355512 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128652898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116269258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130247565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125333208 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112502056 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139584393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105844266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135657232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119493223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113311645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139002749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109937477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113881162 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132438884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109712912 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152811198 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114456782 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116757071 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136216981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116933425 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13881511 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131468235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142677976 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117623645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113717242 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142516707 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117087961 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137087921 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118220483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142260889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116099868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117578753 seconds)
  done (took 9.066754311 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144078628 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106101607 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13177846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121146238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138936628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111298054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109550803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131342087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111586738 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106618428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173467316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110253118 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138921522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118476672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108910222 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131706261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110379066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117001967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129004237 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130617867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132707979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119234103 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117969972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140013987 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120268359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136087689 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110896734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110113146 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132955111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110451524 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114155911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131786627 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118508343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127361915 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118127984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109879856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132453469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115411346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109655652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13668793 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118054556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14617142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110745553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110435949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143936052 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110773581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109620959 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13222454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110436748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105629241 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144171151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12224197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143462183 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117440414 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131313747 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112019359 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10969235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132270898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111155347 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11422828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139984322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110289609 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15151544 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110912265 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109446906 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140727915 seconds)
  done (took 9.033022325 seconds)
done (took 171.456718468 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177579149 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217480385 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199261674 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160887321 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096830276 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154547653 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129189234 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200886135 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096877504 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09683325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095601614 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122828366 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166580007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095814981 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120452163 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099614324 seconds)
  done (took 3.131491991 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183943197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336486726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110476866 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123819677 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103004427 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100108202 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123141185 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10430088 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100933019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132843203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102307994 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096680408 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130564915 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098618332 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101130693 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12406265 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108903374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10029775 seconds)
  done (took 3.196461216 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122743718 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146089735 seconds)
  done (took 1.183492508 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13262331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216686002 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285094757 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172387002 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121979001 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143315544 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150707599 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136143294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190909037 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136804389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114159032 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099369901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150421728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107181546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13860396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099959399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129298932 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13815877 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116242347 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102938512 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146946567 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105673661 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106245703 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13914348 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182262146 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137087631 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105635904 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104618049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126579507 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116170174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129655771 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119862391 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113698387 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182113063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104488429 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178325495 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131272962 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102346012 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114994692 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124866725 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106855175 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10420115 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139019412 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099849931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104125498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13089324 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106137924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104523809 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133417958 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10963559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133010841 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109840724 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176709526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109326033 seconds)
  done (took 8.035671467 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.877571902 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142855428 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101530269 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.999618573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148045058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114503013 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845015906 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149821411 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255440773 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.894267048 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116990106 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132012555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241802862 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25894444 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.292716882 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361463232 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733340155 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114399362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130899872 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165108223 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108897071 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147784571 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123463139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518475527 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102089707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100599646 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133371212 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110123555 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179209353 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102850907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129539649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174255452 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293498697 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21165441 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124054934 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102681925 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101468282 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186764366 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272879968 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220128682 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194652019 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099568726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101726862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131439314 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121310094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09857567 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179529046 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192065662 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189298377 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107518591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110435432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135196676 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108559962 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179249301 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099180754 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357678414 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383007112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103471531 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110797585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136230304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269014664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102660088 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236703993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151902401 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217317005 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101553519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828255441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18605293 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102238793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106227204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132267322 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107909102 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130950316 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169478943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499360115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111724802 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104607184 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124664225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235218357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102297144 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101007072 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184284849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102612824 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133889789 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113536751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134665775 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166716663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271106179 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111103067 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13462674 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106912539 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139214855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103433036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234622106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232876505 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174745239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207745612 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132717718 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157342288 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187005937 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129049584 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166631841 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133775845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114358904 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107801936 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.249319499 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134869913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103883609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13124821 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109774688 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16119098 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106281132 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110192993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189577027 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554201563 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.192584648 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100517378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10565235 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135046951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180913645 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110793812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265454048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11102812 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189439052 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131296981 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10046583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10993202 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181297788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109397442 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13458408 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11000318 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112050744 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282356443 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222564326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133512306 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254668054 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177831544 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131503469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169736538 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134139679 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189352179 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11449713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109201824 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127248325 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82473428 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116002569 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109677738 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131702916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184432502 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126032739 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105082451 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101317813 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122602563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816196325 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108497044 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099295051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126009425 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109538235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110940912 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133262578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107330487 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179954579 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246563972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111334263 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134051426 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102921121 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180357154 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10436618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102192137 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126462071 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103546746 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111629196 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131692383 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105900099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192792052 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177256197 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231792828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653427932 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103971093 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102662772 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265531618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105235015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32792885 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11081082 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259505066 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161128702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122605732 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363642194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185084394 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18588413 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105094626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192163369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099938962 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135262406 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178793572 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104265869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109208154 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178562379 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113229845 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136458725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281152483 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102605382 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2539637 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099349616 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189847648 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102966095 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132526965 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328207878 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102079391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141591952 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156203104 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131888454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103662445 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.642633148 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10295811 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139217315 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108366998 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234000595 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186676518 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111045034 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136494133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112083825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183310346 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23171111 seconds)
  done (took 48.062215071 seconds)
done (took 64.518549141 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272407594 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179650889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.283942828 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181793572 seconds)
  done (took 1.92962378 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272056941 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164301705 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.259374692 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.1000951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.26500027 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099318321 seconds)
  done (took 2.105670588 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180522383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172319555 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151877301 seconds)
  done (took 1.456111511 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203252188 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219682638 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333680219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237831275 seconds)
  done (took 2.028630423 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.300467174 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12029474 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126578603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239197357 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25758173 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214169756 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127332927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182041996 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131458503 seconds)
  done (took 2.691346587 seconds)
done (took 11.155409783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.444353795 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.260813746 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.259204074 seconds)
    (4/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.360065561 seconds)
    (5/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116669592 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.350827529 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.241780797 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.285800106 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.245461461 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137623879 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.284076697 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.140949235 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106790601 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120033968 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.311395781 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.308219254 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.225394184 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.289651259 seconds)
    (19/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.184664612 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1551999 seconds)
    (21/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173343076 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102004407 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148011387 seconds)
    (24/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.265305938 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129844149 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20023901 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110932105 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130221924 seconds)
    (29/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19659609 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078908466 seconds)
    (31/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170898568 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085010265 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.220115871 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.258663275 seconds)
    (35/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.292195095 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.216722581 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127555199 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112660012 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.273704606 seconds)
    (40/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176577026 seconds)
    (41/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206169843 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119592021 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113297799 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.15553954 seconds)
    (45/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.151787625 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171488522 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.31458214 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.348352956 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.14558436 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112443589 seconds)
    (51/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112614735 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191539026 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079432811 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086301697 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135794574 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219290115 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08626009 seconds)
    (58/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148292479 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.159549433 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121561267 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10841615 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.105718477 seconds)
    (63/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086271038 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106237992 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146670685 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.20320499 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.1134665 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087368171 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085865228 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.188506344 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123109772 seconds)
    (72/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086933515 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085411829 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179346269 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108292251 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108351162 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.258454169 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175336067 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13593442 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079890311 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108570173 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149643705 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080815361 seconds)
    (84/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.132745633 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086146664 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139468035 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110643964 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104285839 seconds)
    (89/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.107450412 seconds)
    (90/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079843907 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132414997 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082280119 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132133903 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126249384 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195763717 seconds)
    (96/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.165876031 seconds)
    (97/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080012306 seconds)
    (98/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08068854 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080679325 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085330983 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137963716 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106067364 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101545521 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.137053115 seconds)
    (105/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.210481922 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158717036 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087750163 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128671368 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207480257 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147582472 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112305915 seconds)
    (112/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.163874231 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109910985 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131283672 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078326706 seconds)
    (116/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107240728 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087262564 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079355065 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081497363 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129023313 seconds)
    (121/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11148286 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163242015 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134658422 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105469308 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086847314 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080256344 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.10379243 seconds)
    (128/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146884515 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082817249 seconds)
    (130/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111411248 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078673442 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130887128 seconds)
    (133/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085842692 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079048457 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101706533 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10622744 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126625195 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126571754 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110213284 seconds)
    (140/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082312191 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105585109 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103502074 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136668476 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106100528 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082531109 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086031211 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158511313 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133779669 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101624687 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157816375 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103551764 seconds)
    (152/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114867657 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129761944 seconds)
    (154/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115820447 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084499573 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082469191 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127005021 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106391206 seconds)
    (159/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082873313 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082581592 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.10302567 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113012968 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103267031 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081686805 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.11133138 seconds)
    (166/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.138670482 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11240123 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079187502 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136954095 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087547665 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126202224 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13906651 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081147133 seconds)
    (174/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081586538 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105476235 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13064973 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104156659 seconds)
    (178/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085978286 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079548062 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.109559528 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082961965 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126365214 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106744149 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.107497705 seconds)
    (185/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081409678 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.087108286 seconds)
    (187/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087474617 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078893707 seconds)
    (189/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109156622 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086982292 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083071194 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086313129 seconds)
  done (took 27.584011431 seconds)
done (took 28.540012572 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22860737 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131984638 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113849448 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112185517 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235497314 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120215933 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15544113 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116207968 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122311113 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13889392 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105121669 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126589301 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138588677 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206273682 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142475269 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105826419 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103778938 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.151336539 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129867946 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130062567 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235725272 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105729194 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149746922 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105391395 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236337935 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108032427 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111978308 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.141143748 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127254016 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112996739 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13965894 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106116596 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128644899 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154077518 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10583096 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112917991 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12979582 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088361045 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114216543 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113696516 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151318551 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115215387 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112913612 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130647947 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115153902 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111768779 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130037949 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118553858 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102398958 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138723651 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107352152 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129178353 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137164421 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103893197 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102926429 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130177247 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125793392 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105202312 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150039125 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105426623 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105659598 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10416428 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139360905 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106296706 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113012572 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129757567 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114690403 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114664227 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138775266 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108936183 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104330137 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137050015 seconds)
done (took 10.274688776 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110648789 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148713436 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.23565574 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238293219 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132238926 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147899529 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119781412 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128873859 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144218074 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124518634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142036246 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162173164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241962923 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121959625 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119519313 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143779842 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116736187 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112808929 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.239997585 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.154379758 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131706886 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120776724 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156830194 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122182284 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108464736 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168877947 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113745943 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116909264 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133532963 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118325051 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153359309 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109470451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11150318 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.15138091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126058032 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119844564 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147402844 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117924326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109596018 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133715959 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121204687 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124582842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133881274 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123042041 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116178654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.149647759 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117063306 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121987778 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134459116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116737632 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110408651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158903275 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122260317 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125418778 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147543015 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122477246 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122104504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.147282707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113521305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121694488 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134692543 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109286526 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110075419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155528899 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113171537 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.145349366 seconds)
  done (took 9.961034568 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127150262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140071474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144622376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120864978 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114761352 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12796677 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104061577 seconds)
  done (took 1.87500592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105207533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245701473 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219480425 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246173534 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244510691 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258227084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128573191 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104772015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167861787 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115282092 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249608058 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276518986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116189841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147226702 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224818234 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131812543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.222322989 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132156477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121168328 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249553608 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123564479 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16318145 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119018598 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105240909 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242673424 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105445459 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295232494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15172802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114432614 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119506174 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146514271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185046279 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245314754 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119461342 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140784818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.24561651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217270878 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145912053 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.232374183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136923047 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243112651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120131745 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120481107 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146805472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120516139 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234913177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124884035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121811389 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145539466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.226573884 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14435792 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244958017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117530531 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120436169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143028113 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122992586 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126928427 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148074255 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.227502089 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149986858 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246689261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222454175 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247970345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250124484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129799918 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.251336711 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234443509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119116206 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114600394 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148552148 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.251075184 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120151055 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118586268 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.243129194 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123019991 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252427181 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.251125129 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117520349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147059421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109848332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118244275 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13286701 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.215976912 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146206668 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118683245 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124568337 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145562572 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120647925 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111164256 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15847837 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119849263 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.143003595 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125741143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120137763 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146436081 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.226426141 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143677185 seconds)
  done (took 17.335983138 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107873296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107160457 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111046121 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132784811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108046152 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107902553 seconds)
  done (took 1.699623765 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143579436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121211487 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155407013 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121597358 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194807585 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.22881656 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262105606 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114036594 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167608624 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131570491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256898265 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258356952 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256014013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124877121 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.26108965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122879644 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265637897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119220624 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155837515 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118729446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120154345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151347116 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119004554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246960176 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121971516 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122236715 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140586527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129794778 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128559665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.143218031 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124860819 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147283189 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114243479 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134523421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261666624 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112720623 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144218687 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123573691 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122425365 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.150154521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259512969 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118778464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127103355 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150203217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115673148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114062461 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150038969 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114694101 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262865717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123946501 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151604216 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122408826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121955466 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150708856 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113913631 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114724361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149576103 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23608254 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153420344 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114142821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147765746 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122384119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115310831 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152435654 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122573171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123732025 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139661673 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123192886 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118056577 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147643558 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124832099 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121179741 seconds)
  done (took 11.993803995 seconds)
done (took 43.856645638 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.725077167 seconds)
  done (took 2.751385783 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.956285492 seconds)
  done (took 1.979509072 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.180222935 seconds)
  done (took 19.239090175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.443883237 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472813282 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.151490614 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150744281 seconds)
  done (took 3.248120064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.833736004 seconds)
  done (took 1.884063414 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328027927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243510929 seconds)
  done (took 1.604763745 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724486042 seconds)
  done (took 1.76896498 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.554920161 seconds)
  done (took 2.588573741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290961507 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246685796 seconds)
  done (took 1.581307455 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646325203 seconds)
  done (took 1.691529143 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.336144932 seconds)
  done (took 21.385358509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261353611 seconds)
  done (took 1.3109339 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284253286 seconds)
  done (took 1.336751107 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.615474962 seconds)
  done (took 4.666089832 seconds)
done (took 68.076843538 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117687207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119601521 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119109035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14383099 seconds)
  done (took 1.540039712 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125882167 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121275236 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151417931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1202664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126855768 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.145306745 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121718347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123083648 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119449043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149224734 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121553245 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120662964 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149901386 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120108277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118568014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149154282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124637916 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119634823 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147114046 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121723984 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120369762 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149126314 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124753432 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123429719 seconds)
  done (took 4.163787479 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116714208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110828767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112846342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136418177 seconds)
  done (took 1.528902987 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128963411 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131621435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155721121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127800062 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13196059 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157237707 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119114524 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116631948 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146052837 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12873572 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135016244 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160177218 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132665587 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120978575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156809214 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113906745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120537871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158192495 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126870514 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155138592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122350255 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127472606 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151727563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129948113 seconds)
  done (took 4.304318753 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197256095 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132826718 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178342676 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165143996 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181317398 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118188875 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150217317 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153573393 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127814219 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149864732 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122805526 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165175231 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153074783 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122785798 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121177484 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152451608 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133364074 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.15227439 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.168920004 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125021045 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154764746 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133260571 seconds)
  done (took 4.315014299 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12427068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112072483 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133957461 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111987467 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123780335 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140291265 seconds)
  done (took 1.803555335 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110925689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105494268 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10641143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.132319172 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110160306 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105652196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.13016027 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106930215 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105022632 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10504927 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132018137 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105595826 seconds)
  done (took 2.407206173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333989983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110019874 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13768273 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113953893 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115175526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10817445 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149627829 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109621497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270208575 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10552886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.135202693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192747932 seconds)
  done (took 2.940486016 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207565859 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149410118 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259804872 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.680837592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166163469 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193537967 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28414917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191577481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210068445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138164826 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220165743 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162996437 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184541205 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188349542 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169286915 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160930064 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196430122 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238764387 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144416307 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240462716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157919478 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203905171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218993085 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15173559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168344878 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164256753 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120717503 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157350105 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170177145 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195807719 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207145499 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152732027 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170696977 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195400989 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262865684 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209085106 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272425513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135487088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199707369 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217315609 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263117461 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144304649 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223039426 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154546653 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157097056 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190467086 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183586841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184324204 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163531714 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146260533 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215307251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209485484 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172489603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165034985 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301521935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162006102 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144573911 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255963577 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219951455 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230213371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182689168 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124097118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205493929 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218909221 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24514805 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144105314 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19583683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127584285 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194818849 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208182274 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210550536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189282839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.243101253 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133124375 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200744955 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173379934 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186322689 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206943002 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200634758 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12161105 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181680813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136796138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155242593 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191747184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123294624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247021138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161170824 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342639809 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1821476 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185524722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163830347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192992229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163659583 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179138495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103233962 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172901739 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163823173 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188609083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131239872 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156270511 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170132207 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127832786 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183743523 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124698702 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198991559 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136041916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196225699 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17297919 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160840705 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181511882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177585649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165505874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199352198 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193219128 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162216653 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133747862 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249051139 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19641564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139123484 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203440364 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198220765 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179362687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136037421 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197687484 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193625373 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17369438 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229515918 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141443753 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135934835 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170674773 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200808436 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163125736 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189848733 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129205557 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194081623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194486606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157335753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142031475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21213187 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135130082 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125678993 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166750581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138344489 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172701929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150006592 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167690748 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156847055 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195524374 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16648284 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188387547 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137588388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204509864 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133524335 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198397241 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150817207 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120251723 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204865987 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226772081 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131130912 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211497061 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1644141 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212908389 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201535961 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132247571 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21301562 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129671107 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12206346 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192709295 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17096871 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194546452 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218240462 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210002199 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167256663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193768925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151603858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20034725 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214381462 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159241892 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172707627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173531803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201699372 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122680497 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123888401 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158094511 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138593412 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131180594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168420639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210929761 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167395889 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207096372 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195339225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140505042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218564734 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127328949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189550298 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177299175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139373906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220975651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222237229 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179282874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172352406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193251005 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123186635 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127738958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162004451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163172979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137702139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165737447 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142657783 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22195187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204465286 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151063211 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220772743 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197937076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201822265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.15074106 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162339502 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199275882 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170970285 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211487442 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134757491 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161817904 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223158682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171431002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195990411 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198597514 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180510535 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226215671 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194499952 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13202097 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176136318 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163251326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138855136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19334383 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147488987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160295106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153752037 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168620027 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141939789 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216654382 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146246411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208516887 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188022367 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174569935 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154996151 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143506394 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20501698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147917256 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104858326 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201876829 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226813226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151885721 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187271755 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174819832 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160290532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318680629 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219378478 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178061145 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167905811 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140594237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202844673 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161550135 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19396341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213073247 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144448184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239074991 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173126637 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173910861 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133249515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178561763 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152594957 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169198312 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153067684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192060442 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147804487 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21911525 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137596608 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200728927 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178565017 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.176321315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151143816 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16910501 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227501944 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198590562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204660907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16696669 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195565391 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185756062 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153978002 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128780972 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134493858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216206635 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13043904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208823526 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194828477 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184517016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204956978 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194281968 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143099085 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128388893 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198218873 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151505136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216025932 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16497491 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14013 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22158781 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12955653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13155314 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191869113 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317393867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150824214 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204599688 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107231051 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308029807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132036069 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1329298 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192425524 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200167927 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13521107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186145969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203435327 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142736746 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193582526 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136994861 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20901532 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213153152 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168582068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206245485 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14753814 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194751301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162478847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206673854 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176966163 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150120603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160853648 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224410558 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208195179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132942131 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198603778 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172336048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200883434 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176407111 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169901778 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185307369 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158978211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168124922 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168603948 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126598688 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189839525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168865898 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161104031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178172129 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201417765 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132655097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157094989 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14974081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194658084 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142775712 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131091234 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216723837 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159442801 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185585601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243719218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131072307 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197673195 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148326369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16145246 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141200987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14705366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163068826 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176364545 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212471927 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132947027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209173018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167704076 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195768596 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159843946 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174714588 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265345724 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15949996 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193221385 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182414504 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198218345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181937099 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206109373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170731165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180073745 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167547573 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178238264 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223377861 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196048122 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16843699 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160810605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145287881 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139712655 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165372404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154026542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199716144 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143614426 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167130351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168166276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17758533 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150622518 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142884127 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23245715 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182307105 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190125234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21849176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139759008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206157609 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209091055 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130789692 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196407449 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175681727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176069213 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1539019 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164709706 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139471313 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246074286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127710189 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162079321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205137686 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200113512 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174169953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164507411 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182088275 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170578084 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177311777 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127726297 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184986994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198052606 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135900122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128736532 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202200381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162106014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196332269 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144042053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205231076 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197220952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153609585 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139908502 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313857325 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166194604 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225853189 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13753052 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168017944 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148301569 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191188361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167193588 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201857184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131937032 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130707395 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175684899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158731626 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17006738 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169743666 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212705476 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163501555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21826026 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135189826 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28755412 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143705142 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202410653 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117332233 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.659735032 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145920945 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13682325 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418882 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211305634 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217356973 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193592635 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14865437 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167128071 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128365833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131794282 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195737794 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154186262 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199121517 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149498034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.133716721 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143144933 seconds)
  done (took 87.501193188 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162992662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153814054 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.17013713 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223618846 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199468256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294616593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2315694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25028001 seconds)
  done (took 2.835244482 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120107857 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160402835 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143405192 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146097559 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111788819 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.487615242 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162429741 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12205758 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162943295 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154069564 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137755939 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57610084 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118259148 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148109909 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123577348 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137870904 seconds)
  done (took 4.153726421 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.838613034 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545575458 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.207104438 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.283766523 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267537592 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207385483 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.791501327 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203846645 seconds)
  done (took 12.487446107 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.167713103 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159645941 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.452551901 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308326333 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185167594 seconds)
  done (took 2.427078949 seconds)
done (took 133.449638843 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126018563 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125444378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124527032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155874978 seconds)
  done (took 1.673427814 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195255461 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0916584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094605469 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120818639 seconds)
  done (took 1.655617784 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468317875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091771701 seconds)
  done (took 1.741676846 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155803475 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142055701 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168742937 seconds)
  done (took 1.632495775 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137444097 seconds)
  done (took 1.293193788 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129123904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128687691 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.274434436 seconds)
  done (took 1.691289917 seconds)
done (took 10.850290902 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123214804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925664827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435162058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135962159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714470534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429342604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427942424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179567345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176957393 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140931657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133976813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692687474 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441264803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88061576 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.395571849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911654072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.717298748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114625723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149502284 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114684159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404944377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140166063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115320377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114399333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.74408262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423427833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111542065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924428746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112823224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115434765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430849812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112903956 seconds)
  done (took 21.138976037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115298626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170858961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149396405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115067225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116297335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142507141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125136571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125576582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208272921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112618054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164886007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113992013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118204656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142558635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139024504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112533787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144003441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117468968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120531677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143297524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135430399 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111844084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143368335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115881846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113261417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162645041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114417972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125315237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141163358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11847552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116976739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143419949 seconds)
  done (took 5.408625485 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161657511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181069888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151792402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151366314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190384572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114845259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229236064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151850788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207733441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114551725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134283275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140648661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154099937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113656399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166990327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113753541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115553533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144714261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121217823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115707304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163567144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11230909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114465292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143543181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114913419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162908428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113961065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126131915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140741168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118665249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118645941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141630551 seconds)
  done (took 5.711937813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128067917 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128996152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136098118 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166452609 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123881237 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126958034 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158705242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123286359 seconds)
  done (took 2.25770179 seconds)
done (took 35.680756169 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142339233 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132171461 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134793055 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157837776 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259742522 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121597128 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130754079 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.12130989 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159243372 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134586851 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112306522 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152366865 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133929712 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12421247 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259728785 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128182704 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265517751 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262173757 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121135356 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127901244 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153830582 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234157336 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157569011 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121755666 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.252206955 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116810322 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253074284 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12438228 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12246346 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145776751 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231934316 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158756758 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122136354 seconds)
  done (took 6.534452381 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.245625272 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154402593 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12358733 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121672305 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123084534 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151160818 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.247806477 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154719794 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121887549 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12000301 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152645455 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227872502 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160842757 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117185088 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124498655 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111609583 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282687309 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.154923987 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115089414 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09538823 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116751468 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.15228171 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.260915045 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149425743 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122426044 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12107407 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.15417722 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127779069 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123338554 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123104605 seconds)
  done (took 5.740565328 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130244758 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135882472 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.169421457 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191432991 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151489959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165810995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142119752 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137024986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174753352 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116118149 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131200474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18289844 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133622769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126182723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146923573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134836691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138975218 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147896754 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123873107 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13274531 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167798226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134335513 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138302996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155186576 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115858537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123134247 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157777033 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127492464 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125035661 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.162775262 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118426425 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118499213 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148826116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151238419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116714573 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159978121 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142702905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12787192 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159957756 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149332834 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118286944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147666971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14161144 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169187514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148500885 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128787738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126756322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.16148772 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114893456 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133962455 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188791625 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115145251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137312333 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.146374323 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114395971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125283397 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146583339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120430886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13109128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149369275 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141900306 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122480041 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158021525 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118776718 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1267339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144024724 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117322283 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120189313 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170538099 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12593772 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154535246 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115343642 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.159019948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128915068 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126131766 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158410588 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116733379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127476093 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158002208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123289165 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128128282 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14972213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120210986 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132373267 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16686439 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131760327 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128030353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159515179 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119824089 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118202992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163366179 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118956786 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12111319 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158178256 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118510781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120159499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128604665 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.159670682 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114682023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141467006 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150143299 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116842973 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141629662 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150523883 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121867887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126099251 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1874121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116124647 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126396538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159869062 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1167624 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123782033 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148960381 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117292682 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134388141 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162206669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124556547 seconds)
  done (took 17.409884174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.360667291 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347962689 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189813975 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.43514221 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130020572 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277815159 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345748974 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.350836311 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115849293 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183962801 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1786857 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315649327 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149861412 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145591778 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349576339 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40716628 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179100483 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153267255 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183603202 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13100572 seconds)
  done (took 6.12709397 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137419467 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151186495 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169172885 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145300074 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125924496 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164125951 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116843827 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1374828 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158537547 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126708086 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11911367 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163225298 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130305978 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13317302 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162629885 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149392684 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123151355 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152281105 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140144846 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120584997 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133461325 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142306317 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125121322 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16977714 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136692218 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127216373 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146571236 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121879566 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122414907 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156116868 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121819362 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133862609 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154028141 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106365714 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12788305 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160411794 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123902013 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119488907 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121556354 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150312949 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131489284 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128966679 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155682545 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100650041 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135502956 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111344613 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162513755 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129619955 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108233297 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16610078 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129334824 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130304605 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153586619 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138483212 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122971214 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162424281 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129074991 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130884154 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151130501 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116312329 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114762561 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119995063 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.156040252 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132648853 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127539389 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167781923 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132873151 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11628071 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.15196411 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121141978 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119673784 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162208452 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13718756 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125765729 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15517248 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129708599 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123997512 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124258931 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130158524 seconds)
  done (took 11.98091123 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143117156 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12717873 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.162987544 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153911514 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130008587 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152610114 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127789594 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137319919 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130937626 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16697145 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132642069 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129983243 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169975941 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128017318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125996369 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163725967 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130527251 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185366686 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137150666 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144706011 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16255538 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122924577 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129077251 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.158091255 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147252252 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127604003 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174145812 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131179934 seconds)
  done (took 5.248059191 seconds)
done (took 54.215152325 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.343545416 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.544920584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.312333211 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.309657335 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.3436548 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.322659198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.312940558 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.308124251 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.861647708 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.280301092 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.309212634 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.310120278 seconds)
done (took 29.763832176 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.410349864 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.833426651 seconds)
    (2/2) benchmarking "String"...
    done (took 1.596887302 seconds)
  done (took 4.627125042 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.299965644 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.302968076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.557663917 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.300804266 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.302407659 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.301503099 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.301564225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301484615 seconds)
  done (took 16.565484141 seconds)
done (took 27.104532416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.3357278 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.472445262 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.549689472 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.283253683 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.306251344 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.306670516 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.306741661 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.330550742 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.307396995 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.283493476 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.724219715 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557865625 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.300967392 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.664792363 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.279871319 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.309529346 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.319604986 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.538375183 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.306657194 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.331307963 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.279581133 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.279079612 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.307823775 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.307456239 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.312214539 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.310694523 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.350430111 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.304563249 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.480258212 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.329813624 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.338546216 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.306448796 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.347963327 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.315262084 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.305542565 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.324224091 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.493585567 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.316110102 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.292605135 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.334126949 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.504716831 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.329807054 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.308498315 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.311014397 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.285129213 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.339159414 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.29236653 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.443199664 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.327750587 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.310279357 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.315507637 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.677950358 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.317039327 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.315501895 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.311028333 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.528873429 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.333845061 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.37057161 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.334082595 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.315917191 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.30639901 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.31826057 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.374475833 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.309017646 seconds)
  done (took 150.232727197 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.3067645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.309730098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.313123413 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.310578629 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.310833419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.312170871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.305391505 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.306806941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.311835738 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.33950382 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.311224931 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.307238306 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.313004235 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242336127 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314911424 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.322511441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310173072 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.328314188 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314588042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.308727307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.313018023 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.311809816 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325253936 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.307158593 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.309396005 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.389677275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.352939152 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.322419631 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.320578262 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308641183 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.314010001 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.313380354 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.966413003 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.161261835 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.318024467 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.343993655 seconds)
  done (took 84.08049117 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.311056611 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.308526281 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309122227 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.30931571 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.342808772 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309211662 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924113106 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929518846 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.278837435 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.460858556 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.797029589 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586090606 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.31453154 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.40184489 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.325022473 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.311180358 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325061866 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33676277 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314728771 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.31070196 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.927606149 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.32886751 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.542770774 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.492487178 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.32694363 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346163976 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.702530483 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.310645084 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346453301 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.647762715 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.362412649 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.311599865 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683584016 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.045602736 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.4276021 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.314302737 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346031401 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.311817602 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.596724268 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.313541337 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.311966867 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.315872752 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97920398 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.316584205 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.927694147 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.316936647 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.326861686 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.316582762 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.312392243 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.304802196 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.076833995 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.316972622 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.313822919 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.314404074 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.312197557 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312752662 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.346837272 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.293814977 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.412451946 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.312857275 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.313190136 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.315648728 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348838663 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.314087428 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.460842272 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.31436382 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.656980491 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.367815351 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412245925 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931304399 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.317374567 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.408560483 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.432107452 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.313899408 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.313327611 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.313187652 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312858844 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.313634401 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.426179919 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.314116581 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.31434066 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.012120592 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.495410066 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.332009105 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.822476029 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.417352896 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.314075411 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.70455257 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.319920452 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.314374463 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034467843 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413275563 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.315078305 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.315446462 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.31630084 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.013094389 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933928188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.603373908 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.320532138 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.937565018 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.321499651 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.191097422 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.906003041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.003600579 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.321309919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.427616267 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.49969088 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.333167504 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.316344515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.824162069 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.319342988 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.373504267 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.320624464 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.718952489 seconds)
  done (took 388.869028217 seconds)
done (took 624.382069368 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.184498429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.135078357 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.286840571 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.146631757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.12824391 seconds)
  done (took 12.092093472 seconds)
done (took 13.303125068 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515111025 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513643007 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383138853 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520565573 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352108571 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534292316 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.495646317 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.336032259 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430266804 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.404243205 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43419088 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371644375 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354300682 seconds)
  done (took 19.855991371 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.632902716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.332032776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38458204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.60348552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.368760586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.624327768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.660434241 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.330704988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491991334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.365208673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338421744 seconds)
  done (took 19.344457272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645021836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.332621272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.387795501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597736325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367690028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625874749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.662574658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.331396622 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491049974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340125055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336310748 seconds)
  done (took 19.330378068 seconds)
done (took 59.745722848 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.356622269 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41833435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.353726716 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.335320125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.333901769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.335033424 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336692126 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.334207346 seconds)
  done (took 12.017640651 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334205369 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.334299132 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.33260979 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.33335682 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.335246188 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.332905925 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.33309878 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.334257314 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334244611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.333443476 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.333515688 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334346422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.333004966 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.334398916 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.334165548 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.334386161 seconds)
  done (took 22.555198833 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.339325025 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334476216 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.336695347 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333901068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.334297533 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.333511217 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.335410186 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.332899001 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334529432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.334651582 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.336111332 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.334159109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.335284777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.332600679 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.334281582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.335016306 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.334626764 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.33575064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.339562809 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.337172587 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.335639671 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.335249878 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.335756937 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.334422459 seconds)
  done (took 33.260676261 seconds)
done (took 69.048916988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.322497508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.33635135 seconds)
  done (took 5.876020997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.398075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.392454247 seconds)
  done (took 4.007502343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.335640478 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.336499149 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.336243713 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.335771299 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.336591358 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.335857913 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.338812975 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.337244842 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.336609569 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.336052799 seconds)
  done (took 14.582788827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.336177075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.336290899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.336442814 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.337409612 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.33659307 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.337526599 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.3362559 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.338201332 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.337918746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.338113226 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.33899522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.337381249 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.338094013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.337224387 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.338030541 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.337282142 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.33822986 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.338134122 seconds)
  done (took 25.289311821 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.351739043 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.356643408 seconds)
  done (took 3.926582466 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.466858568 seconds)
    (2/7) benchmarking "second"...
    done (took 1.380114701 seconds)
    (3/7) benchmarking "month"...
    done (took 1.442327331 seconds)
    (4/7) benchmarking "year"...
    done (took 1.435736423 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.378691749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.359579728 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.380528647 seconds)
  done (took 11.061283078 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.32274606 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.610504809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.797389373 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.481296402 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.320372581 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.335331608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.301684751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.361940195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.337251521 seconds)
  done (took 15.08701922 seconds)
done (took 81.048426526 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.324964885 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.364655669 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.332174519 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.338922155 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.678636722 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.365425416 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.327109172 seconds)
done (took 16.952852775 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.30411907 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.307207721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.306676776 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.338894158 seconds)
  done (took 10.474251011 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.33937395 seconds)
    (2/2) benchmarking "read"...
    done (took 1.651418568 seconds)
  done (took 5.209649263 seconds)
done (took 16.90393242 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340921774 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.340156561 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.342210137 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.341486296 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.342065197 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.340546 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.341115255 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.341052795 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.341173595 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.341022389 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.342523282 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.342426104 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.339973687 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341841687 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342214 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341637616 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342306248 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.343030849 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340575833 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.341527255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341085363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340403518 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.341136786 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.343036838 seconds)
  done (took 33.415419589 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.343332983 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.341363777 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.342050978 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.341282428 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.34271844 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.342375773 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.341538794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.341709624 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.342278548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.342005432 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341794137 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.341580181 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.342435941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.341737718 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342167913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.342925644 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.343314934 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342328727 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34276309 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.34351269 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.341706886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342109665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.343521509 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343223921 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.342064175 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343244344 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.342649678 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342214142 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343939975 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.34282183 seconds)
  done (took 41.493278294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.346570942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.34990953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.343114569 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.343917492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.344510769 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.344863735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.344032487 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.34434225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.345891102 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.344058403 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.344798205 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.34450857 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.345022149 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.344227801 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.345598287 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.343939142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.344741337 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.342795633 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.345641902 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.342922778 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.344540737 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.345422989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.344959484 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.344536831 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.346269798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.345041534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.344923387 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.34457917 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.344794424 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.344933143 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.34661884 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.343491335 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.344725827 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.344351321 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.346288491 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.344085583 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.351164809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.350204585 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.345878721 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.344907726 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.344625595 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.346206609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.347166713 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.346476484 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.345707605 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.34513823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.346922195 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.344373527 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.347823126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.34735755 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.346355225 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.347249917 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.347556302 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.345681102 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.346755837 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.346846866 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.34701392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.345603398 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.347749844 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.345915909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.346593717 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.347886615 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.346119476 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345874576 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.34929644 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.349183312 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.347752883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.347486099 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.347570044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.3489286 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.348032436 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.347279636 seconds)
  done (took 98.133464213 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.348424321 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348180343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347443666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.347950791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347432725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.348757844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.34784024 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349688006 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348223124 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.347709737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348907157 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34743471 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349118537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348517273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349251794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34929765 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348699933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347543824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.34981717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.349574958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348806402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.349057072 seconds)
  done (took 30.89405679 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350521383 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350724359 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.350531218 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350828461 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352536102 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351975493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349881167 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350476797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349657691 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349766084 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348290352 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349708318 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351453772 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349045804 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349122275 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352233727 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350302489 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.354246791 seconds)
  done (took 25.537850374 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.348987203 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.348832614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.35070568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.350488431 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.350157531 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350187647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349986725 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350103253 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.351781412 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.350490957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.35157304 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349345003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.352470232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349487276 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350591742 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.351280713 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.350889751 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34987604 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351896837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350028253 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350747981 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350872257 seconds)
  done (took 30.938431085 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352378726 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350478476 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.351132812 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.350771863 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353400861 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350237081 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.353411965 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.351721501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.355318913 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.35123309 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352329386 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.350798088 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.355188848 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353010555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.350619048 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353793424 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35213036 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350808157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351669143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352253388 seconds)
  done (took 28.272533071 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352554385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352409017 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352290691 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352617236 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354163053 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.353600821 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353975079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354108748 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353757203 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354259188 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354128809 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355540605 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354848138 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354034269 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35434146 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35378666 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354186815 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353008326 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354071109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354009787 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356991529 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355303824 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355188477 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.356486153 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354659478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354163969 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356171562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355958604 seconds)
  done (took 39.151214815 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355097021 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.355454133 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.354399453 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.354886484 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.354719176 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.354120384 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.355141611 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.356117431 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.355737339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.354307967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.355451311 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.356439475 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355625278 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.355993257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356704439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.355916312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356493008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.354531848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355226167 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356206709 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.355860312 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355236243 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.362066425 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35636207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355766042 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.356760686 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355998189 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357909694 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356440438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.356749544 seconds)
  done (took 41.90907449 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374601887 seconds)
    (2/2) benchmarking "in"...
    done (took 1.375966056 seconds)
  done (took 3.983293495 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.357830504 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357959446 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.358790326 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.357586993 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.357155548 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357155961 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355983162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35935254 seconds)
  done (took 12.095470076 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.350223324 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.357128735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.358270198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.357155606 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.356625796 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.35163733 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359640889 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.361803306 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.352622312 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.353407354 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358943883 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.356911605 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.356282743 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354987791 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.354506001 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356277095 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.360661922 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.358548542 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.358638068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.358497933 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358558533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355106229 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356973835 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.363073995 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.353965393 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.363113357 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361505825 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.364234757 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354276978 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.35935508 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.356581689 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361028774 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.360635923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.360329795 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358648723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.35973715 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364714866 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.359855699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.362937674 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36503129 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360734453 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.360208983 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.35723805 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.360257416 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.360939556 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.36315597 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.361098247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.358955283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.354711781 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.357722839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.366174789 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.353940813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.361537457 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360042517 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.362803153 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368244248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.36708322 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.358993142 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.36183996 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.367271127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.373744285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.370899383 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361726704 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.367335236 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364613894 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.376349756 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369039216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368841397 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.362735935 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.362451586 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.365947892 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374644369 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376719454 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.368016793 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363805176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.361910911 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359084913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366557917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366990668 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.370613138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.370603376 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363543461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366810961 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.378077716 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361263794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.366476239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.36382369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.362749442 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.358932687 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372878486 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.3719383 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.366150397 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.358524821 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.361460573 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.361796637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.365864083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.35641504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360100758 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.365634387 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362279358 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363793804 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36110406 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.366342142 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370500627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365817531 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.366884398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.37142644 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359716053 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.370538174 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.371046073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3651685 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.35937142 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.363862921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.366813594 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362141277 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.369767482 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.369802564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.363516831 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368639255 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364062499 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368529016 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.384010041 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.372150593 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.363909245 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.365106505 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.374565221 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36677554 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.366997115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.371828862 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.366619163 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.366363535 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367130615 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373334348 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.363443386 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370164567 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364889866 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.369258495 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.365754736 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.366020837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.364846887 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.371092863 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.366390304 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.368641358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.371933939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.37223453 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.366965052 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.377623613 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.370296798 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.368778489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.371117415 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.373244917 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36649017 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.365211445 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.370486021 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.363174717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371021906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.363136739 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.371699633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37007668 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.368221511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368759827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.362787603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366571826 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.37109348 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.369697501 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.370324692 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.372335918 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.36711043 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.368069691 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.361552181 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.369435909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.360957581 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.366314503 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.375526633 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.36958244 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369399121 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.366961543 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375675178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369023277 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369611979 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.365265882 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.372624707 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.37321177 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.372645602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.378878908 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368772877 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.368904623 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.365265279 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.366743368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371660043 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.366207157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.378099184 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378181246 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.384502121 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.368459368 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.373651368 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365413758 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.372030448 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.373685317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.377269037 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.371240625 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370638823 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36627671 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3739806 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.369331683 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373478419 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.365988339 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.372936778 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.374420365 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.370789083 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372460422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.368800493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371803582 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374438613 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370305654 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372029266 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.367601272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.374015464 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.366696961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.369397536 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.376493888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.37327616 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.375432999 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379411858 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371605616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378378661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.375235963 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.369585075 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.374083017 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373098847 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.374983974 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379242357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.37776983 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.371154878 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379814489 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377171498 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.368744661 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.375334895 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.380106361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372927792 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.370358184 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.379906433 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.372554834 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.374303312 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.373196393 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.37058517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37613523 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.377998176 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.383378917 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.3695123 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.376641421 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.371480649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.378523436 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373579194 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.378795065 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.377429215 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379207472 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382487937 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.375232969 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.371018905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377700369 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.374513293 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.375824501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371061224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.380266466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.379722145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.378513597 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.37571998 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.374227823 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376830496 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.36982629 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.377639842 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.370928936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.387529578 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.394652007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379112855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.381473839 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.380162929 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.380199855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.381353636 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372278301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373414472 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374863277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.374541341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.373427817 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.379163569 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371914069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.380162702 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375909359 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.381500099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.379846433 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.376421627 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.371699969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.381704881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.376060981 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.37549395 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.371071966 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.377822068 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.374557317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38132936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.380248558 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.374569403 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.388091868 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.384609469 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.377574032 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.376296351 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.375721714 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.374676378 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.375421041 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.382692638 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.376338177 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.385059548 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.376238161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.381687733 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.377746357 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386941383 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38619134 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.376146029 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.385516329 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.379119707 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.37403025 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.375204946 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.381117086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386494508 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.389742917 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.375628637 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.383601779 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379294455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.377955939 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.380442724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.380247667 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.380729879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.379520346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.389177381 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.386667535 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.377861139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382643835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.387831959 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.37876875 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.379318858 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.373686141 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383688491 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.388963831 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.376655084 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.379978994 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.378098916 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.382083151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.38086415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.380058125 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.380224319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.380871531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386421761 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.387438883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383164237 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.380942677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.387497183 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391176823 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388303277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.392457904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.37765488 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.386831446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.382886361 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.378521881 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.380102362 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.379667445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.38460777 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.376420381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.385423918 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.381392314 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.378284275 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.385273026 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.387075396 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.37737389 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387349049 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400525154 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.376649771 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.386429901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.381398463 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.376053417 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.386198462 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.382632211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.375557659 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.381196375 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.386092846 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.387088306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.378273963 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.386439836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377537554 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387096401 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.3833707 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.383081927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.382401966 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.384641434 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.378857673 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.384972319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.38748063 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.391803503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.381130296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383929866 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.381319968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.392550647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.394095012 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.381518396 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388628254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.385766535 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.381289154 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385552813 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.388036916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379471499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388377259 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.380141613 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384359263 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.383905159 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.389604208 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.389189064 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.387896864 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.378862478 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.38166549 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387981233 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.384051329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38484217 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.381824949 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.391968711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.380045555 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.380888077 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.386754289 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.382244992 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389203273 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38292456 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.386536903 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38488411 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.388490611 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.386346622 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385715162 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.38055436 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.381452789 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.395137741 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.392918139 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.389168785 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.386409056 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388469489 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.382892963 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387556496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.387146644 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.385553583 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.38442496 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.389253693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.383128847 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.385565846 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.384233795 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388627208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.394418303 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.393973796 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.382090375 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.398496992 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.399043049 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.394667994 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.382176592 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.386872941 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.383264919 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.390701501 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.388680528 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.384593355 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399875554 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.397623346 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.390136713 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.390483311 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.391798836 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.385034097 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391015788 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389918783 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.386682645 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.395604145 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38643494 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394246162 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389192251 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.388094547 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.384085473 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.384862021 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.387386246 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.388477518 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.390449318 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389570017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.394984291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.390925428 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394383371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389703122 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.387514966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.387164509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.3847245 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392202009 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.384312589 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.392443136 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.394252479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.385833348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.391327876 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389024028 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386593176 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.392391012 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.39386838 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.390022479 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.385603998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.391063792 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.39733734 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401729755 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.389907188 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386495878 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390446596 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.394518313 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392437365 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392058733 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.388813119 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406574519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.403841427 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.388926398 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.391635458 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397128943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.402567057 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.391526903 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.392812239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391368842 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.393696731 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.398610945 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.391786482 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399857696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.401338928 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.389986196 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.395948899 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.390096521 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.392708921 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.39714634 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402048306 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.394777199 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.391140446 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.406043661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403887896 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397247416 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.418458721 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.402706392 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.397181082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.398024147 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.390764925 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.395827271 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.3927741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.398483648 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.394297547 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393109014 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.394050567 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.390229888 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398285211 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.403155402 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.403967899 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.393387035 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.389127602 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.391536327 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.396183429 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.394288832 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395345384 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.393846457 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.393854935 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.395581928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.392813992 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407487813 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.414550846 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.399615284 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.394093007 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.395912203 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.398164148 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.401533173 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.399101293 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.400669054 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.394569353 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396406948 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.396498706 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.404420446 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.398000395 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39288432 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.393551411 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.392748358 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.399269512 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.406744387 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417515867 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.401911527 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.402625275 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399878856 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.395817565 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393289079 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.39989623 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.399844496 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.392977879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.396723202 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399660934 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.397873544 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.396352726 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.395072028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.403687657 seconds)
  done (took 822.97518742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399948463 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.397040987 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398270924 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396903352 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39660183 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394032707 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395767126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.396122528 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.396337081 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396721667 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399304808 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396543713 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.396556865 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396403128 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397615461 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396301631 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.397484932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396514454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.398361169 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395737005 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397520334 seconds)
  done (took 30.603123195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.395457597 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.397205737 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396370175 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.395925555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39819079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.396617003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397264626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39760827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396406993 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395626514 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398953853 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396966378 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.397632983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.396210186 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396942998 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396033676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.396867831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395615984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.394902624 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396785144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394883566 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.395139563 seconds)
  done (took 31.990955657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.395891026 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.399535322 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.391263906 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.39740461 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.395920876 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.396487825 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.395436572 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.39679567 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.396860382 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.391914917 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.393213806 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.392054702 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.396051974 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.403050578 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.393897 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.402425954 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.396621669 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.395618713 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.39577509 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.396499463 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.401688407 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.408636922 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.397712172 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.390908767 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.398764821 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.39560203 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39627911 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.397030937 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.39103455 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.398005285 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.396414068 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.392718442 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.401250615 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.40041542 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.393156396 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.399198854 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.398241215 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.398188684 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.395510588 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.400520232 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.412953601 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.395950134 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.40149855 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.409382177 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.398178038 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.394065868 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.403128796 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.396217045 seconds)
  done (took 68.351570401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.397275856 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.397582939 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.397365739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398557233 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.397708086 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.39695955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.397185467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397099364 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.396398629 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.396435035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.397651414 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.395969471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39714378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.396246755 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.396638518 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39706804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.396663024 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398520708 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.395004595 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.396529549 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.396696809 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.396922264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.397586337 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.398128489 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398721493 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396977371 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39737628 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.397743501 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.396849704 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397131839 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.396390471 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.397887215 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.397666238 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.396330017 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.396161681 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.396520204 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.397191581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.396111229 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397449208 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.396680429 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.397153538 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.398747787 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.396400265 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.399207156 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398241186 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.397529046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39904328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.398378932 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.399151468 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.396891229 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.398887162 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400074534 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.398691754 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.399215127 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.398696474 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.400423837 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.398373969 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.398094176 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.400466301 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.40237987 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398174648 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.399288806 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.399463885 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400260473 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.399161588 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.401448422 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.40082964 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400370748 seconds)
  done (took 96.32634265 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399857016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.401033946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401393536 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399861152 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.399881634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.400799661 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.400169149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.4012476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.402356671 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.400746379 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400523023 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.399571537 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.400115768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.400786886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401325902 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399761717 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.402244954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.400742579 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400408987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401141709 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.401558271 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.40243583 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.40196373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.402657932 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.403298569 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.400997559 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.401581296 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.404326005 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401926943 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403292519 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.403185322 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.403117817 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.402173539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401803236 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.403016928 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403147266 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403548448 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403416846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.402998634 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.402958473 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.40338097 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.403328375 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.404619584 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.404229881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403721569 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405307108 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403736336 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.406006451 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.402726195 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.402420716 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.404066032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402682518 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404480428 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.403423893 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403159689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.403804293 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40396321 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.403009381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403716071 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404382655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404497861 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.40428004 seconds)
  done (took 88.223162349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403015647 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.40351023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.40516483 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.403033271 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.40335199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404368822 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405328414 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.403929025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405157596 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.404003792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406663631 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40426825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405804897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405296327 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405805317 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404990341 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406003648 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40491435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.405175467 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.403300428 seconds)
  done (took 29.364877431 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.403916134 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.405334944 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.405654349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.405086677 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.405511898 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.405585431 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.403950431 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.4056095 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405411964 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405294779 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.405382824 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.405161136 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405201231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.405777543 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.406931352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.405258954 seconds)
  done (took 23.756674171 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.405480328 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.405786194 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.405578207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.406710751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407210435 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407344689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.406346514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.404582602 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.406223809 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.406682571 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.407052486 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.409119161 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.408069676 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.406725597 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.406483037 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.405979304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.405852675 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.407205401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.408408445 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.407517758 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.408275677 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.406999055 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.408075038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.408029189 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.40755569 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.407469062 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.407167585 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.407206848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.407926483 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.40824192 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.408954524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.408474155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.408816741 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.408092005 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.408384015 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.408204066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.407183388 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.40813602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.407989567 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.407008125 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.408227041 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.40700191 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.406585667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.405531925 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.407687114 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.407601442 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.4072953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.409045062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.407817673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.407500561 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.407347468 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.408731876 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.408562441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.407545415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.407309109 seconds)
  done (took 78.682261685 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407967515 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.407507018 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.407758296 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.406806679 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.407663976 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.40823337 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.407654118 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.408940146 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406514864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.407780619 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.406452457 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410238704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.408181279 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.407397452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.407018797 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40789148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.408712265 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.408523835 seconds)
  done (took 26.614552641 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.408316019 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.407694186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.409352908 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.407565801 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.406310584 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.408496871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.407538493 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.408288939 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409568722 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.410647577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406412235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.407454635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407682541 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.408613207 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.408752757 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408412287 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.408349747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.406841302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.408991054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.408493356 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.408755142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409478671 seconds)
  done (took 32.255510827 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.399873861 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.400327825 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.402541938 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.418652826 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.416053353 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.400722072 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.401351913 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.401629616 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.4227274 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.437006811 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.433736181 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.416271728 seconds)
  done (took 18.226397743 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409561789 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410222345 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407463406 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410755037 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410648267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409925652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410437227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41006303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409281989 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410652185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409301274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408532569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408011692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40862649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410189331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409792218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40959359 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409820989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408683922 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408729249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408421652 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409862285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407724825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408713531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409051586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40953473 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409488516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408962407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409757819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407407061 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409103026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408595251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409382773 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409633205 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408867125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409169082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411157599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408788717 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409548916 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409354962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409652506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407323872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409000877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408897787 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409691474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407395232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408308811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408730651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410557651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413322298 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410364613 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410642888 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410181721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409254849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410044098 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411896043 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410455022 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410257914 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410031261 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410446419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410609694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40980977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40889551 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411630246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410113523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409395 seconds)
  done (took 94.308112443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411094465 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411287856 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410093962 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411373557 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411399519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410688719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410873633 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409418625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410324408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410686133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41053827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410523278 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412259194 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411105992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410593939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412771387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409986235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411434293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410658876 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410146097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411504257 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412102973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412307085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409692889 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414511368 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413100946 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410205289 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411946434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411183634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412914106 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412529311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412073133 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41210503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.411621063 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411808001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412296918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41179386 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418278138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413752304 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411642819 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413206613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411538544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412619667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411782318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413231162 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413095794 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41337594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412804827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412228675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41178499 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414355287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414569896 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414920629 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412128979 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414659224 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412663405 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412501912 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413701375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413638087 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413021792 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413756414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41229461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415383795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413788101 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413388694 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412045289 seconds)
  done (took 94.484594559 seconds)
done (took 1923.208630533 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.573651965 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.527891874 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.406700503 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.415917214 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.405801892 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.403746705 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.414173807 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.404376433 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.404640429 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.407189477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.405301782 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.596216723 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.44019693 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.406112801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.40609662 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.505220008 seconds)
  done (took 28.401249062 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.436649815 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.414811485 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.52847561 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.41129235 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.435408914 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.607076965 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.469716584 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.412119243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.589937074 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.432094249 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.415469472 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.435991651 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411169069 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.415808672 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.432930029 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.607842383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.682439354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.404431771 seconds)
  done (took 30.822155992 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.887168558 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.437033196 seconds)
  done (took 5.603906454 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.434301865 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.410937026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.41276467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.409923509 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.403944241 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.40254095 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.411710355 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.409191058 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.422881354 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.540705809 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418335905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.426621815 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.429105018 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.413204655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.418038587 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.459711533 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.569924377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419735574 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.418865167 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.41837672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.410885223 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.502900665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.461032867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.424258586 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.540347336 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.408320302 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.419655731 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.418652357 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.536662073 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.419937277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.411266518 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.411051776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.413270862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.404092287 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.9692036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.410516777 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.45281789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.420757733 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.418074544 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.546067388 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.41537933 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.4176616 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.403871935 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.957065631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.525090641 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534398253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.426542704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.412637865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.413449324 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.480093676 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.419802301 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.415283913 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.474362083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.232561111 seconds)
  done (took 89.860604221 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.459529591 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.404340134 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588519992 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.431849089 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.416145241 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405054379 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.403706916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.69583717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.414629779 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406256063 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.727497927 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.027386308 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.410376488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.47054695 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.444196752 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.45467663 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406020858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403587958 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403775255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.406145899 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980312742 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409984292 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.405312271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.481258223 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.447280508 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945674084 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.405565656 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.411197484 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.405537879 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.404810386 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001026095 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.413558018 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.461394759 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.40543084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.693259551 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.798445717 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764648301 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.413860412 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424706668 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40706455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.430037129 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935880563 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.777939998 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.40866755 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.403919782 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932027232 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405031237 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.418161446 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.408640091 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676227721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.403877762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406133917 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.417954858 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404676812 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.405080964 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.466780441 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446444844 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942311952 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404286947 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403767507 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.450089145 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.402981877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409140368 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405509019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40564765 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.781324109 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.639139753 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.407838244 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778736343 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987335299 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40711413 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072022603 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.408839085 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.438352933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.432926155 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404491885 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403749888 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948711745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.42359004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403082687 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756209453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.413247749 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.706629052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.421058685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409449622 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.987408967 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410528994 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.460014356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.415776852 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407250954 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40399687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406218591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.695918387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.448375307 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.404250602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.405277197 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.429588979 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.405598504 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419907836 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.414715426 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049936465 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.411286088 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.405242579 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422569433 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404556524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402827376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.40446295 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.406297604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684863225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.402983863 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.421818497 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.406498237 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411574841 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.415599768 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.477944543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.414510749 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.714606022 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.410939738 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403496789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.407377223 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405427493 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.419746437 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403549813 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424618172 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.404906856 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.706451693 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.419598237 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.418397142 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.405110693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404503664 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.412811522 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404687164 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.460554506 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.409063999 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168245152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.448663783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.405475062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402599259 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.405388844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404814582 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.428896845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404672732 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705922978 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.689597633 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.630324729 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.406080088 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.404121716 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.198339624 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.441562988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588176303 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420944282 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.405573711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686189719 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.62863577 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405909068 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405528151 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.40662256 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.684383526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40622114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733787005 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.999114 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409744247 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416475126 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.166127166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224840192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.404069702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.405386943 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.69807357 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.421404081 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.405675151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.405459687 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.405839029 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.403352929 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412257318 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.413560509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.404844612 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.404319685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.74697197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.602511256 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.422311299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.417517199 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933931119 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432033332 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406567222 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.411336647 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.40823557 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407504581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452463615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.408245664 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.435084999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.411396717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.412144608 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.96126377 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412450521 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.407005689 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.602943821 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124341109 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.413108408 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.408483796 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406997487 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.462424211 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966103438 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.4398648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.70852484 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.423930583 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.44796177 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405179896 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.425948096 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963856916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416523014 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407571316 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.137541002 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412157409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.840556531 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.407069076 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.4095147 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049303082 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407760795 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.413509568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.411235552 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407966803 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.72355846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.408968644 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.456032895 seconds)
  done (took 515.374089462 seconds)
done (took 671.342182372 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407770866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414004953 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.411909923 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413551734 seconds)
  done (took 10.930068166 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.424617417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.414915925 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.423281896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.41607159 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.422757408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.416362264 seconds)
  done (took 9.799648701 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410365185 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414461544 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.416848366 seconds)
  done (took 8.524691391 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.611962943 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.427787438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.756364399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.418864133 seconds)
  done (took 9.497373652 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.423542436 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.424252105 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.424288964 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.423482286 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.426425019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.4271655 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.424982917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.42519741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.426046082 seconds)
  done (took 14.108045054 seconds)
done (took 54.144975637 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.56959832 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.525301065 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.423856229 seconds)
    (4/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.387170503 seconds)
    (5/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.453803702 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.508380283 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.517078737 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.386726328 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.669149915 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482892034 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.586172614 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.446642793 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.410362306 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.437515845 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.917413387 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.441289737 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.39904233 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.725756594 seconds)
    (19/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.526627025 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.49363423 seconds)
    (21/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.387094761 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.527707754 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.563478077 seconds)
    (24/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.562021135 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.558784912 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.416321727 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.4393631 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.51916689 seconds)
    (29/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.388651451 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.389310214 seconds)
    (31/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.394615832 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.580246426 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.597277724 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.559430367 seconds)
    (35/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.57492873 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.563716175 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.497596946 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.451755921 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.44142785 seconds)
    (40/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.39021491 seconds)
    (41/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.396164452 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.481408724 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.489406989 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.498974571 seconds)
    (45/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.619330973 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.511228187 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.650312791 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.39644335 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.517054637 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.44652847 seconds)
    (51/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.450453632 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.389688173 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.395740482 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.66854493 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.566201342 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.773729675 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.679180469 seconds)
    (58/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.38957 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.600655375 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.524763751 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.527634593 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.396422268 seconds)
    (63/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.725304941 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.454224073 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.394171716 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.638875552 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.456475703 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.390757871 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.917880774 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.496346255 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.440128194 seconds)
    (72/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390608268 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.447433589 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.665133767 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.488631621 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.522866816 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.559632683 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.522607274 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.448058421 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.472855432 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.592848681 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.509363449 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.391920584 seconds)
    (84/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.526491795 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.392107584 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.619398942 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.538193874 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.521928567 seconds)
    (89/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.61987997 seconds)
    (90/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.496596668 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.501831728 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.714543676 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.52784162 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.508324776 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.627737174 seconds)
    (96/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.477332376 seconds)
    (97/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.443617229 seconds)
    (98/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.392987274 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.501485438 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.778240497 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.574612528 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.418690894 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.565320963 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.450727382 seconds)
    (105/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.492610511 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.522587713 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.393449674 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.499317992 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.39217385 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.662540981 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.449182641 seconds)
    (112/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.444626098 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.493353845 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.488280921 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.392845239 seconds)
    (116/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.653970003 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.399311369 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.405544121 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.699923921 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.421986794 seconds)
    (121/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.458373269 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.73386802 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.461340516 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.568362787 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.783586121 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400754414 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.400524109 seconds)
    (128/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.626213194 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.402863849 seconds)
    (130/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.452548937 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.394026919 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.421991246 seconds)
    (133/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.537364276 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.395588628 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.53949083 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498412671 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.548361718 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.511062093 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.674162984 seconds)
    (140/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.596334446 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.521349032 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.563870835 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.487177523 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.658547048 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.691587058 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.713132929 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.699027219 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.521006279 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.540862765 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.699945036 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.603617838 seconds)
    (152/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.488685088 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.536413828 seconds)
    (154/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.48934595 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.533844474 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.622446481 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.508591909 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.572721811 seconds)
    (159/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.51878933 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.563301156 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.400063664 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.45763176 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.482107689 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.629727871 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.638036213 seconds)
    (166/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.493608756 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.457788539 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.404860838 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.457101324 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.423967568 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.531103543 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.505188529 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.496403005 seconds)
    (174/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.51205827 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.525377464 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.661317768 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.481811824 seconds)
    (178/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.580131568 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.402220779 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.408744953 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.574277661 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.618715742 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.42059528 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.854883026 seconds)
    (185/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.546029066 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.781872589 seconds)
    (187/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.714864475 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.41399852 seconds)
    (189/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.541094019 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.767631 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.606685551 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.630133375 seconds)
  done (took 342.07284333 seconds)
done (took 343.35844759 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448204619 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.523353854 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.42844612 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.428036308 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.4290313 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.425105742 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.449790065 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.430735957 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.443144378 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.443385663 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.427011338 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.437940666 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.446298154 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.438429383 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462909259 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.42903583 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.428293354 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.439137674 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.444871764 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.446730414 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431164897 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432977983 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.456417656 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.430878776 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440648072 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438456973 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.435703359 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.425709815 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436594398 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.445247147 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.423418498 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.436985128 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.446357321 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.440324199 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433843497 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.441282373 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434704566 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.525497927 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.45240383 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.441262287 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.440515373 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.4440566 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.42715935 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.430685241 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434474446 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.450326928 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430986625 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.441002919 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.406633704 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.40303578 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43386893 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.427114917 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.422520025 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.407030436 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.403066114 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422272242 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.417448884 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428622158 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.415844427 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408356863 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.438949488 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425294247 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.416346755 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414261468 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.412638555 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.420576457 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.415094663 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.421740581 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.413844143 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408064322 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407993003 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.414571324 seconds)
done (took 112.502950604 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.527790311 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.402694435 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.563894597 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.414198031 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.571326427 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.530524545 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414165541 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.414696896 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.415079941 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.204368731 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.413393791 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.41461302 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.404766607 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.413038685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.528472335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.415263308 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.414470203 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.099606549 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.415509912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.546890033 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.405242453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.413708818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.415707658 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.205676936 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.402931042 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.39842071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.547614654 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.414990578 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.104904427 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.398852142 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.403148655 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.102965552 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.548214688 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.435755247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.423928225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.42387609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.572939955 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.417460427 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.533151675 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.531973888 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.566080877 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.453759837 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.399690035 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.406700694 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.418698572 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.417025125 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.416264439 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.443768497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.407669451 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.415951499 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.102202247 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.424997033 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.426008854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.416737014 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416957309 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.436642307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.41582121 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.4187412 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.548698546 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.418494329 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.533065037 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.208946031 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.20703882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.419245524 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.403957093 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.417948835 seconds)
  done (took 113.465151352 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.480242366 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.48594168 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.518915371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.41023736 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.461287919 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.519735817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.409249562 seconds)
  done (took 11.565157167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.415615116 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418181404 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.458042735 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.458451276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.41919933 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.582996325 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418563562 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.422296612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.417881385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.462105826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.419011722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.419886055 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.427582712 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.408027565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.457372631 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.42175097 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.530290504 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.411631265 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.419430149 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.566701967 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.418791441 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.427492302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.46046089 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.420926782 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.420285985 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.417994005 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.194900122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421042634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420846703 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.420524479 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.418853428 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477175987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419936955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.409046889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420740715 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525493397 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.421647569 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.419177256 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.420354961 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.41371415 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.419766331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.421469339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.420614575 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.419483189 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.419688994 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.437576026 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.421008828 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.420637681 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.420798031 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419761351 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.462982927 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422706066 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.421502311 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.421546286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.467234927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429813093 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.420731409 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.418098787 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417540421 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.418016837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.564939026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.456652546 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.418863379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.453270515 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40866216 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409208478 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.409778978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.408783203 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.494323822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.411699599 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.447920698 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.405162939 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579208905 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.422467944 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.405861328 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398753977 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.400145317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405650755 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.390059854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.399972982 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.400548712 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.394559794 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.400040211 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.401403485 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399331682 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547827642 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.497250433 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.397634363 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.405615214 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.397034128 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.397446997 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.43681106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.39317626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.393446661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435061981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.50536933 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.438543134 seconds)
  done (took 145.062574621 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394816865 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.39333844 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.385352286 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.407694956 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384691877 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383963155 seconds)
  done (took 9.610725278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383027372 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389003744 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387373339 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38758902 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.388958531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389485862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.388046114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381855566 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.39002673 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388028301 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.389248572 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.388623185 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390697573 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.388734312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.388943729 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.389176702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388688864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388588857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389020345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388348025 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377976928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389385069 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390022872 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380998227 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.392701998 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.388133818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.40475202 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.389756546 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.39060712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387135978 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393587446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389575896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382365404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386678141 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390835559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38014301 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389629773 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38771588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387136877 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386491546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38760283 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388055642 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387265832 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383707354 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37668078 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378574395 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387054199 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401257753 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.386511681 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384099647 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381830216 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382115531 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383324394 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.381704844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375676259 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375927186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385669273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.3809756 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381439142 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.373420237 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381408377 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38090294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373919305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382272264 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379814431 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.379361337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372558349 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382690375 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380588947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381022242 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380633008 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377953757 seconds)
  done (took 102.010501557 seconds)
done (took 382.992629258 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.757731879 seconds)
  done (took 4.008593007 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.378001292 seconds)
  done (took 3.638321904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.161037729 seconds)
  done (took 22.421649846 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.397061111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.402947902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.393321529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.384554554 seconds)
  done (took 10.837218155 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.642073849 seconds)
  done (took 3.902053819 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.393207955 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.399022321 seconds)
  done (took 6.055517532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.574516442 seconds)
  done (took 3.835776892 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.62517692 seconds)
  done (took 3.886836668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.409256306 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.401307019 seconds)
  done (took 6.080925592 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.358330749 seconds)
  done (took 3.619156957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.772637125 seconds)
  done (took 21.035399329 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.399105945 seconds)
  done (took 3.66286352 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.410365425 seconds)
  done (took 3.671147166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.845392617 seconds)
  done (took 6.1064494 seconds)
done (took 104.01383559 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377495472 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.378487408 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.380082534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.378195316 seconds)
  done (took 10.775809327 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.456628272 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.456079887 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.465234169 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452473833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.453608475 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.459630827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.436314551 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418859356 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.448986511 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.444157418 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.460556804 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.450622192 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.457927869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419570448 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.444348918 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.460821201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.447640625 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.46545311 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.430517255 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.451575517 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.396523438 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.452622153 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446053392 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.394950536 seconds)
  done (took 35.933313732 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878847827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456920248 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539707959 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.436700762 seconds)
  done (took 7.575451016 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.499193198 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.499402763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.516353119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.552742759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.60116049 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.511556936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418512193 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.412510433 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.399880565 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.496665229 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.581667563 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.494701702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.708505956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386108976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.704132935 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387864328 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388159336 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.493046597 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.541273799 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.565975905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.383435968 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.486292808 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.491026319 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.487511569 seconds)
  done (took 37.271123955 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.39213904 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.397201378 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.382445477 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397614364 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.383426367 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.384089584 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.384660451 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390879281 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.382440303 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.382307373 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.382306024 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397156551 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38224301 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.384460127 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.389058476 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.385260131 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.384640126 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.389209639 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.391680774 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.383365982 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38260569 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.389636832 seconds)
  done (took 31.773242397 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.367724149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.368200231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.7198037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623693056 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.370018666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.374335549 seconds)
  done (took 14.078587476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440456924 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.575814692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375280665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.715765128 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.800110009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376425085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376054763 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.611144172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900756595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892597428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435653669 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.4454545 seconds)
  done (took 20.198385566 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.370881714 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.37495938 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.376944102 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.391927555 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.428508637 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380645638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382804963 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.371746162 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.434617014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.432646437 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380500039 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.430030413 seconds)
  done (took 22.011772518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459430688 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378951161 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387203502 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460417675 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385502259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378165254 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.455435594 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091408185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391258541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65690165 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379068944 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46905428 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626973662 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380910449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386983257 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348944077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612504847 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851793767 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389262638 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390869112 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420162194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38548114 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38691655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590865811 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388942499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38034795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650903762 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380660272 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658104268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637783602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640587578 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390152083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657284753 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023031398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494383872 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58106429 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381096808 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388461641 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.352394869 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.404382348 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390019885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391272259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632134346 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391588427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380894058 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381974007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08453804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391017057 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.383539939 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384603583 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63357399 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474877802 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389227307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383900646 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417112927 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388774525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390497809 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518332057 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020742499 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383232799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403363161 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.39016682 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382707863 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392189457 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017570227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392336622 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392355969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391330198 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385103543 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384464577 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408342603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386196887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.407717438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385289348 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130723788 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392375391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388292458 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907872014 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387710517 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.393018276 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610753997 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386554236 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384432703 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.386246201 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386743733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10069049 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402333734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352265806 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433516881 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076142833 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589325448 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4153322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417203645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607347634 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.35392418 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386867506 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.386633447 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389362347 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408448173 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097137216 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392362081 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.393389871 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63619467 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.598675221 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395686588 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361672809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860044723 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392726625 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418792935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395706131 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594265352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.996531265 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648364293 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396531223 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429941781 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389972215 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161145848 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397084669 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.403306781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388099181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665006429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.187709885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395930034 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462242751 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390027087 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388418313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388894569 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407751748 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389440986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.568564987 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404781915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648050688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.392394485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390018609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.398584592 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397000772 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.393538144 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61195636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388349751 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688476161 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39145542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388880144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391510403 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610147327 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.39080983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398277917 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7296944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395153765 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401930254 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650610925 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425463762 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501797076 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423473647 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.39359653 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644649465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396623937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398147545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390208451 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409460337 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396971772 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.398736056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382396744 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014991356 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371473436 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395788647 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391975361 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407903208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467004034 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399742098 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593940022 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399403346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401262837 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400685895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403025569 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620897942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645876442 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.403604467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575684673 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860388888 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000645631 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41454172 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.39230903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.392589288 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392488522 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394081727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392242014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393683287 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594268188 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657191424 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398354112 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005712541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403067813 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40384188 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.408566209 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644535521 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410382321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394413597 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.397554322 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405713624 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402386336 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668411559 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62365068 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410370388 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393130725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913784005 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402683538 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395919568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395188935 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420827349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408033202 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231877006 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73720102 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395146107 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655768259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411065925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419417723 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.394586379 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399329669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407345246 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.418149084 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422451469 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.597883864 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403946895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406191974 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033254142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147279149 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950093334 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406512151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396940861 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401077088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114715851 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401728921 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39683591 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637410904 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112519709 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403599878 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865762196 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406090113 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14404346 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656604433 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624414435 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398542944 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.409000323 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659589364 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609857428 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423437826 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404448745 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403170842 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.366245825 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931039453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407619225 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578657487 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096540136 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404153506 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400050773 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.478305827 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408086626 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791201176 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404127928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399180435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412118695 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404357649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246367228 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402995263 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398415552 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033095399 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401870645 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.876819757 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405613881 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602691016 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66124156 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.630414131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.4004815 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.404367637 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651010878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65340723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407729004 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41373121 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956176052 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258522631 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.406590316 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398419003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175601169 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407681775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686031876 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.412583189 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405458986 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41189743 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401474921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399809857 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401426541 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406827555 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378204388 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871108271 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.414604075 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409682731 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419297957 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405851047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648747761 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41655195 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005839573 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631578198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392984994 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456822192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40717659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400924287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.37894448 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401433446 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402996596 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403544705 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62819853 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415534186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.377112705 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487757156 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620752816 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402836725 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402794136 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624842083 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.411746001 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401741023 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174174988 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440709444 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403503494 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410515193 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393365656 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447802098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478346793 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607651514 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.665879391 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665842738 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801743365 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409465084 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411956879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420295026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486395618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404357332 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411629954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.409477714 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007731021 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163022745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.024269422 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661708449 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415059272 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415909348 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404247962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647413994 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404314868 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680735677 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406066695 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399101419 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434431547 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404897224 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419260348 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622863313 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680080118 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405582773 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414164836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411851748 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406822491 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665224382 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626653966 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881245001 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938590962 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408847865 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405034022 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136407731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689146846 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406651736 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405441374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407281612 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.412495545 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421257348 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.421629274 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405151941 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638025139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660567348 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059087297 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66781596 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.431259765 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.406119659 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40709292 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661382753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239847352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6103308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027745596 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118132467 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660572853 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481743212 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611250964 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414575084 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645110731 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414745896 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407043536 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408065488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407254675 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.407202597 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.661212269 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025610005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66329109 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.413310248 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.413982867 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439551249 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.61326932 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638727221 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130838244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636175766 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668768422 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423750633 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408656366 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026596119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669906435 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413483259 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4177932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623718288 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417270838 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451545418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.288113949 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.410421419 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938838512 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.623536678 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431624205 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415301198 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130267605 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02619395 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416092091 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888789877 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419725853 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410325898 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693806739 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.418280164 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418864791 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697100401 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.415911342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413876282 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624188316 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.023816499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165025601 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.425703662 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431790627 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.414456553 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413355159 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468558782 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416467725 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412589368 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.805482703 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417651001 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412954268 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425173551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.416479971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423405211 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.418166662 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411910489 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421690807 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.397296005 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.405309898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426216242 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542572059 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970919713 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419206491 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.02912829 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748946227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66117628 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416136237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388327603 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420480785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415075049 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415603906 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414112099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405434229 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971545244 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.421099568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.678112619 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422898293 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625153261 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625823555 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414522781 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627668277 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425487492 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440721138 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.382017601 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413976639 seconds)
  done (took 992.756377937 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427484331 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.430546459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.418297005 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.406014741 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433997511 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427233687 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.431850758 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492566513 seconds)
  done (took 20.753152496 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418659241 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.42127641 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.420895139 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.414456362 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.415058492 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.898889076 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.412449284 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416503796 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.428441148 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415199013 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.414379043 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.036519008 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.417722942 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.415340877 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.413405347 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.41688023 seconds)
  done (took 33.062854896 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.132194773 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.434723993 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.972848712 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.447170626 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.447420746 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.406811185 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.554935446 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.40760873 seconds)
  done (took 26.09147736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422584827 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422396549 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423432175 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422595599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42252981 seconds)
  done (took 8.401185741 seconds)
done (took 1261.944472764 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423852006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.421964388 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42169148 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422727029 seconds)
  done (took 6.977797571 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.385389229 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.386270679 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385766349 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407548655 seconds)
  done (took 9.854687649 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09217567 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.926764795 seconds)
  done (took 5.308685055 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.944427101 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.934561294 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927606796 seconds)
  done (took 7.094134616 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687520665 seconds)
  done (took 2.976368339 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.36799966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.414825003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.419573868 seconds)
  done (took 8.491679144 seconds)
done (took 41.99125325 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413817719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.169818332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.566299708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.414826874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.568730567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.563484002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.657588964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409571351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413304704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423708949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415250755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.569697298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.648030862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.169392106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.648062995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.169552416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.57423435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42416753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410011245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410555043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.662583401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416456778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410368317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417023029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.576868185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558839653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41207937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.175345139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410159002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42618252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.558071535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419905823 seconds)
  done (took 83.78822394 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41058828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418582659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418698857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411902899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.426703266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417335963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413548245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412035252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413567518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411606435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411966354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426716979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413336587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411912701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.428357974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.412529968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426787562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412630948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414183243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42897649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414038939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412814424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.436194056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412737834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413607182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442256935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412911603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412575911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412562464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413988872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428328487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412953865 seconds)
  done (took 78.659533729 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422874351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412736431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419196871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420115884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413463482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425955296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415428613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412580438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412763445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419127488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413522165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414269107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416143736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428971298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417084292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429137012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422649354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419282587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429810451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414856324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415811193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426543186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413823093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415758451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.439227231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413648821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414238122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.4320389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415347419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415709717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420824732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431036468 seconds)
  done (took 78.727316846 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.656093237 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429252063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434148913 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.425757517 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433753338 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431054162 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.425070823 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.660658863 seconds)
  done (took 15.19046685 seconds)
done (took 257.655598306 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.423895305 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.91616668 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452278772 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.424232557 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448560319 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453967341 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.627337909 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45170213 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.615141836 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.426518879 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442250482 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.43846561 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.213332207 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.567456567 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.223087812 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.351275607 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.287931397 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.427788708 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.985257193 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643724368 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452647642 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.430269978 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.231991779 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.305315427 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.394309616 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491886282 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.487487299 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576064395 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54093576 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485919198 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.903951978 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432350175 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.434690557 seconds)
  done (took 65.284318578 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.424134904 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.432588226 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.434033987 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.433632241 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.435373427 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.435030961 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.42487806 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.432986855 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.434209654 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.433356668 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.434493092 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.435155224 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.436521753 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.43461701 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.43496487 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.406724399 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.425689734 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.434430581 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.424026089 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.406717724 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43304569 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.436407866 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.434565095 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.435083155 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.435360709 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.436006922 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.436370679 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.436040554 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43533472 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.435536515 seconds)
  done (took 44.24453801 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435245176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97298742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.162155602 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.440361371 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427068399 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432288223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.709286514 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443536407 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430183969 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431256011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.90024414 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445669387 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460163212 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.169322089 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433068388 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438748323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437483355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.428717677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.993896984 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442510341 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.710702855 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43840633 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.709709383 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.44648629 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.433536216 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43139824 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435252395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.236607518 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455890615 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.904340582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.190586867 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.710698662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.157522125 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.22321585 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.185676992 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445797762 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43990581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908478405 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43892824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431142969 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.708376277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436786827 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.17605348 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127002266 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446994029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.438900446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.248190955 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.907577869 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.672805504 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437572435 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.215671673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433963883 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443095529 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432255245 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.665121608 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438615055 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429532494 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275247846 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.436118598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.708596822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440927374 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431298798 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985924752 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431806289 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.980150567 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433620575 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440831207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432799798 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.177474629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.435545479 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.141636469 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448528067 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440591302 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.909097069 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.9861083 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.282497308 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.433706733 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9923585 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.17549587 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.727740558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437364077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.193327276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.729497098 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437955725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.44378287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444087016 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441058925 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.505776476 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.709462133 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054126811 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.131569035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282907124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.715644277 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446771428 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43317384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277758031 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442342656 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.44365991 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172316113 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145564668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451027935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44161772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126941253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453038404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.71701195 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440057397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.223583865 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.436407063 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510630961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.444138737 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442418251 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439217295 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715583707 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.439281072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444562238 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125630844 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.939875161 seconds)
  done (took 199.157032389 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.429574866 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429573768 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.429196484 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.429251298 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.427390394 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437709016 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428530608 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428987744 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435338316 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.427895464 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.430115037 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439121936 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435283816 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.429031999 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438024846 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.431000413 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.429412503 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444908754 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43001097 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430180257 seconds)
  done (took 45.945576806 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444973308 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981327363 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.955139611 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446526807 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445358081 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436856637 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.491573895 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45279716 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445822667 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727100657 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.602395085 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453737957 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446359018 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.4466108 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.957461343 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416507392 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.727517321 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982002223 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.447828445 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.981230546 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418190298 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.446369279 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436117098 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.982792137 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.737628525 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.717461399 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493550753 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.989587242 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447234759 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.446493489 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981404472 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448002572 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.440068297 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.967162135 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447549811 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45923212 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.446830982 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495766739 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503012714 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.737882316 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.988946022 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.725181892 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459156645 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.615710814 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.450960064 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417429087 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994020263 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448163357 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418649454 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449522037 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452410752 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.969414307 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.441189755 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.969701679 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.448284647 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449582084 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.984547605 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.967828106 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.960892391 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607703093 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445106044 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.719323069 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.449966494 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.995301717 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449487231 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449483533 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450180242 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.610324915 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.988585827 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.719469549 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.732488479 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732616186 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.449883681 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505733048 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.456023134 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732959304 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.504538467 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824733162 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.740457755 seconds)
  done (took 129.816339758 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717942665 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.558941615 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.818694917 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.007116699 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.93471849 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576321371 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.552054755 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.68604305 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.445348659 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550633748 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.080450005 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528713274 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.196746033 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.511079771 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.550634463 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57495076 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.8326455 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.406792745 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.076634104 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.054352164 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.4613596 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.544332464 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.974823252 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.641740475 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.437375401 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.017432041 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373195657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945301751 seconds)
  done (took 54.367537836 seconds)
done (took 540.109144107 seconds)
SAVING RESULT...
DONE!
