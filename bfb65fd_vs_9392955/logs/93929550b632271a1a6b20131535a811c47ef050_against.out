cset: moving following pidspec: 29934
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252637748 seconds)
loading group "string"... done (took 0.588855952 seconds)
loading group "linalg"... done (took 7.196920548 seconds)
loading group "parallel"... done (took 0.164775824 seconds)
loading group "find"... done (took 1.123900391 seconds)
loading group "tuple"... done (took 1.997389118 seconds)
loading group "dates"... done (took 1.289237868 seconds)
loading group "micro"... done (took 0.237122167 seconds)
loading group "io"... done (took 0.96170244 seconds)
loading group "scalar"... done (took 38.980482011 seconds)
loading group "sparse"... done (took 12.425523378 seconds)
loading group "broadcast"... done (took 0.978229901 seconds)
loading group "union"... done (took 13.166521595 seconds)
loading group "simd"... done (took 4.450723229 seconds)
loading group "random"... done (took 9.001932941 seconds)
loading group "problem"... done (took 1.972973045 seconds)
loading group "array"... done (took 21.270553771 seconds)
loading group "misc"... done (took 1.934562381 seconds)
loading group "sort"... done (took 3.230389596 seconds)
loading group "collection"... done (took 18.033010973 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539836751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140883155 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117375987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138981999 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183474541 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13191437 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145018816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085598441 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.06415994 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166222844 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138688337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483167644 seconds)
done (took 5.105785103 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204418333 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088535809 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095823922 seconds)
  done (took 0.900643912 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066009277 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128451325 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079926676 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067674981 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06679792 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080550264 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066638611 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065827341 seconds)
  done (took 1.278605781 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075832647 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068608001 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084319838 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067866788 seconds)
  done (took 1.019532628 seconds)
done (took 4.203655089 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.90384434 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237838406 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189167603 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461015059 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148810368 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189249838 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663332452 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32879872 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210724606 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100786173 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105119021 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384347012 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10655862 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657931443 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074827381 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105712554 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157188271 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444352777 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082883952 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082085641 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103703241 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144411838 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103619752 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079798149 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170879969 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069593391 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148033809 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095500708 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068097067 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243618606 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19040689 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679086914 seconds)
  done (took 10.493257573 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099625373 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116312456 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068335338 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138236327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100125613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086260994 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070471402 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082847326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091408527 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157344371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113334773 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105647797 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0817645 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06891802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099940492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210595797 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106180334 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084809838 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086475626 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076016569 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121596167 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081962528 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093724791 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07856174 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151311096 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194433791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110490025 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111349831 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068348129 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080363912 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131031879 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14188468 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06582957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081191213 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138973904 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110286891 seconds)
  done (took 4.541608552 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055513422 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159920561 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09089524 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151311773 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084575852 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109701197 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082574969 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099039915 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245399513 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.093536408 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.459244863 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128038808 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101519095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068043845 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083117953 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067698753 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.540303716 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143918369 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102254295 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102055159 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074309747 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085884844 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357858412 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069868922 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06598374 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084314104 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059576981 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145035676 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067515506 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214834029 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088771436 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086863886 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100730963 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196611956 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093961791 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12316858 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06623955 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081567415 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169110296 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073866168 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065926811 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105184059 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118347575 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104892998 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083479363 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066982039 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180539761 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066549293 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099581369 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.874396062 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166606571 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09578076 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085897183 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267209531 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102687346 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065773289 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081434741 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09136236 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25266869 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151938186 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066970914 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083296008 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066172842 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063310188 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084192004 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384027291 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067569975 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.692127795 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071168357 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076243933 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085579888 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067679023 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080457767 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072033212 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088362539 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08571532 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06640905 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080567022 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068105371 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081548082 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066269049 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067577573 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101406658 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204639074 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065975841 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083708435 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065002595 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101174702 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096787404 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085471221 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065212622 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113971477 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068445258 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066481122 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123402714 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067188647 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101446261 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08367063 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113285075 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081719818 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114799616 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066902018 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110794999 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071854375 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113419424 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092972245 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067402037 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152457406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064172539 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081884907 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067191484 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064557234 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083766319 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068412631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097877413 seconds)
  done (took 20.802932945 seconds)
done (took 37.615861571 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291806229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091217612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090704791 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077126217 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091686212 seconds)
  done (took 1.443879925 seconds)
done (took 2.218670206 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120126567 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116573519 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062770286 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111917163 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063863414 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116737618 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113751502 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080971642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115758735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064550109 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112595098 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064022552 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063130451 seconds)
  done (took 2.009442433 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08435931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084293393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085282249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081894038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078766957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082133384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079583129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104796352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08041382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086967523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064629112 seconds)
  done (took 1.680614722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08512864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08372542 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085284782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08108038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078370719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0819539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080215795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102329402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080279096 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088760976 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063616646 seconds)
  done (took 1.678939683 seconds)
done (took 6.131568786 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080336797 seconds)
  done (took 0.843005399 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.703854444 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.584194845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08347682 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13439836 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221338595 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153721646 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.438769982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109497727 seconds)
  done (took 10.367253931 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089835032 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085009514 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06953081 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084739247 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07037973 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09898041 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070942806 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071963604 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084529131 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072644832 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086720856 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071513289 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084566874 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071472852 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071882353 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083862556 seconds)
  done (took 2.105045278 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093762595 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091782468 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090835814 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075317629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088779747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072865177 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091961757 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074604818 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087351914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072636442 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090722184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074851418 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08776861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065120704 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090877614 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076749229 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086676767 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076275315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090762973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076615495 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091145965 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065701451 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087466236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074892112 seconds)
  done (took 2.853243937 seconds)
done (took 16.937948523 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13158521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075827904 seconds)
  done (took 0.979861923 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083265074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097364597 seconds)
  done (took 0.957893572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085160044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080662434 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089622548 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092506249 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081070399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066175143 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103059047 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067216139 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080835004 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065906404 seconds)
  done (took 1.589697061 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069428721 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092976984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070731641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097117538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073614617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080224343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073238077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083846075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078269777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079162474 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071450401 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098869296 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071902366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099958933 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073420185 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084595422 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08655474 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068390903 seconds)
  done (took 2.232344401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066764466 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067596782 seconds)
  done (took 0.913587105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06870631 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063610787 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08194671 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067714906 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079132707 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062793116 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079376069 seconds)
  done (took 1.2828382 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402538799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10873943 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243744847 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087759618 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102865213 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262528225 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0831867 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070716578 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087380941 seconds)
  done (took 2.267533832 seconds)
done (took 11.002065748 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080407826 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085578636 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110204564 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419757048 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105944848 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065961384 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132302658 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219937183 seconds)
done (took 2.003026003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126800547 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608286059 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400293417 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211804558 seconds)
  done (took 2.006428745 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.375892215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091314918 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074003207 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066419019 seconds)
  done (took 1.395598432 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066794078 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069893867 seconds)
  done (took 0.924444656 seconds)
done (took 5.239868388 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067535791 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066718198 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079650709 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06616215 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064509733 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0801659 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086781904 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083305789 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067039098 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066078857 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082285424 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068612797 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080846077 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063716546 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064197302 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082035812 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066139789 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064598575 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079026542 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063799794 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064148666 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08163352 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064480907 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063648994 seconds)
  done (took 2.540475975 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086390458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082697656 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07161109 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087685772 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070120525 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087036445 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070917396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067572449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087750232 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068575527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085293375 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070855939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087798453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07077132 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08351571 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070335799 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087548068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066840436 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068587895 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086537823 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071498671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082134748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0704084 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086651709 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070587493 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086003312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068382178 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082833398 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07152339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086083461 seconds)
  done (took 3.125048059 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072264745 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063571803 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080664445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071234573 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064407244 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080612813 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06392785 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080270319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064894725 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064680376 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081106426 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064217816 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06483592 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080700398 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064991593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067167242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096746847 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064108682 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079788542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064604304 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067078247 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080106005 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06427024 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079453251 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063494687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063500405 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080053892 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06398076 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064555576 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079573563 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066754155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06722164 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079869427 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070947616 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083324407 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064030211 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067790299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079286304 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064271522 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063583185 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079569597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063934726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063644874 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085835861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064213313 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081243475 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063843011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065106431 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080358365 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067674808 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063677362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079892013 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065945459 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080179944 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067867305 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063888891 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080066038 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063625714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080441984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063067748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063475532 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079376382 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066343161 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065090743 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09540981 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07120956 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063046769 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082291815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065160877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081788921 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065600736 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077416202 seconds)
  done (took 5.940466114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118625133 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0909042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081950536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065468645 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078631109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063902031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067748078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079830836 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066447679 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086023245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064790981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065631919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081919696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077005976 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080219324 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066153028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086257173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062260786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064463045 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083989686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064826449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083796928 seconds)
  done (took 2.478757371 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18959017 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087606299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108962755 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090739264 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084795107 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073582369 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069942611 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086041035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070671525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084755104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069335041 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085985614 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068266903 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084390803 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068889631 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084442373 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070723324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084408275 seconds)
  done (took 2.359908304 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079208142 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065850476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105590987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066218269 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082702007 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069278583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087680214 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075202047 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084598654 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067328479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090697631 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069215048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084349568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066440267 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069177788 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082339556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069177282 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081808864 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07486797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087286488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071434129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089833247 seconds)
  done (took 2.519388626 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083414874 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067664725 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101651497 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085319668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062597234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065015918 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089078325 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066911327 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088046979 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068134508 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0664654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080860665 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0716137 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081922099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07176861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082866594 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068477481 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066109705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084685929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063141733 seconds)
  done (took 2.315350615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087733227 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083362997 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178942211 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092517501 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068099139 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083949926 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075599784 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08413019 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06789532 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108353927 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06847028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083736464 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0769094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088916579 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069002108 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091750591 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076365696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092189743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0679286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083807675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108597049 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067971567 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092075782 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067942617 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083428161 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06820677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068362262 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088665293 seconds)
  done (took 3.179271706 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068284514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066736404 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079902373 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063769169 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064501415 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080978588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063825843 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063615063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082372226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063892947 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066319212 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081838764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067226854 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082282136 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066798664 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067239105 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082298811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063747962 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064158013 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079913581 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066587044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066452864 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082605543 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064974731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079933729 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066934892 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06473095 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080703452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066041074 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064166373 seconds)
  done (took 2.926509753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078351475 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090633122 seconds)
  done (took 0.976191473 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066112492 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08090885 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080968453 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07034091 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087299773 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067458891 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091922614 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070985652 seconds)
  done (took 1.420641277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08309461 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077776734 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084204319 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07873211 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093758593 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083348417 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149962326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083884252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073010072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081813177 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079693733 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065595968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08936575 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067249984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089041267 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072728644 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064221614 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08839949 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069031787 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081727043 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068170938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092173079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068754881 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063807233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085083934 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075600124 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094431832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068112028 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086485217 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073666303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072050784 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077064006 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06729857 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083602741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065026659 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091920147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081641494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085893398 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07503999 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068720968 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093105685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062357519 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087973616 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073704891 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092211838 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067078486 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067141063 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07859223 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065457249 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085166265 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062098369 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067042248 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077777886 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073516575 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089523289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077449054 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065716296 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084636199 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069386654 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086259824 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073559817 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084541668 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069107559 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066374656 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092632641 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071544624 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092134196 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062391757 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061103802 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081346244 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076810153 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104724272 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073408764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084020723 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067787204 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080794704 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070003154 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068334614 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088511777 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073574532 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08439234 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072663294 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090758843 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066852031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069953972 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090478688 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065849977 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085753973 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065969499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099865155 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065853797 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064334946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081768566 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077533141 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086702779 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067589478 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064960188 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089939813 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060980831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084173776 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067972033 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084166011 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077657125 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088472621 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072129174 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09162283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074774118 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067076601 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086173114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064217021 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084113412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065547843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074088197 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077864456 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069847709 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083821452 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06766743 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075020029 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081480451 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066974003 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090860728 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072495306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0818664 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063593704 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069731541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083325332 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069976572 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090777497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065683429 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061850545 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078365158 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06978506 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083221909 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070521758 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087926458 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06965596 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061940457 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081933209 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071041398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092243449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06784885 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06705107 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089094779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06783439 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082790466 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072896351 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085435194 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065901035 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07230983 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084513701 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06259768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086420844 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069647826 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065355309 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086862906 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070695513 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086051229 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067551743 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065276316 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088685771 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068190991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082973846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067307319 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082214728 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076852763 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069184545 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07894771 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064613183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090234384 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065375178 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066079051 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082212956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069249918 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084271551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065114934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065755466 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085669454 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077890178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087424176 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06817364 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088651453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077886553 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083261562 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069160811 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066347234 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084310558 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068335702 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092021097 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072242577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088332281 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069898165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063681544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088616998 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074537168 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082601987 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064976792 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065617749 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086880161 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072394105 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086959005 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068098717 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081378229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067266228 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070160973 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08624473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066719206 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082090816 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071097184 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065317301 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090764965 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067184718 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093253393 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070072921 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07888354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070248483 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081779869 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072312071 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061706119 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082399705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066481945 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067092909 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083124244 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06972092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077651274 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073757417 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091444667 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067669054 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066605439 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083176272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07382507 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085155006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070223913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069714012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089470586 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077301168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083031672 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070462489 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093574601 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067000686 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061013768 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088826821 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065995959 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08313397 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065978229 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065298445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086475739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07565686 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090144891 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061574311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085943643 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065596126 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065545114 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079461032 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072224813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086103977 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06750983 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07337085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084607896 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06848727 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087036198 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066745819 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067446895 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085309912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07027313 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084751624 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069105503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065736109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086930592 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066375572 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081594953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068850969 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06697747 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083668327 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071905841 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082568255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067295151 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069685775 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084473741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067869919 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084297434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066528218 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069211264 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084231618 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067070068 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086065083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062199544 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07399215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084461242 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074994493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084485878 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064215488 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088607468 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069816093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072688533 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084821158 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068001898 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085372202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067150183 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069540811 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091367516 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06520067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094504502 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075714014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084534533 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07002397 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067128791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086069672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06697188 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085014188 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068039261 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067014475 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083680056 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071909919 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086426024 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068136715 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067756444 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084365263 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067781873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085121511 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062189562 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065920962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083083984 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067253966 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093080233 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068015808 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083339513 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065487582 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068055035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082850614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064326071 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09160444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07565662 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085220084 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073934477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065646798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085637564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077334612 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078110095 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065461895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064751329 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082092809 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074612679 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084504703 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076354734 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084193461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065727572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064109381 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083652923 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065734095 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061280498 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08145149 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070530454 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08335998 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066186573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066918678 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087477972 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067623895 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093114976 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066054939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085195025 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066580292 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064630296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083190418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066078373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068958799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084767943 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065058483 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082296208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067200412 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06708184 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084981788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067374693 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085467008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07325631 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068664357 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086764885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070224287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078716107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070308862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083749521 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067136804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066573605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087331792 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070389377 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085149836 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075634845 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066557658 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085037304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067448233 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082424623 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066606863 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066402515 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08358033 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06681747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08528919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074561864 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064505801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087227443 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066531613 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084343936 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073747019 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084829509 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070018289 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091547838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067464795 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069356664 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091319095 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070364106 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088095701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067509786 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068659326 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089919248 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066488148 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090286747 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067933947 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067003279 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086572142 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06523573 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083929075 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066443296 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065294019 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090217005 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067405504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083205959 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066449502 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064882538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085063599 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070294641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091003138 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069771704 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086838746 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062575822 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06420709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085240654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065710314 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085537314 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06998147 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072578243 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08723999 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068074875 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082682144 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075826332 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072634551 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08860814 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065675058 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088398053 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068237723 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085907902 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068294688 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067673531 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085345507 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071074844 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085816156 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066214392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074451111 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08748949 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068720266 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086162657 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067785421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066815645 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079936043 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068508758 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086399945 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071342934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068988244 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084081225 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077359885 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082981131 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067517077 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088120413 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06656028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071701132 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079964546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06870676 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085443577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06827127 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062426423 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083570224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065173024 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069840277 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084277726 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062221186 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094315273 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07603265 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087077863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066257781 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064980667 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079404926 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062607744 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083267178 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067685184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068639995 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094475523 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066368494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083596209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062265479 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066704616 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086974848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070160913 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081561714 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062381851 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066048369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087396852 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0726204 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083396133 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067374383 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070196203 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087282287 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065296219 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088047583 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063791755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069625554 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097025011 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067295005 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08517957 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073442485 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092020575 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06821261 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079597482 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067697747 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070450399 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085234162 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068346327 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085574359 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081951863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088056093 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066573923 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066737749 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08781632 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067716986 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092928102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068463059 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068325514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089442067 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069440614 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092677724 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070941442 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092264256 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071213104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088332375 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066742913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068686356 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082947765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06691176 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067984772 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085351501 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071669012 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092611481 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066394208 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0951059 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076242003 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086834865 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064582992 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066390493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08433948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063108743 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085567642 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065914974 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065163616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083347493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066333406 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068232915 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0906614 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068342277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085931134 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067153456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061226182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087060553 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070060823 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085529523 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06525636 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067190583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085660991 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071149603 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088247027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066162907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068481817 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086801485 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068584046 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080249879 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074486448 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065874994 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08790117 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067448219 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085001939 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068909843 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070450409 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090423772 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068539557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087418064 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076264125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086954548 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065595212 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064701107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091014668 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066176194 seconds)
  done (took 46.139109658 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108569635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081845341 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062565149 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080492819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075372753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081626643 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062819782 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063955739 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081584016 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066639662 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080437247 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063255331 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089410126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086864643 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093017441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067781847 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081708569 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064327602 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080915648 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064428582 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090301615 seconds)
  done (took 2.482966663 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07721811 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089858538 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07422845 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095535721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068170996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090128574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07376953 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089932384 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095655834 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068179237 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095533906 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072496446 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086266338 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068473537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085120404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072038126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094880223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069031377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089431256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074219184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090130984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082199219 seconds)
  done (took 2.653345919 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06908171 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066332582 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086118956 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062329591 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065677965 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079856883 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071343237 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082150577 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070323813 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065455045 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083703529 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066271593 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086932302 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062635416 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067307755 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083249055 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132448062 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070514361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066067419 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08669933 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062601669 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087246378 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06298103 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062100222 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083952692 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07109249 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085401368 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066001844 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066426591 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084278866 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067256657 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082208454 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068934976 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067863874 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084068225 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066175027 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066819007 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084955337 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062596021 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082750587 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067870436 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062658995 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085523669 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068566425 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064587716 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083525566 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069150828 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084901256 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062063014 seconds)
  done (took 4.496507069 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086834158 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130319591 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087289504 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090128485 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101719761 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093038994 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073819439 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111049243 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063767331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084493195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083592754 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101971267 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085569002 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071499644 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092001461 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066933832 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067553735 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084441946 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070722168 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084639424 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070511156 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09260925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099143807 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080739396 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088399921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06654628 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084521458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071902012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098169396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07231008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09017085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072571169 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100245064 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069120308 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084865984 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069620515 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102876007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067308184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088301162 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065501871 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086996662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071999022 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091046539 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083674295 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086014217 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072191086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084687693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065130873 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098987203 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069153883 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093017389 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100348424 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071658793 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085383664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071397616 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101189315 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067858501 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083213144 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069759109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098286173 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064785932 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089272836 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081896107 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086945707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074769917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098918749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07203752 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089196528 seconds)
  done (took 6.658064453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077038983 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091636477 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081967697 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1003204 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091902964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073861167 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091435214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074698229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091040123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078772654 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09225588 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113055898 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06858028 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094739028 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073930741 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092565655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073783722 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092342847 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073390039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093136814 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091705708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081666293 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092208972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100501368 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104416521 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087276788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074981135 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090949778 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08169485 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09277263 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103018097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073930157 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091906695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100189226 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086613192 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092008161 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067423462 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092023834 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074113588 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091974083 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069436604 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099901626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073866476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087756861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073809137 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092248574 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100359687 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086068152 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094948342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096857409 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07416042 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099885748 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072908606 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092152038 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100520316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107738226 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101176732 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099582109 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073684195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101034983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100017 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108136588 seconds)
  done (took 6.360868058 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089181848 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094931247 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097415083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062633195 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065166747 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090249326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066021275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08333369 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077044114 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094377171 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078585214 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089456108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074574189 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09773493 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090407239 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074468409 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088991358 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071138667 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094237651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071992973 seconds)
  done (took 2.516963842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077606182 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103057885 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068708717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072747858 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08987363 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072162605 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088072767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070390853 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08691542 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070546367 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095601605 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078615518 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086931749 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073889188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09555036 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07311463 seconds)
  done (took 2.173117444 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080673797 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096183515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082115813 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085955541 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06639557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082401263 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066962322 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06303718 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082738372 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081914823 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086992864 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069984105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085739146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065555814 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06357348 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089138532 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063855465 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084189704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067291647 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100431251 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078426423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084415347 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068373621 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0678892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086771932 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071999862 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08643386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065395985 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084434508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068066239 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086500283 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074845409 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082513714 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066337684 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065680838 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083391576 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067945802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085373646 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070266354 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066590474 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083868652 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06666399 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085858259 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069305829 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082009461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068440842 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063382038 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091272345 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065284116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086432826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067396079 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088062327 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068880569 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076798047 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090303949 seconds)
  done (took 5.103390134 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082001241 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070093561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082188274 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065996957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088159458 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069665776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069758396 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087861568 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069197915 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084518232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069258703 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088154467 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069561076 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070417435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087824989 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071456288 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081671621 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069853448 seconds)
  done (took 2.251858214 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074150835 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067613967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09293204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068217973 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085550057 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070072648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063352778 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085453276 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066369147 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085496239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06739 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069541279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084442384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071285535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085835434 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068056886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068727042 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084791882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068308802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081307982 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069927859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066369117 seconds)
  done (took 2.521610062 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07348698 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093557462 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162586569 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107370844 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082911733 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100107002 seconds)
  done (took 1.496294868 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092648572 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099030134 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068393876 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107227774 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075833501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088315025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069331973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087768666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07816873 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10141031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06946636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097344553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096916894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078072074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094448801 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074578263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088194802 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069458995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08572053 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105629555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070338969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096242655 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070019737 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087197361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069425886 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095490451 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07878562 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102332332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088074507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077463124 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093035132 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069859534 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096357219 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101847997 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071174686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096092324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070277129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106348749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074570214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097032229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069509226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094473912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095552641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074617005 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096775373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069564252 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093678894 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068854519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088946674 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113312646 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075648694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097190676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094013808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078624692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095984315 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112813364 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082964706 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096550993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093217438 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082820067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09945749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074357589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097460422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101364422 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075030279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096883387 seconds)
  done (took 6.63922904 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084871372 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105847469 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06994452 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102353021 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096967138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06954952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087935872 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069947291 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088115754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069175128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130191717 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070504874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096819052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096059938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070004003 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088201698 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069353841 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096116164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069232865 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113249339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088153195 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077544958 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096631394 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096110328 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082746381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093477024 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069639608 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089053492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069481782 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088525935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074035442 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089061119 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096243295 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069073708 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095895161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070365196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088609634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074623619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088013383 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075802755 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097350392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105911117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06912166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088391046 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083157003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088380544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068448737 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089032563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069396033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087466837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082026967 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102903971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101839898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096980178 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06965424 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088418534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070582036 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088823128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069837371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093227899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078211692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088699355 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113230619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06996015 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088345075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077570631 seconds)
  done (took 6.527173965 seconds)
done (took 128.590399065 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201389903 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184931053 seconds)
  done (took 1.265072899 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071046466 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09623718 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09774642 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128369591 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087247605 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101470627 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118840124 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079997838 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066312802 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086796094 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067677177 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087618385 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13153347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067737181 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086815285 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0696858 seconds)
  done (took 2.331680786 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104468264 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197420013 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109150312 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066400093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099053013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078878455 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085929352 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077462503 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094538242 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066743848 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078019536 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096091467 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065296771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0957994 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075277561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098263149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065764555 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098119949 seconds)
  done (took 2.542064354 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104779154 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141286979 seconds)
  done (took 1.132862458 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201115864 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122842708 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202623808 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41810512 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206201026 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277265074 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172668686 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171759298 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.150734908 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169552523 seconds)
  done (took 2.975205844 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100215618 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170965051 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312711153 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13774948 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086738793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11615003 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138531867 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089541717 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10202998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10093932 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081481892 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09754127 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098629169 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095402044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075223831 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097439577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121826046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074641972 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076794674 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096742056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118055367 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066852375 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074749636 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094030913 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077223111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096810782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066356922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085586563 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076189145 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094621665 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078338106 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113876791 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097347719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132707996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082164119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131935013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09754404 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072684393 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095114191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073322387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098098434 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077830912 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103665343 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077359479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08633035 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077921657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086408594 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067281475 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098656217 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077721131 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098776311 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078565147 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130007568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097515924 seconds)
  done (took 6.237618088 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.749870012 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111113563 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094002727 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.811820996 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089518194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106275856 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718078276 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117221207 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208004387 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.773733629 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088747121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098144691 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182040677 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215481279 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948565018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291634094 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648125322 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10485446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108542596 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132328871 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140710599 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180488583 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151514971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.405747039 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075565518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093028399 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138247283 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074629462 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139765426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105741118 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094547758 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155022092 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2282589 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157693887 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097530107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071039603 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092200177 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150437419 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225226985 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196040511 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159528812 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06900199 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091691105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141541475 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131965551 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069228591 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140979009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155592003 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173018331 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075067846 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074457019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165333963 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14306732 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146601895 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103095459 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.277085103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.2879734 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071306003 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121679354 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103369527 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218892677 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104775169 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203882957 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14162812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169455585 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091823315 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733787802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149422151 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092868297 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075201734 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120274059 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073372564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163128831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124670186 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372235299 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142926661 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096622361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070400893 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216341674 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085862443 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090973427 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143004298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076261451 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122641838 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144051163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166090747 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149260859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216875907 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142537627 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138680206 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094877921 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124279412 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075999069 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190073223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197644169 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143928814 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188449085 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139766174 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161492178 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149635313 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076368784 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150256912 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119949102 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100592322 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139039173 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194136602 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.103932787 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10489392 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072834301 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162250625 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.105198782 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107642463 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140810386 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.14903519 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45431996 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151183766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067839945 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106929959 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141694925 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141956127 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096515429 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215506116 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123359106 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147962334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121820394 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067165786 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120529415 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139914697 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100378849 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122269294 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139455572 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09850792 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215416122 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.171734626 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097882417 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196742013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164959069 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074418464 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171203976 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120003666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146495485 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078570676 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138288528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097087416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746442215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167348681 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101401795 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096055694 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165548166 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070802634 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103799053 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083671445 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08972643 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737307656 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10710047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079538405 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104881089 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073359322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12135135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136425544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095675463 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139155042 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205609975 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075856395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118557246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103806568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13999068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074677251 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104575404 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082092681 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107043785 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123071543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072228629 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106059594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147284907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140866551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196308996 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543839699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092608898 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08282209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205135175 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069567402 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268160686 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138012606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20394989 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143466849 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101217967 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.259699992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143131509 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168533028 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106998583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153852678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067760868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136699053 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166627027 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071172204 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096274207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142102218 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146775439 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143188788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940172093 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071517553 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202881717 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089330583 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151038587 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075476051 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097879255 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247244741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093063669 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145674638 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142031743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096042171 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082983823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69528543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084279742 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139480819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09696834 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198090474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144042208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138783313 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137724109 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074941048 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162240478 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188545865 seconds)
  done (took 40.59955336 seconds)
done (took 57.971598988 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259619892 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179166112 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244019166 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144472757 seconds)
  done (took 1.812503583 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144701044 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104963032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117489596 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085888021 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103561273 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086346244 seconds)
  done (took 1.553192077 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.415526692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267221642 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231713813 seconds)
  done (took 1.827309501 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284761219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213057565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449031948 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298440665 seconds)
  done (took 2.264961612 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177534362 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113887176 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067545889 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106881607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158956265 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254412305 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127846889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187708577 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079411699 seconds)
  done (took 2.233180786 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199155735 seconds)
done (took 10.806152207 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.257606909 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.236575431 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.291877997 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079203563 seconds)
    (5/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217240544 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115092806 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.193953466 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072187911 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131778509 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20771566 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078684627 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230716373 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075880297 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167137791 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114320058 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.154985743 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.16798343 seconds)
    (18/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104493451 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.223494308 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168465388 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072943438 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193360328 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.17745245 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 0.126995808 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200368304 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098458633 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116970519 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089851935 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.195085702 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114559631 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169079754 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136658464 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095810311 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093324834 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.231432678 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073475498 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118223909 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095676573 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051439017 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114319062 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070005215 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12255754 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.148094729 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.206985872 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137684472 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125844421 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185709325 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217533406 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107059908 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085643706 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074163504 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101197651 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.261839902 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093412105 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106219452 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136798789 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096868813 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077966042 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097947636 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09975594 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092907974 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078661754 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160820244 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068909 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075878962 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096050395 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090225384 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076208949 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066450987 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110603401 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073397153 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052408531 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.111660681 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070385745 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076346306 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122403093 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111779285 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09694452 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077653768 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191296358 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054031186 seconds)
    (82/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09088704 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.067166939 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074126263 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110610541 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052421661 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.122563032 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169482924 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051380559 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191819796 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112118343 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078018135 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075184703 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.222830547 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.15772093 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125467566 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082207079 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090814504 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080101988 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.178375301 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067633927 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142949761 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204926919 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092279281 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092748222 seconds)
    (106/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120490347 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113244009 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089204057 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116836084 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066729699 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088789174 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073424072 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113184473 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.170582645 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116455593 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076520115 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074833437 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062833066 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104562381 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095040618 seconds)
    (121/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051838267 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168029232 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080803982 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066308083 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089424665 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109743894 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164238113 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080399834 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133053559 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067688316 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074298485 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099302344 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052034367 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115157819 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062407574 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10903009 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.160452887 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075918111 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07053312 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118011214 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171022416 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072683569 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159438398 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074064645 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074255125 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089619355 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07505234 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158010049 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 0.165662714 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07244062 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095400616 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134366706 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102289895 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052323648 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140873506 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126197874 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088846398 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07457984 seconds)
    (159/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073001978 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114676591 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193182408 seconds)
    (162/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05412692 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075404175 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074283694 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052190792 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137542592 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.138339216 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099227277 seconds)
    (169/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062869386 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052263771 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099925024 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065783736 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160251088 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052889952 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075990046 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087891108 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067883443 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066685922 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106227579 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052469318 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052408741 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07507961 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068181929 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136272894 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.302191482 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053823981 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097631711 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052880756 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07218063 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099134622 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098360795 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194598209 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12067764 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.0693547 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075811099 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098312812 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090111378 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094409526 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052518428 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051441425 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159667347 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110620037 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074381818 seconds)
    (204/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074303486 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095230025 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068156379 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065923146 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097816028 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077423469 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.130795333 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074995624 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088448843 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087086546 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053504803 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198663151 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073275703 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097516579 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073843153 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192592497 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052541458 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051578907 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100781172 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053789194 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066581687 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154435145 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093707361 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060957755 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053455578 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053296254 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090440568 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065677258 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113163287 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062956592 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05290299 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051227283 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089404238 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066295622 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051749945 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100244231 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163037005 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079640717 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052812539 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158986426 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06630364 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170365927 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068141837 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089754471 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061142681 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061623741 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075547763 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053126166 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066491809 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.084641745 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065943932 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054493025 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090712676 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051350273 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07481748 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074091374 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147265305 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190020371 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066149273 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160269802 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066292907 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085374702 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053134836 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071928015 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118771152 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072447319 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089468317 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077052129 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053630231 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095116258 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176785102 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075201613 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067135115 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053017237 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090926543 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075258158 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052245301 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089130816 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092257786 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 0.148504294 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052740485 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131079398 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074660958 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064616879 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08899719 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066211155 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088278735 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072491266 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053227343 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051239576 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088035625 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074499491 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096503781 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066399687 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071543443 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120307198 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070197002 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091663076 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12130116 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098512547 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054103451 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072092909 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097650853 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113112613 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075675289 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052480116 seconds)
  done (took 33.264809812 seconds)
done (took 34.18920109 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081830734 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114497278 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075206682 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116484348 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081707046 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101024811 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073635341 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07942817 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103765811 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082475261 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102578058 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055321734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098626772 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076301656 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098637632 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092608502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103381514 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073498741 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074296496 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088396289 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075226592 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088478408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067648029 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05543992 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100916301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073019153 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072723102 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098129024 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066042331 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088648205 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069376469 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073808039 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088484022 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079944793 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094557898 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074172567 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076186905 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099633044 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068487573 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088308781 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074276826 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066528686 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095211432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07434082 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071382625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094350675 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075280716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102618695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092384057 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090511252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074168055 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100037424 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077690525 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072420665 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092974519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074912657 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093954014 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092610445 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09730633 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068967337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074146798 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097531016 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072352512 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096962347 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074633572 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076794779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099251832 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07229108 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098394034 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07154559 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066327692 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09746318 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069654637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066122541 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09962371 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077412066 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088271212 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072411247 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072975377 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095300875 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06629165 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067807567 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090675084 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073217935 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091583113 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05567683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070831499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094996139 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065941452 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074963908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09458953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073780594 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068242971 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100212605 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066023363 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093952643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066838969 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06652466 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090846004 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07050747 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065580438 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090906255 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075662556 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09024078 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072139336 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080289992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08966566 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073557897 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088163627 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065553352 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082815324 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099651858 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066546841 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091738429 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065124785 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073409845 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088246873 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066214172 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066734435 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089353166 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071790872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066313884 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091376427 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073861425 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102683704 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066106809 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069932144 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09101504 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066200512 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071845123 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089447986 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066672178 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08662031 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069110504 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08948225 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073084131 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068351111 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097953055 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068528977 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097545627 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07096492 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073238752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09431265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065740639 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059794524 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091631284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068313085 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067820437 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089323016 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068373308 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066662286 seconds)
done (took 13.260006021 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067811195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169753498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126858115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096369999 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111716445 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067697853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101221293 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104899246 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091787682 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128532916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087629624 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108625039 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114958481 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088903335 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067138346 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070870779 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090775476 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089867009 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125726906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086542753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140370153 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088364553 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121509294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090829974 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113094969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095496405 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090442454 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07118028 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069984514 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125649113 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109186937 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069744447 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066875442 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124590318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12131662 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085781264 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089565967 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084723413 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089054894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066970166 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115344228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100681377 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10623757 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083091433 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09315776 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069970205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090828652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087240856 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113927397 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081548166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112446583 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135003577 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069864166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106542183 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065960511 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111356722 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104724753 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068715592 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068364603 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091541315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066343418 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070265554 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112809308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116810518 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070808365 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105883555 seconds)
  done (took 7.302519862 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086788429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117714357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085275245 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10852662 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066807373 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067066719 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090763091 seconds)
  done (took 1.602739202 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068966254 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089624366 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113699888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090259309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110258792 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088342501 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10015232 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067624086 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108084244 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068439736 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087903685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128714417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091369011 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074676189 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09156942 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091001312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091117218 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090981339 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071116278 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114953052 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069739554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111571898 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069156521 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06777619 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105548768 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06779155 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139580549 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072564885 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091606084 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071190637 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066143399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141620315 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105410411 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078540201 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067713674 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105381057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083016336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088904154 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084634749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096132302 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08222345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068268515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092518811 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065880435 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07232666 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101803566 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068838032 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091421234 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069919673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088051137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09140328 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082024537 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091367659 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071398939 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069191683 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097118019 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077466879 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091766634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088436151 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069366252 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107661442 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084205273 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105182978 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084622994 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09359199 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081472051 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105448417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070215791 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069213876 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094129203 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08444569 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088830276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06960446 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07863586 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092654091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091646625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114921389 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069387472 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100975063 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067836497 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06822346 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092128802 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090970161 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094807976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068477698 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071923104 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09466079 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065889785 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067058728 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094964885 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066604129 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091705921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071027646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068843902 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093813475 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085246363 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068624418 seconds)
  done (took 9.348815344 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070676015 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069106595 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093418301 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068125384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069198847 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092435496 seconds)
  done (took 1.460632698 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100301104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093284505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08226949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096832886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107071213 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106060018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083583945 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107590911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086086878 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103632277 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082982418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106673054 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089015123 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097331998 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082849265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097215235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083684926 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100827693 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079643107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098227404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088605421 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097622355 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07440544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084268353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094720183 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073385126 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101152878 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080221854 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103517801 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083837829 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097601305 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07187175 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096278076 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084482195 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10634893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072700785 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096252475 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072499169 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101341179 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070870443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10777571 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073814815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079840989 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09568456 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107295162 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072883484 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072313184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101483102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082377531 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09613863 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072855494 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097376583 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07157578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096022393 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072682867 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107071927 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072008924 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106968524 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073656804 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07289237 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094068857 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071302303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107018353 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071930784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105118565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072723232 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095645809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074704119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097828901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07339073 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071816501 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093945813 seconds)
  done (took 7.393707237 seconds)
done (took 28.089667861 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660316951 seconds)
  done (took 1.649923296 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.770955659 seconds)
  done (took 1.763271121 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.998808874 seconds)
  done (took 15.997301207 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.626556064 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.777335771 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818295445 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135153468 seconds)
  done (took 3.349106899 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892641773 seconds)
  done (took 1.91490432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238533175 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227075499 seconds)
  done (took 1.465731473 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.741348654 seconds)
  done (took 1.748172446 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.2976467 seconds)
  done (took 2.295321643 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326738402 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182297949 seconds)
  done (took 1.519286588 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523585501 seconds)
  done (took 1.532501671 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.00900791 seconds)
  done (took 8.021313561 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233795049 seconds)
  done (took 1.256770097 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270820034 seconds)
  done (took 1.281071479 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.189876349 seconds)
  done (took 4.201505531 seconds)
done (took 48.99620233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079586899 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082923784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105165761 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07931989 seconds)
  done (took 1.352375161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079027758 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074295175 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101457323 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07365321 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102101758 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074031126 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100016226 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07772875 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073048324 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099019499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074400365 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096622466 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076926958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099858959 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071149135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076935944 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101159931 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074055419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101116566 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074771756 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072371495 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099094094 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076518883 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096890402 seconds)
  done (took 3.064161559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079322744 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073442593 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098653774 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07353588 seconds)
  done (took 1.339108972 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0788766 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11723163 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089646561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102068503 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092863233 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111779093 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070230396 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070364616 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096740503 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080897972 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092910293 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099168083 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112252794 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078032911 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103751556 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067087442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069956691 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111424403 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078458303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102685921 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071125201 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077562739 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093251725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091704918 seconds)
  done (took 3.181127371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079076354 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105167171 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102417942 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089725491 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117862821 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066043531 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100933921 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091952297 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149230832 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066395234 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094795539 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066937734 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097168966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065434643 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077736102 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133536577 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112970233 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092861824 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097489255 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090554336 seconds)
  done (took 2.922776644 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076917257 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070513386 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089704106 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069112095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07687086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097947313 seconds)
  done (took 1.502163012 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069671309 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068010109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09142 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067099522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072142654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091460561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067187144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067267815 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092078008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067610834 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067027482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090490548 seconds)
  done (took 1.932023168 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424992751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068810787 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092317458 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066026883 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071896944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091616007 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081059384 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068431883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115840335 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067872996 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092208427 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069905742 seconds)
  done (took 2.336160195 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265069549 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077729858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329115705 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169846332 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139972896 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15699564 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105172489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140301523 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198722102 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138322069 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201241605 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225787587 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134327086 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168972481 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115279114 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107669261 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211277785 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225584072 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106122941 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226065247 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208049517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1570357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181990577 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1289302 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135718808 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152819892 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072885761 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105977815 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234993531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161777655 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203330623 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139866448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098458014 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232883188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227568485 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197619808 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163826636 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085704644 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158137123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166659995 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257949763 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115027812 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195071618 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134160683 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106444079 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173242205 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147578831 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147364936 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137434618 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115992442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175224885 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241919389 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166767613 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111894577 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137886485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142261463 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145482947 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103335942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244552954 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218555829 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159147659 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096338277 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097979521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212683934 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160921356 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142607909 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155529194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119788844 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170369842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213547289 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147461903 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175225252 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182205095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089181107 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146455469 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196072532 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156960726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203881438 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178447323 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07359938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153960939 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13012133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082591896 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168567559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076011236 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233203382 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125434852 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139118516 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139338292 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13700648 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111451086 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221211126 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204111281 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105258578 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091023705 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1301397 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150712973 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177885241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114031492 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136144307 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148359011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079893088 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167290595 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101286208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155315312 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07980678 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179001289 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166322557 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076685751 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153797642 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129232888 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129062407 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166015255 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221578057 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091127287 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108600576 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2016214 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180905937 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107523621 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201817782 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190538939 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128386953 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130786251 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20735372 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245488568 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090880861 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226189204 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136819855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084912309 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114863943 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156150309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14115214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150845285 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084824698 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178036383 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20220578 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101023685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0974726 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191972658 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082965358 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106662687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140834414 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128439479 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096460456 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128777714 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135441761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171334472 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155090458 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134091163 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155444125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124787308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227001743 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116075813 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131609888 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105934769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095121477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166689475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192271097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105357237 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226649635 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156977909 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132256017 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148235087 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084025787 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17020493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105576129 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072126083 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199878616 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138802432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112078443 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211422912 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131902602 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156905205 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153841618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163651699 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161746898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186830165 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108592186 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113622012 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141400773 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155113049 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099606957 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096146875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109109614 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132167876 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098748346 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109890271 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174116733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181462302 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099557585 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140725305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12520322 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181463102 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103236678 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16026298 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148555127 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121689676 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186815992 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213901369 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165809507 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127234019 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17569705 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097023404 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075218961 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117695993 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158205961 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109739522 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084800363 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146516814 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207202743 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159255336 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168503857 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139383822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151055459 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188383407 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097222159 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118461384 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205310038 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154421441 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156169777 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091045523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125425543 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17625517 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136078176 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246285106 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144612025 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156371709 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209442956 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131242181 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081968012 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130781709 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168555092 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133125077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208731712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126630018 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090717444 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138888426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10849305 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132999626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15845225 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150571022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164745125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145223839 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189033891 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079024711 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146510564 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153092197 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152184836 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091220058 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149755267 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221450312 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096787936 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146921491 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212474954 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081338828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158769397 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237953983 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202306274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085379562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139067134 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150766079 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158896602 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148014069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196952292 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140176318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166099752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113245331 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112310206 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114692078 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099401679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134808656 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123228803 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14015633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145664713 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121618723 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161884484 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140867807 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139630034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147998372 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099925196 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118902178 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125782555 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211832836 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151334305 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236815824 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129264953 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209796371 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202772304 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102367802 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080964628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107597892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171544533 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112641253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165440558 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12422632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107041809 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157602887 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200502922 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096858394 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094833517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138406894 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167186014 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140799674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126462289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108035035 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223277315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131544682 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080980817 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154598417 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133076115 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131271573 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23732786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062802336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125200241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076648354 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107903746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159596086 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216550213 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0843201 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15398859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149736248 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151667383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160338167 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130856463 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099434388 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141181725 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20960509 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160371551 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117481509 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114825279 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186182776 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18915954 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134956602 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123866401 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23453884 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187647446 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224876246 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117222365 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146424021 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144793685 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112230969 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216048428 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111218232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202261563 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110989774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168295409 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133062622 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121938472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160040304 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12544162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089100081 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208078861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149759451 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110156225 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081203891 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148424322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152292877 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135542991 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102244686 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170688054 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073128583 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194993279 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205392125 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109306864 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135250146 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098207239 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109390399 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137640402 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133067292 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114573073 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123173774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232989134 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119871324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184398496 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200363157 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144603862 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169522262 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127854595 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664404632 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079785126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215251615 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146838458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239821714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125810605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14882563 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140144062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153600537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177095359 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133082571 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205399954 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16406214 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150764097 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106266118 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132169126 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140290985 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09252479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135650827 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144493195 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145784658 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129510647 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151700785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157330474 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109482039 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097117738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21867775 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146796087 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174984064 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19943405 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086221705 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148822418 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199906909 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081551291 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178800385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190283665 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13737373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126795044 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083157816 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134600082 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233959731 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100426295 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197128995 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156503401 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139331919 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144022821 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176383901 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16451024 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137920981 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156661381 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123334186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142309544 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145936789 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086257161 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105766235 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135346525 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142282042 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101114295 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131707898 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145002705 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186995442 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098881276 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098725526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131537904 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175440834 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240685879 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116919411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111186043 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14966801 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144095411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145916785 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156211468 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083395453 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110479481 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110690558 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113839769 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138855157 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144225265 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106202006 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139601167 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228060968 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113053391 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226712563 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123743803 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136080165 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070713895 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107399898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124232652 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099599087 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136708036 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126330953 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23606467 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098569142 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118777978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121310366 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074949001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110485234 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160126058 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140079715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152287061 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127260632 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064388032 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139144411 seconds)
  done (took 71.830978449 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134759731 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104116436 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117884659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173137311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145578057 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23957423 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181205703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223831102 seconds)
  done (took 2.424992503 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070625156 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117768206 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102994984 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116911706 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090410024 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069002387 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301139058 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111237577 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067013039 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116922058 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120819204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092220218 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473427401 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066776396 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095557413 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085337306 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067837893 seconds)
  done (took 3.260551602 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433441629 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.637699883 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.454996969 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073015399 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.967748631 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107107464 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.479361718 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163141394 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09192803 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433569624 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72984368 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149883254 seconds)
  done (took 17.825622096 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07593885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069627987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109999299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08333906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098585367 seconds)
  done (took 1.545289698 seconds)
done (took 115.523284483 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081133809 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346311021 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053579161 seconds)
  done (took 1.541788772 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08463617 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085354404 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110943712 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084131819 seconds)
  done (took 1.48038509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075510183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07739038 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110798043 seconds)
  done (took 1.377257996 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281889859 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166806809 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089653551 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084541009 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078099219 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104550029 seconds)
  done (took 1.381538333 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073864392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075593436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099198136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076488208 seconds)
  done (took 1.430485257 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077754585 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052970037 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054851174 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082088204 seconds)
  done (took 1.381453343 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09064427 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106159878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080698767 seconds)
  done (took 1.385659468 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10942037 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112703834 seconds)
  done (took 1.336842556 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082957227 seconds)
  done (took 1.189911376 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093326936 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141071422 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157764364 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138804476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166451909 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138031712 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086972465 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115471059 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104670479 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089505784 seconds)
  done (took 2.346438109 seconds)
done (took 16.573820017 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078824721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388365712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360426869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116868047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666946546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356372119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041224893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119327576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120867687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094656959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084102638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674853078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966260262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344943037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953288865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32337791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674552571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067860141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09374216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068116178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.99923778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093797792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068247562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068310388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674643191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371648404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094748034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31859942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068021131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0959281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354890892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094415458 seconds)
  done (took 15.999689234 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071903848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144227695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073306231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083411627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096579016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069864862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098379627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069172664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153827927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067514594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111551296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068557063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098358862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068995969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087223464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094725234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069239483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068496437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094300372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068262449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112801575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067878665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068442072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094744042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068355347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106393355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068941282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068431322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094663641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070639571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09698698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069259524 seconds)
  done (took 3.860149855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1160985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153354987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074830925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129397008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113881817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097531974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170279359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093385014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155213021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06792966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11078398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068387809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128148194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069331109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114604377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069259803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069547793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095630232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069152413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09484581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087524089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094954863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068406583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069004511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094922283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082696097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094680276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068335754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069394623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097053067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072486323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095135094 seconds)
  done (took 4.178189556 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073898328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075615706 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109026837 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083907389 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096288758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071955162 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073262947 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096597952 seconds)
  done (took 1.797271023 seconds)
done (took 26.951656774 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079929601 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070999171 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099461364 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081133061 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09961768 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078931065 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067786009 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10163749 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076388744 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072705533 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102262084 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068135339 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09761836 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067403755 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074129756 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094033542 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08000673 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098635154 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079865056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080080845 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09725916 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077182542 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101573359 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079680098 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106474319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079797946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082752801 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101004896 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069824104 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097095651 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076786545 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111011092 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069021531 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079883259 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094721022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068241229 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068056862 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095105909 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080334804 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100819309 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071559248 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101013703 seconds)
  done (took 4.691489657 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090370907 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090992788 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11249456 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065603623 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098503681 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065276696 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115406119 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064260253 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059322004 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115904927 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056299182 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059586353 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090179623 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054569479 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059346532 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056597305 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088878135 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056625329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05933351 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087131951 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058784248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053981622 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087104081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063292283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059145946 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088742671 seconds)
  done (took 3.079595201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077650626 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08416754 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11536095 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128185141 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13289554 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077496936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105759062 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088485097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113180987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067626159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07195724 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12340538 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087802542 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101470163 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068655144 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111970754 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082456688 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069223443 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101546384 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090836523 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112015355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079016224 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120769404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081497057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067692116 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098007254 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071908453 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109571933 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07331682 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077281725 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099758198 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072230559 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09701916 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079392828 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073188731 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096449414 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090833097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105286292 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078232865 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068567285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099039797 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06960983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115721504 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112947138 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095391701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074965766 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076392403 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105411106 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067909777 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113688171 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07780404 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067630659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098422242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067054967 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095045761 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082332805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070391393 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097692004 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076978534 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098279296 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080387295 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071641536 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111681075 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068212254 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10282843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06737483 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069377923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095161625 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091325703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069303237 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136553708 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068916453 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096398825 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07709006 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102932592 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074066418 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068423042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110777703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077768692 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098795938 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076829245 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07104999 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098689894 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087176468 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09743308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069837783 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069259108 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.110967428 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070425619 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095819433 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081007722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068345169 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09837665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085141041 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09492052 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069166832 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074160966 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100816424 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06708713 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107683659 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073516999 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096823989 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077503997 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067816761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098982285 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077780845 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100376914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067136454 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072418885 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102671275 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069001167 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069173739 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099344631 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069925674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104856108 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073816778 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073012312 seconds)
  done (took 11.370482993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193464253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186741436 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070186716 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180448078 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076512306 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109091712 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179529675 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095823337 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097330995 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068746853 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069094468 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131594905 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125508112 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106475497 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106723112 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068691553 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115208838 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104308881 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182355814 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175328366 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116596542 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075757711 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069838928 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099058869 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06992935 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077658036 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113335575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076942289 seconds)
  done (took 4.286131557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083797975 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129117167 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074736698 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089055915 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120070076 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069048053 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102333538 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069514413 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109518324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079905336 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096766751 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074257348 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074768386 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106994668 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069333825 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106656969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077983895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069741825 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100046156 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073598924 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106654477 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080371458 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100482945 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067879512 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073990511 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096151 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065284055 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113814211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067907673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118683579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06690948 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074265012 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110076377 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068570366 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096534447 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071205726 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071050827 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100521496 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069947628 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066808964 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095634628 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058004915 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066598003 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109207216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074383961 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08847616 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074185341 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073534048 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10123742 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065152858 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099529571 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070237346 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070709776 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105868139 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072459412 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072879374 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100928916 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066116971 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103976524 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071669898 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06433437 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095916464 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072715222 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067469695 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104809138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072784167 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095619263 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071419698 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073629818 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103565029 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072287543 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070880001 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094644993 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070466674 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101694777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073377313 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072022932 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096005337 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067999613 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068619625 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084926266 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068036311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053948992 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100604502 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066815692 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067141445 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09935147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07400636 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109755943 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069464522 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103128463 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068517949 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067100309 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099803641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064040557 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071081734 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112311045 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113241853 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067849614 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066428039 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111371487 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072696154 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067619277 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08547244 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075191499 seconds)
  done (took 9.906739754 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098821004 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093520175 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099064064 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083744839 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125147953 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093665573 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105221193 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074134932 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070099238 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114146685 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069456372 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105210191 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068784421 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07710841 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12549519 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075049894 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099252414 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07725755 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072638792 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136246123 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082951656 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111691793 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081321505 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097873369 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072836794 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080332091 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124747059 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07999699 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107985425 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085428031 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.0806798 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12385853 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086006276 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100895161 seconds)
  done (took 4.33640296 seconds)
done (took 38.788418711 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.223758412 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414194572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195906278 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.106863649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.209246815 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220385683 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209814944 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198534995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.52909256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199470778 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436912648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.878884033 seconds)
done (took 58.96701031 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.215914748 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335799769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470401276 seconds)
  done (took 3.947019689 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566781008 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.102645195 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455709177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199724141 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196156796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.517231964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.802299546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.056135594 seconds)
  done (took 27.47093923 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.203630795 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.560512743 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.586752571 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.558745437 seconds)
  done (took 18.053146394 seconds)
done (took 59.395541985 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.187202436 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247184915 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.242435012 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182883443 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305503175 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217687959 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.462111414 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.397444348 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.200415116 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182658547 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219075931 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.21093541 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199679279 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51587235 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210899785 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20567082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.229351881 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.624337523 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594379176 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219191096 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.217259143 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.264291086 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212792215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.200732337 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265511255 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20964235 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202851859 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.222387455 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.493505763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203453421 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.294441865 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.672128683 seconds)
  done (took 191.455277448 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199194629 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.29896441 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.342429743 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.25657111 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.785457847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394937361 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335626756 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.844352682 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.214267175 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205564253 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.488474891 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198232575 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.513927763 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166702777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211822989 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.276569301 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.510657908 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.500206747 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214868855 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473930913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204612184 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.536394802 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.474261127 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.417654342 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.202226276 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.309892114 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21083246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.2186141 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393128299 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.451316351 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219080852 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.221726557 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.773376797 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061215281 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.218965958 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22613276 seconds)
  done (took 150.712080967 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.471952108 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200292559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202937938 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201000101 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232149608 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203116599 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.744248876 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.742524221 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.704735807 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.397878332 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.261627617 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433771527 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199962234 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295147621 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212956431 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203042216 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217040187 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227274418 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203306537 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203367679 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.745047248 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216298614 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.222129898 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207161026 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204669297 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233255284 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597893975 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200793221 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233426154 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521466371 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245642206 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202308346 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.504678335 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.439909473 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310192238 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204723828 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23475428 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203607106 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473913195 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202447893 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205536421 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206577169 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789678311 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203365302 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.747036453 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205034793 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082773501 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202119506 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203493514 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.461901335 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.608146302 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203661321 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204376147 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206109459 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203154852 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204848026 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235449683 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204537107 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.449985289 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303519387 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.20701386 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208763246 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234139039 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204355414 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.204874824 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.369560473 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206136378 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.451151444 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259064639 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309398432 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.747096487 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205517976 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204000301 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297750076 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321580456 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204810924 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205741824 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207362074 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205393523 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205858153 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314026141 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204208785 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.600712008 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211430066 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.207541953 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264899667 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301027222 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204799155 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524309288 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20711368 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207044975 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89136649 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297160743 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204761382 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205380149 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206800016 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.597579681 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747537651 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383276647 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207928523 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.476324227 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208337198 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.609535449 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.721982256 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816567292 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207278299 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313679631 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209504157 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207668539 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207442984 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.23499157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208375985 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268984491 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204645362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604015161 seconds)
  done (took 344.721511525 seconds)
done (took 689.502426944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.874008231 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857781902 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.968307505 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.855828438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840731193 seconds)
  done (took 10.546133859 seconds)
done (took 11.694846913 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.393700758 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391463578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26684158 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.394633954 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235961548 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408696554 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375117508 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227318038 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309329215 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282219839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308973807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256164785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23498647 seconds)
  done (took 18.235071171 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55084216 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512094528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274169538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515475378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253408987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51691348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400086552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405419696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398567401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224361405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224405315 seconds)
  done (took 16.427268014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516188739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512213676 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278053102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524677812 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252934239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517566598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406156905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409414493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39895931 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226450057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222705341 seconds)
  done (took 16.417749943 seconds)
done (took 52.230967387 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220016713 seconds)
  done (took 2.370151168 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250498168 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415021168 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.23339274 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222142206 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220468111 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.220160528 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221447832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219623609 seconds)
  done (took 11.156616498 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217143879 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217475311 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21812734 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217441593 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216917312 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22109876 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220154108 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219330505 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217646864 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220919721 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221456548 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221729428 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219752549 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222399654 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220912497 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217603757 seconds)
  done (took 20.663366054 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219880173 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216796894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218378662 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218940726 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218267195 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220181931 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220631507 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219996617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219369505 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219436638 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221221341 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219839156 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21986508 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219824729 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220055911 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220245983 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22054067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220080404 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225015667 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219839591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219460013 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219385575 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220141143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220225214 seconds)
  done (took 30.434694343 seconds)
done (took 65.777718739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.322020291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.871735747 seconds)
  done (took 9.34770914 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218884639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222466165 seconds)
  done (took 3.598731607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221938268 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223554929 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222971056 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221754811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222792662 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222537739 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222870283 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2208117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223233233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222970689 seconds)
  done (took 13.379736471 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222571665 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222534072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219607111 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223779794 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222802722 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220866461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222970609 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220778666 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222380856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22117736 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22257001 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221998955 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222946284 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2203073 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223250358 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220215204 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221434095 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220101508 seconds)
  done (took 23.147745772 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224213545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222743513 seconds)
  done (took 3.601806913 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221169135 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220984148 seconds)
    (3/7) benchmarking "month"...
    done (took 1.22068023 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220626147 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221938149 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220873831 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220962249 seconds)
  done (took 9.703388385 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224986819 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39801123 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.480715513 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.822600887 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224225009 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226975894 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081140247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230060706 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229573984 seconds)
  done (took 14.076071335 seconds)
done (took 78.00874058 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.241982104 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.216063362 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152282874 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236874571 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230762001 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.515370752 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.259327765 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33879248 seconds)
done (took 37.349594358 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.233383462 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.920461321 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.971797095 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.216195359 seconds)
  done (took 11.265139202 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207064094 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.145255708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214129336 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237226637 seconds)
  done (took 17.962838509 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.84629977 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548935462 seconds)
  done (took 4.55203539 seconds)
done (took 41.172176575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222786191 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224502769 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.221421505 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224091257 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.221687244 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223084254 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.224649461 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22479089 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225115746 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.223341899 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.224504925 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223515747 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221404123 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22343574 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222943163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225311501 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225768944 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.222430175 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223302735 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22282359 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222955257 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22510366 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22415749 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22358055 seconds)
  done (took 30.524182466 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225036669 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224194267 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.225425257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227879478 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221798798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226900083 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22601545 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223902334 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226142842 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22564036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223338824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223899012 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228153857 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227100166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226656469 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224349926 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22448132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222390711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225500553 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22318279 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227338691 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226214801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224713284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228745869 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223750529 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224708934 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228542507 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226213952 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228084331 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226212152 seconds)
  done (took 37.924062391 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231098885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23378876 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22803359 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226699954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227307204 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227709399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229935503 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22813495 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226774253 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228642624 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226919965 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228599401 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227939411 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227562488 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229439018 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227467657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227658069 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231257576 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227584351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226523254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227814947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225682549 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229289355 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230959593 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22806424 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228661211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228191114 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230003016 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.228554828 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228372624 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230312699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230702266 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227844516 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.227124857 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229913267 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229075842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233956957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240052856 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229810445 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229627831 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.2296645 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228787653 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228477197 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229940135 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230472455 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228812917 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229915117 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230558276 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23037414 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228556676 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22934955 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229012946 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23041798 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230001327 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230647893 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22916997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228873262 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230994522 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231220157 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230152808 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230807294 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231483745 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233128437 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.230700574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230615297 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230321058 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231710671 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230632785 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232173069 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230180035 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230480091 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231307365 seconds)
  done (took 89.692883482 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230058389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228436479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228332353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228202105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228940293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233005173 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229300536 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234425529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227951776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232287976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231377312 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229058194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227896724 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233476037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232633894 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228799715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230475835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228262541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230746147 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232296324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232772008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22916337 seconds)
  done (took 28.230805126 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229904132 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231843003 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230415604 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232487706 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229142272 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231520648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231945379 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232254236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234429636 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230117364 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228948466 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231363093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228952859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228819957 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229581614 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230373885 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23574297 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22782095 seconds)
  done (took 23.319062737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231598081 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229794448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233016947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230523967 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232470652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233062465 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232914609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234294585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234007549 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229798332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232953941 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234974875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233178967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228708635 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234841972 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230319625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23239309 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228666383 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234204654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230802265 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230206367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232888777 seconds)
  done (took 28.271380189 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234302025 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235975595 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232379936 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.231127696 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230521265 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233327795 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.234022592 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232176726 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232357825 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233450237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232154122 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23496376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23060062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231968415 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231419157 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233668305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23466015 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232657564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234058629 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232085113 seconds)
  done (took 25.826189359 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233589294 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235840082 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236364242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23389578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235011464 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23615714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234914377 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236172464 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235568561 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233955339 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23785106 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234752023 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235233437 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236521891 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235126879 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234773602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236261493 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235628291 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236698262 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236948288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235536435 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232841525 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236818995 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235066653 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235826535 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236426647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236834439 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238279192 seconds)
  done (took 35.763798953 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236424994 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236993339 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233769289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233532429 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235029831 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233787163 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237093698 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234299286 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235129323 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234023263 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23653985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236723383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236427261 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237185967 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237649246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236439042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236782495 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233918665 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235456235 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233462217 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23981485 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235893634 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239154649 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235072418 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234474357 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.239275409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235166532 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233983282 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237519419 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235933373 seconds)
  done (took 38.247176019 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256896277 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255619743 seconds)
  done (took 3.683310573 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233821106 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23916415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.239726171 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235784489 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236878215 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237793234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23849777 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235967114 seconds)
  done (took 11.066884148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23658074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237518216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238581161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241578307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.23883878 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237897114 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244185373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253841921 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237823557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240434157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244086526 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247903121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240855787 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237391258 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237892307 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239003532 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239101855 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237975867 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238682507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241807785 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238058767 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241340208 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24005773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238105463 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237389794 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249799509 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243684604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238871602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238008083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243315603 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238808007 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236877233 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239552126 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239498201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239722917 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239133822 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249314145 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255408906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246491612 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241020159 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240600464 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236873563 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240321708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240544362 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242899849 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240155287 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242289311 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238171971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239834534 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24198804 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246377854 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238382455 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240630462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24200617 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240057963 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247265615 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258261525 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241124473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24958835 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2496879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255911647 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249299917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244667248 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242192957 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249874804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265593518 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247511904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255818169 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241691934 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242516329 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245945245 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255140398 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25190304 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242394928 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241770073 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241840332 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242081605 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243241858 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249723343 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261616629 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244365415 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24060524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251034774 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26504633 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241558278 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241767739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24281858 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240857129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241982209 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252059931 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259225216 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242782492 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243488901 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241564863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242978067 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243320985 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239041237 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24430756 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242117693 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.244685067 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244060168 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247081409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252884868 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244283802 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244032546 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250395777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.245285305 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243256755 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250264086 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245268045 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243328139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24356078 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249525647 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242724476 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246913686 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253092031 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244260987 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242529422 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244327583 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242767648 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252235777 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272968173 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244841082 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244203824 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250165305 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257673005 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245406459 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246393301 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245374229 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24282425 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244456286 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247328911 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247915249 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244689446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244366065 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245747975 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243063594 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24593207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243757434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246108178 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247103552 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242610775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244553136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245066061 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245429066 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244504844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251432938 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.245346135 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248210581 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247491582 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245135767 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246461178 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243825032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245385547 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243243178 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244366925 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246598958 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24602947 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247529954 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247242736 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247607388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245628881 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249506003 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247216516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25002757 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24397772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247619854 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247596802 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248201604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244798305 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249843874 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247555809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.250844087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255350552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248571085 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248320269 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25047791 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247665479 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247818606 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246257064 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247266891 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256101898 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248292885 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253820851 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24945657 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24706996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25025042 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247960707 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248543062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247999819 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.249740034 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258821243 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26145635 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257140178 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250190534 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25499316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249817328 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25235617 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251739279 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248693217 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24822481 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249147454 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246530965 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248784531 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251283901 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249326492 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2474287 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249531444 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250703749 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247762567 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249675879 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249179695 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252426229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247230879 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248972995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249480662 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244803835 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24782184 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24705797 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247839557 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252128136 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250845817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254329786 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.24869312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249221121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250487661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248965562 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247123926 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251531423 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250105311 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249623484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255587169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262778827 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249127113 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256399155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265055624 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248277146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252258247 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249930913 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247230271 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253859681 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25911519 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251375661 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250838782 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25266182 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248861454 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250574071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256827496 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250057208 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249582594 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250245175 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250247403 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249055772 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249642308 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251594029 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251293683 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252421993 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252463169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252586142 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251944567 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253938053 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250568069 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252106362 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252854933 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260098479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256640904 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251714091 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252059483 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254716929 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256198269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252538335 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251886052 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251569108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263529003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261044806 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256076844 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.253758441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253658213 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257303296 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254682642 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25502727 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251342911 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25278195 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252428856 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252552784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249036075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253746325 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252676648 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252428623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253849155 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259399047 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254432664 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251884225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254412949 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254146203 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252159781 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253802294 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255810442 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254540935 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254799485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252608978 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252185226 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261010602 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269070209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253902299 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252668521 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251606617 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251866787 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253635938 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255548078 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257477816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261585426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25561794 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26297502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255162654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263029161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256333807 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255196428 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262635233 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252718307 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252223774 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254140708 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253804481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260091086 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268034013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254908505 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258839287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254399976 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25439845 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.254796514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255098478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256142514 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255345151 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262740289 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269909225 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257717007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258046359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253818054 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255878822 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25655265 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255952568 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259475506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255843443 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255105729 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.256551369 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256825798 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256983307 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255186433 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257798712 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256542742 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257702218 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264116678 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273005381 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26136004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256796368 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26404246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257814251 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262211378 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271140348 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255570208 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.257856763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257734447 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257149841 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259577079 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257094727 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257357657 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258088979 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262359333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258061645 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258355339 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257840978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258630311 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256191793 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267637695 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284411996 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256341191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2646035 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255565256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259020872 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262886223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256458168 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253471519 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.258747425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268357203 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267914485 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255826815 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256584585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260194461 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257951113 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.257578651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258093794 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257718416 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259618386 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258737521 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257431026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262859095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259597015 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260211841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258937021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258371454 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26908399 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259351026 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259207847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259282764 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259583715 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257546388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258609307 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259174377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25955957 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26026075 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261591765 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26643385 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266612036 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262046168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260479195 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258618841 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259287139 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258774776 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259626098 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260456514 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260347145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26193811 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261288208 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260618735 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.257290607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260846093 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261325164 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261238504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262034883 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267542369 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26013149 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260399806 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261840888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261426321 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260464555 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261073252 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267244223 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263110978 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270703167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270875066 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263747061 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.26043752 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264358038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269886729 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.2602026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.260206067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261661496 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260282886 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264678924 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265830967 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262182975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.269450778 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.262924637 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259344209 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270376744 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277251464 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262196721 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261708081 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.264923614 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261656486 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.259171532 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263740147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261774707 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269201561 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279064277 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261762309 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26554695 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259515243 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264598976 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266936456 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264494874 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263906007 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.261901214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263271984 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261873663 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26393568 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261061098 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263389961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262852936 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.265326405 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26985367 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262030812 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265926448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261947628 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262946589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264534477 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264669868 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263534228 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261779047 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262074839 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263304118 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264037398 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266857559 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264045009 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.264422213 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266545212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266095642 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266262156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274961794 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275097042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263138319 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26418088 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264516225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.266919109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264586664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264583367 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264637296 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264853376 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265455392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264124543 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26652856 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266801676 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280549671 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28221476 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26662289 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26323767 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266470769 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268300715 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.263333276 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268216918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267804283 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267960192 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275404416 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265001453 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271826962 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281020066 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264277607 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271702372 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269232441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.272956003 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269492191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26677676 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.266171468 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269046132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282790808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267682608 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274912189 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300307399 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281536209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267571873 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266095112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265267761 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.266139504 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26696148 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266665273 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267815701 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266349866 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.267834287 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26578395 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272483587 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.267143223 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266867406 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269766003 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264541739 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267650593 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265129361 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.267615324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26747359 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.266822855 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267678144 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268724894 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265221309 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279674598 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278619788 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26848863 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267117263 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266257877 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271089967 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269799522 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278762438 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277650008 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267161072 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26700872 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267350128 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267952318 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266482158 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268334631 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26741466 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267620817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268303149 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280285826 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279116556 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272402167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267925209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267964396 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270203072 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270344326 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269146489 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269164163 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.269646887 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.270015378 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2729555 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.269400852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.271397511 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271822229 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279786169 seconds)
  done (took 749.674778523 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268451179 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269147701 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26815372 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268309817 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267707124 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268383084 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267916212 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269068532 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267639706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269118073 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268761163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271601934 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269477893 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268302067 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268466884 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270529862 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26916146 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269022082 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269696908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270040936 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269486959 seconds)
  done (took 27.849523816 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269768272 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.268576345 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268016705 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271735696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269183206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273889781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270386246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270788283 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270098258 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270101771 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272347789 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273057448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.269356141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272077677 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27045035 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272971066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27388941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268380877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271437249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26922643 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271805376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273324454 seconds)
  done (took 29.16478345 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271315774 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2710843 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268283887 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.269978708 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274368789 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.270529727 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27451493 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27127933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273831264 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.270286184 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.268877922 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271415611 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278030957 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.279073208 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276969326 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.274065204 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.417089464 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27368049 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273528928 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271375117 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269918927 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279388541 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.271164636 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.272324501 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.272713781 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272951372 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.272622941 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.276726485 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273468679 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.274879044 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277597941 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.275000107 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272470811 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274528547 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272841492 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.27192116 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.278669219 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272454593 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.269860111 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.27622967 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283174134 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.296436157 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27376454 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280710943 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.275498376 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.275771425 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276838956 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28389685 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.272016381 seconds)
  done (took 63.801636941 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274892988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274118171 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.271705372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276056137 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275364422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275210246 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276524874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273884394 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273963723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272726318 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276826762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275067305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273063484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275354274 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277244461 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272214514 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273808952 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273756296 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.272358384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273807706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274054214 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276403451 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276390358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2747233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275203998 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272913376 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274740101 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276180291 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.275349456 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275431447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276836396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276772532 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279414276 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276427006 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273027071 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277682175 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276640883 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274401983 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278501587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277440132 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279757651 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280634586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278229217 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276750198 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275332371 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275688666 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276356408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275720441 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.275289691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279234518 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277712175 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275710961 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277555548 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274216052 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278131915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.278640292 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275245168 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276824942 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278561338 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275827593 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277004252 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279678697 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277607125 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278890793 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27893544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276101508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278102211 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278914208 seconds)
  done (took 87.982099643 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27679579 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277058837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278388041 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274714495 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277777722 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.277938904 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277340835 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.277561416 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278502735 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277512662 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278005303 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280422903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278667924 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28133933 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277198498 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27773393 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27801611 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277951077 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278993761 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278894289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279037516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277641966 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279675848 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278563633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278798428 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278787915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278945811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278063391 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278119541 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279201959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278707856 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278525162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27867941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278055185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280363587 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277116639 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278582415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27839535 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278218058 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278520233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278696806 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278254304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279256022 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278879017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280518329 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280568722 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278457984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280318917 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280189255 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279782926 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279315777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279979714 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278990105 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281524909 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279737727 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283522631 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282143078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280437421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279941704 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281317802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281147996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281774835 seconds)
  done (took 80.509765282 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280694972 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282457327 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278959071 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.2797652 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283227131 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279603765 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283607337 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281938317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28158684 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282087793 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283125756 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280484506 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279652842 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283175449 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280864971 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280057061 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28047401 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280999292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283274486 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278986114 seconds)
  done (took 26.838939051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278985852 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283329049 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280355425 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281544142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282196258 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281256891 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28438764 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28445186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278784038 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283295117 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283862326 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284125619 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281442858 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281872688 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285129756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283897029 seconds)
  done (took 21.731549437 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282030909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285114469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282827997 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281774895 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280177317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28108726 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283935859 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283465508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28149161 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283031657 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28451502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283803931 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284289756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282621873 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281740834 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284341434 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282815449 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282860906 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285249312 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284376386 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283956741 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282678887 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285560823 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286022872 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281601776 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284533232 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282427379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283035179 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284265268 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286356217 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283561331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283498126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283774383 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284515885 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284968251 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283349627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286984794 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286663579 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287297448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287316333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286304526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283285354 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.284049501 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286979093 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285558894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.288154791 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.282941236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285824577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283641428 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284006372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28657125 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284494817 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285300564 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286393444 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284130955 seconds)
  done (took 71.848142719 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285636436 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287232913 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286462542 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287568219 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286868443 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283973988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287094163 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286124107 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28370136 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287393476 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286363683 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28918753 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285593173 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285883988 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285605709 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285874989 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285014439 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284993184 seconds)
  done (took 24.368793955 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28525579 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286837589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289241138 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285167698 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285869928 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28963589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285486147 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.287022161 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289054248 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284556126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285331671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286452569 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289098833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290029718 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287104436 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286369182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288900919 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287736362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28658132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286505944 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287799478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286933282 seconds)
  done (took 29.534791757 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.286877059 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.288505595 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.302265281 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.327878532 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.32072021 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.288328015 seconds)
  done (took 9.033486738 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286778264 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289777702 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289556645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28999717 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288893448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287598555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287191199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285622488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289833449 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287982346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288618543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290386577 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290214412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28735788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28970404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290254192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288262918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289187696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288781269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29321344 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28701625 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291048357 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289188074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287743734 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28957068 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288595464 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289574614 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290122229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287008116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292960137 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289923544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287084937 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291839343 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290318086 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293016828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289890949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289133378 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291440884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291053559 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288613563 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291335258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290378394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292657062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2894513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29164501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289792404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290472518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289396534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289813756 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2916427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292664814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287305741 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289834782 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290883698 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291360619 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291381657 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291764892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28754919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292760896 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289283526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289970819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291914533 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288307405 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289968943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290455185 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286181847 seconds)
  done (took 86.344452342 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287734493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287939029 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286626751 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289759468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289270628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287827266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287638819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285856018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289069769 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285942839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291909301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285874098 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288524046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287752389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287633713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287677104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287561285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287698221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288346307 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2919317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288557202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28770561 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288263062 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286745786 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287107466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289357763 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287927653 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287225937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288265622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288063 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287967669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286923226 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288685523 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288103311 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289386229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288683821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288900277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288716793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288128636 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291775272 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289331251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289977274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288710568 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288920904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288017792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287679219 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289051624 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287689055 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289553614 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288544499 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289734694 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289969135 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290852816 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289570337 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289612598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289478261 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289160743 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290340928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288753336 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292279633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290969307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2904246 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29203528 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290394562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290772457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290209584 seconds)
  done (took 86.283098311 seconds)
done (took 1748.671801294 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.286006781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.323626586 seconds)
  done (took 13.830294931 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453885841 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404796662 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289564742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.340059674 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288302523 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298306585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.293437929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288243866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291051536 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289910605 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289875464 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.479217137 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.289523035 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287198123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290184394 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.37968973 seconds)
  done (took 42.477292263 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320372281 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298414734 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408502214 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309954688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317612811 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47398609 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347486561 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.29357816 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.469182335 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335079397 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.919015022 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318075507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293390208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.446448727 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313398924 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472377936 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540946251 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.917436955 seconds)
  done (took 30.018223517 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.740234678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.287035549 seconds)
  done (took 9.250974963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.310885487 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.30871386 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.301017101 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.324739725 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.330909274 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.3307582 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.346050373 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.346845503 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.334257421 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.356521043 seconds)
  done (took 64.514998675 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31313115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292788048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294147732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.291962603 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.284882219 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.28468589 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292433585 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289206546 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.86422229 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416674141 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305716362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.29561253 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29293678 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294857656 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291747348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331628337 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.443534469 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.291828752 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290596551 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299775277 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294636785 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388869649 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.333838099 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291863699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.417480956 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.866383684 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.296563885 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.300325704 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.410293228 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29281674 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291138145 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293080197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29460733 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.870503065 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.792993805 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.299770597 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317845628 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.302706335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293135292 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413628332 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295600413 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301390277 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.28658256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.796752356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.453303011 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.40929273 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.586630602 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.2987635 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.295466943 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356778756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294044886 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294658363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.322906845 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.06239581 seconds)
  done (took 109.104304089 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.318774866 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.773767189 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457143812 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303954771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145231626 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.918938921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.283395888 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56751735 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292007269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285450231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.565325709 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78879658 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29215508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.337888056 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870947903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320741025 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286745612 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.196492418 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286712672 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.284017289 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70233412 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300615018 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298337256 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.374415187 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322138851 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753572197 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.695170537 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.769309108 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289641516 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.282360435 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751156208 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.293106904 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.322370431 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.286064637 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556719555 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641971008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618700977 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.28731543 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29679596 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288154813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.310282919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740869424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623422524 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282589348 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.281781139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.739863746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.283071268 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.28762049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.291025137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488570229 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.188463619 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.279870795 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.637807546 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.28144494 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.617774695 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367731232 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.339203224 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763182104 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283050394 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.405585837 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.280527333 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282804111 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281796591 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28532018 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.283398768 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.610474779 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.65735419 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.284532306 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.610903779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.716223626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.279520596 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.777143462 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.198464409 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.29666228 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.318505082 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280012978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.978097502 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747514594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321394525 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.275824164 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586595218 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278453986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.544194097 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289142633 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273977254 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68690392 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.296607519 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.303096956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.274524118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287441259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047294738 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275520016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.525927762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.32840105 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.272880322 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.275414121 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.29185241 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272448195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272887306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.275321806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755387422 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.272817173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.402476038 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289731578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272028946 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288211703 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.275411517 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.272688022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497820059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.766912846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275159373 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.272901851 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.273127391 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.271778069 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369147989 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.277808684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539856534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272247265 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271036883 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28768187 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924412772 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298720896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271919809 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.29000086 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.112928116 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.480083919 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.287724405 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.272701944 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274335661 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285551053 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.478001583 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.273143724 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.343945105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27613257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932688399 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299261348 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.306333012 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.826666027 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279528368 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.176428619 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.293829977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274402429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567126193 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529690024 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.54097877 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.283160205 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.273644904 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929577533 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.283782614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.419301086 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290776089 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307297 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471328075 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38052229 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273758889 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.83816921 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.275272585 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490601334 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.275980562 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581513723 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.725434046 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275307009 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279837512 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941647176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924887686 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.932283882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.279850295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532471857 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.242895502 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.731381687 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.275989453 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.275496375 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.850447573 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275590404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.274385199 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.275337042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.276788519 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347930794 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448460651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.953691006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275420241 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693751852 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337732726 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27586174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278835692 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.277280415 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.62850241 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343933783 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.277260744 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.320990392 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274518014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2822005 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707340473 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.217992843 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.276769419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.426515154 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860253783 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.276367413 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.276714594 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.929817015 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561527233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785304174 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292197611 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.544404718 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.279063809 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.311811093 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.024973844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332872158 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.705968893 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.277522821 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.276872189 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840179722 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.277416997 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.336672234 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.274373856 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.276580806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768033515 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.276688426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.275908746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.477666947 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277654872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539240684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.278312506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.29600837 seconds)
  done (took 1098.28269933 seconds)
done (took 1368.700008448 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.276062071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.276794367 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.263205662 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27933016 seconds)
  done (took 26.312914808 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.289576185 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.286275645 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.287811064 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.286059399 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28986241 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.285103065 seconds)
  done (took 8.944140828 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.320632707 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.278718548 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.280858857 seconds)
  done (took 19.099582002 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.475649658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.422007708 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.606123641 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.206256169 seconds)
  done (took 9.930373138 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.288014977 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.29007688 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287468909 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.287770407 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.290711227 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.29233347 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290361928 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.290066568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.291435245 seconds)
  done (took 12.827141898 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.737368969 seconds)
done (took 83.068332008 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.28082508 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.283468645 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.568298489 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.402750161 seconds)
    (5/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.852560328 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.493808374 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.058909461 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507718026 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.813167844 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.473002615 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333820549 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.268158173 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326013591 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.572215768 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.24783917 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.268204489 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.705546821 seconds)
    (18/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.74530025 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.285254919 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.3921605 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.40766426 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.0503069 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.815308669 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 5.245175792 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.862707814 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.30393176 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.283092508 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.125079797 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.568150389 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.242993892 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.778460103 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.311895235 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.674822835 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.315184663 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.299160933 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391189786 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.396331633 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.38999441 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.646041674 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.366670291 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.348245078 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.029986287 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.919427272 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.778275214 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.537746336 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.283040576 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.485241285 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.28560513 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.096173558 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.79550526 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.40826194 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.331057068 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.728724441 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565020386 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.512927999 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.418281586 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.311788793 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.369477846 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.291992385 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.285953243 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.385041302 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.355713952 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.287781928 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.343871685 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.312592545 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.369029634 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.302338489 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.269364086 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.804921145 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.528413499 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.035890671 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.415505666 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.297033487 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.351796847 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.394235493 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.821005498 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.278933769 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.31522167 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372766401 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.322825001 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.742853818 seconds)
    (82/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.368334373 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.431181722 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.313341444 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.663773321 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.505148282 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.618270627 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.046381045 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.500327179 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.285897282 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.618738192 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.312832238 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271699095 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.842929743 seconds)
    (95/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.704602996 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.362474944 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.427146867 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.370778612 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.257148616 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.307640004 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.287264577 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.405782124 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.578832827 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.496373757 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.793147933 seconds)
    (106/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.474502716 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.331391359 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.608577157 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533201701 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.954772988 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.680492827 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.553873636 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.979715903 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.742666072 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.332878833 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.322506908 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.67236122 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.521347182 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.277815867 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.40686978 seconds)
    (121/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.981107039 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.284817521 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.40973954 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.625279804 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.63197445 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.655458616 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.288685773 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.292093288 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.000619495 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.324914035 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.488743087 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.468210934 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.740508653 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.108632591 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.612837776 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.544989029 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 1.780014965 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.311632319 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.289821921 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.585830774 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.288501352 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.956905065 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.635474561 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.55309843 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.397620357 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.299849246 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.395440186 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.290829119 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 4.30464883 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713882894 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.523184412 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.434917572 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.971576242 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.417805135 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.292500381 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.279379436 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.967617432 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.317467633 seconds)
    (159/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.376427738 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.288968382 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.277775198 seconds)
    (162/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.799858794 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.314935417 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.692990636 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.689591197 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.363502689 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.961907798 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.290655809 seconds)
    (169/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.46215739 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.506365116 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.133084048 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.409963274 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.560853046 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.597440932 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017755779 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.482964381 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.301039343 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.738191186 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.474343499 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.821854161 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.350541044 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091699135 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.302214542 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.280311002 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.455352089 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.276350289 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.331078881 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.868539053 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.318121173 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.425536589 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.469065092 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.289766232 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.907131727 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.375998131 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.332967134 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.309491096 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.313823688 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.411594804 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.003631434 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.78254363 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.4388237 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.417371089 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.48944837 seconds)
    (204/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.334367377 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.305363898 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.398640775 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.351012215 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.403049333 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.827466436 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.44377675 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.318969962 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.995715241 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.376331178 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.098238267 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.294050325 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.313797297 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.926239975 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.495972315 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.289618687 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.089799093 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.76929591 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.259091211 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.243313198 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.268348753 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.362153621 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.288173037 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.5983935 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.575492209 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.772628833 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.334271797 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.304355495 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.614124881 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.407761646 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.422631207 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.525104776 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.262330925 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.524345127 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.798140741 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.269013343 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.265238383 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.938373032 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.068482999 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.41825445 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.100092629 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.265838088 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.251607864 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.265945462 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.589530838 seconds)
    (249/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.55769679 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.275299074 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.805366083 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.859672488 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.942540321 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.665182307 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.247711666 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.400635708 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.238018903 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.283041673 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.249574665 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.362766949 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.300941519 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.466132976 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.78077732 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.043559099 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.387337209 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.249278596 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.934030474 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.31216351 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.288742621 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.274267178 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.289325822 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.459415523 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.286102777 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.259398911 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.365979515 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.097363617 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.243450517 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.343148066 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.641997322 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.816074049 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.020819717 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.373047937 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 5.497826644 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.252511096 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.559966895 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.352112511 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.33804569 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.651490441 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.417342531 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.852255675 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.280767241 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.589598464 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.558272843 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.927814263 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.033403963 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275320964 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.250476116 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296827568 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.234021243 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.313771703 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.25182455 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.274535356 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.275053664 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.276469167 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.2946506 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.331876159 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.322724255 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.685458441 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.039823279 seconds)
  done (took 889.704875628 seconds)
done (took 890.924967823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.280905475 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277331804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.25772539 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.280594787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.37072069 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.288399738 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.269701103 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.263098411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.306823897 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.309713643 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.259027195 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.286709081 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.260477104 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.258751602 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.258851452 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274495169 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153245993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.261235261 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.275892723 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.269359311 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.277284182 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.257517162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.308811237 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.287316299 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266550703 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.263492918 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.262986809 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.279533903 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.37252529 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.262386872 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.261449426 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.271382893 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.152754627 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.259081645 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255801529 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.281113184 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.270477133 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.269746718 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.264596185 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.292388284 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.497818876 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.261137603 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.262244875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.260378172 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.261661305 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.26590723 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.262381269 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267228391 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273940746 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274028615 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.508077925 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.276210621 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.264191558 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.262098216 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.272170826 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.261004589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.265678536 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27881045 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.27901079 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27725202 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147941391 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.266461024 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.263452795 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.278706802 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.267638619 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.550164584 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.25820408 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.266341064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.505555463 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.267196052 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.551743208 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.271196215 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.264167878 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.276270396 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.294590462 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.158830386 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.257573401 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.261494669 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.270089716 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.261149899 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.270291807 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.274283974 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.267586305 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.263547029 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276480345 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.291307448 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.273332211 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.264238165 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.27176725 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.282667844 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.271869655 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.273736519 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.266211481 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.257454645 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.272062298 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.267343071 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.266289051 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.266686854 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.268543834 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.275121129 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.505468772 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280274342 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.260151592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.259674121 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.26410693 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.27723548 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.508454195 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.264719635 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.287336358 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.312582983 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.265762026 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.15617434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.270642904 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280228204 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.272286515 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.267358899 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.259942384 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.158108722 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.521690978 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.281072881 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.267088795 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.263790723 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281437653 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.266752852 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.262244994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164253839 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.265660691 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2790867 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.385530598 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.275969168 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.296383174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.264334027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.268593508 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.294619412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281477747 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.295099007 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.266648512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278358829 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.280306584 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.26081738 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.275915869 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.275086748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.266638828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.267364586 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.253534287 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.287308703 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27323637 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271668855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.281391137 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.380577945 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.255488246 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.151738001 seconds)
done (took 211.959596326 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.317026437 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.253636896 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.33965483 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.250909721 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.345839787 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.345542935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.247195948 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.245789055 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.244288804 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.626342924 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.245305558 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.246708286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.245942725 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243944184 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.329813105 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.24739933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.245807041 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.590794963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.247396889 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.315756389 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.246362921 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.244867419 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.247549278 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.631798622 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.241200464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.242894895 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.318341518 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.247429515 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.595003305 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.241732337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.241555426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.593984968 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.336586843 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.264751134 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.258398665 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.253865205 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.343493774 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.26335045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.328317259 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.330945773 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.33922378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.285951341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.247285051 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.243446704 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.24858782 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.249191911 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.24286304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.275431829 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.245805672 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.246284705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.590020734 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.257770465 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.247409252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.247685854 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.248409896 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.278930648 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.245539253 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.248977171 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.338144887 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.251265495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.311598767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.632753034 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.62930849 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.250114793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.2496426 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.246758625 seconds)
  done (took 142.734807402 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.316258812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.3232817 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.355723561 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.247876269 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.299144959 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.358448724 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.249649406 seconds)
  done (took 10.336186972 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254565329 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.251564161 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301587836 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298620726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.248647086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.398537392 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.251175116 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.261789732 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.247627077 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.305160688 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.251617806 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.249815046 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.257564582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.252335074 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.299419437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.261401731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364508738 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.252656893 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.250819496 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40148299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249195916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.258020422 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.301719348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.262031708 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.252884963 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.257789562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.8213395 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251492979 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247187358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.252166048 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250251726 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.290680107 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.253905596 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.251658557 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249234497 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36844608 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.249772003 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.25004265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.25272192 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.248743661 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.251057809 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.251739339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.252545557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.247775308 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.253304419 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.273060018 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.252541687 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.253802008 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.255446142 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.257571621 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.305228737 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.255501523 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.251867782 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.250044333 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.312379555 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257058097 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254070211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.24854843 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.252512111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252375168 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.402372072 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.302439829 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.254583226 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.304042602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25690839 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.252629427 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.252346208 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.253756282 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305521819 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.256225472 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30333234 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.253343954 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.412327033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.279372175 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.25375745 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.258792525 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.253579528 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.253643708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.252320055 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.260442712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.253674715 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.254243259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.256724119 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252932597 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253851276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357769467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365158933 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.253185424 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.270632633 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.258737115 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.252883857 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.308093481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.255361335 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.250668936 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309859944 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36988785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.309122275 seconds)
  done (took 145.313812844 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.25674634 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.263221574 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.255188881 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.273815856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.257030157 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.254586451 seconds)
  done (took 8.751528721 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.256356086 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.25782757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.258212436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.257033615 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.258886886 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.258772194 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.257600923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260195996 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.261261757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.253868531 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.259077834 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.260651072 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.256164839 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.255197675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.255582037 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.259502814 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.259538521 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252568943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.25949034 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258025844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353864121 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.252447457 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.253578594 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.260614209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.264139383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.258378208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.266333253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.259894935 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.255664419 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.263249609 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.256471877 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.258099129 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.256001832 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.265255301 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.261617826 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.258351108 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263240541 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.261333586 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.254510351 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.260811599 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.262050311 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.256256782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.255619542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.261543068 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.261390552 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263138044 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.265346945 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265860146 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.258115466 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.262789035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.25983818 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.258284285 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.260684334 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.25777507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.260793086 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260580964 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.264304026 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.256600138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.257956305 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.258351129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.259226482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258056092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.261318364 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.264825096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.266463664 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.26295627 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.260302995 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.264718826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259125416 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.26116345 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.262623213 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257920755 seconds)
  done (took 92.981876177 seconds)
done (took 401.304260716 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.416455773 seconds)
  done (took 7.61293348 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.445534081 seconds)
  done (took 7.644608956 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.780022301 seconds)
  done (took 18.97996549 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.286616572 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.303971064 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.255755447 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.26390475 seconds)
  done (took 26.307862016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.334253885 seconds)
  done (took 7.533027058 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.252243502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.250287281 seconds)
  done (took 13.700886794 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.471826366 seconds)
  done (took 7.669160937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.283530069 seconds)
  done (took 7.479357477 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.259507716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.267055937 seconds)
  done (took 13.97981972 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.241920502 seconds)
  done (took 7.440906304 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.136036012 seconds)
  done (took 8.337388143 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.255524634 seconds)
  done (took 7.457390007 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.29330661 seconds)
  done (took 7.489396478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.304013303 seconds)
  done (took 8.503646447 seconds)
done (took 151.33291608 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.256752349 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.256055764 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256048306 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.25804 seconds)
  done (took 26.226100547 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.296622438 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.295558472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.300589437 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.310224417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.301649269 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.29685644 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.29020286 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.289161156 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.309071774 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.299805138 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.298476311 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.302296058 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.297292286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.288603282 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.30256608 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.298769064 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.311620012 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.302072551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.292203888 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.301586771 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.265706074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.307200525 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.303148049 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.268506935 seconds)
  done (took 32.329063001 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.463951688 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.335137174 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.419631122 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.314863397 seconds)
  done (took 6.734435173 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.319086635 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.315596172 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.327464633 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366409889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.417533034 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.326585717 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.288365718 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.287984941 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.271907435 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.319668621 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.395454155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.332073631 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.404082186 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.266113166 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.523829115 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.261188061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.266387752 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.314953262 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.368366945 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.384784083 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.266915784 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.320512134 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.324803448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.338151756 seconds)
  done (took 33.207516224 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.265423407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.275346248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.275349378 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.267731359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.269392044 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.267911007 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.269326426 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.265064527 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.285869734 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.269961057 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.266032423 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.267870204 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.267201998 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.267473334 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.266436465 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.275790753 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.281652143 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.268585377 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.270475449 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.272522593 seconds)
  done (took 26.61674336 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.260089037 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.197175835 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.612055814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.515073527 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.255802513 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.256694039 seconds)
  done (took 28.298666006 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.322708084 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.442090005 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.267900022 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.581235831 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.655061184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.266680923 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.268611994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.476027719 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.740228164 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.740705621 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.315611485 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.327387522 seconds)
  done (took 18.609377384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.265630084 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260737217 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.262547692 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.274913409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.314622083 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.274789645 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271683417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.256168676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.312422276 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.316300514 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.272452185 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.317768106 seconds)
  done (took 36.605482975 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349534979 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309311976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.139233436 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975884613 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.641021437 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471221128 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.994005532 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.681517048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.264570052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539194216 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.884609116 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363648744 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.517632241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261868624 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263336333 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.205789228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490117142 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707956418 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262133142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910703796 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286841348 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271353529 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.065899408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.29015061 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476853446 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394036977 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.52115978 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263493651 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515363323 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279456647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272775364 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26215409 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538900987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898518969 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353702302 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271558629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.942874699 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.974845731 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.25876251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.919475264 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.660236226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269376122 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269980457 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265579314 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200805983 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272980976 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688103088 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.271676338 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.977160331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.26473907 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273973107 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356992314 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.269502606 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.083311799 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27785886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265863113 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.261318701 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273573718 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835699271 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.371002406 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279254367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.197509143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.61630989 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923094157 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835123804 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.364617858 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.267811161 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269599268 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200900799 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.976132098 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283358458 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593425416 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.28322734 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917343234 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897686493 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.908187426 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209425271 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779883928 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278183671 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.203335875 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494092548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26849462 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204237043 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.212770831 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.1995623 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920267736 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278449117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593383628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274571187 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679165367 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276191718 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281709926 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291132858 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492420297 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.149621512 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265786507 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.669621467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412891941 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291154668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681680202 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204759465 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.272228733 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527612555 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.481575215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274862223 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.205365178 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454042575 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275116096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.280144428 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.279521782 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.275947168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.785326031 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282609106 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.381720187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282179421 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.674148811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960462104 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280567415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368430242 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.931054995 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505291555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.005950533 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271854947 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349536485 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269563171 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269215231 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.008097749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780680282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.269494199 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.266629157 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269468918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.280548325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.268526357 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211054222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.272298282 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94228016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.270700847 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492266136 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26772815 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546485524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200488011 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600103409 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322731008 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.488764453 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.372652597 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.26991458 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52748055 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282388524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280107084 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279872503 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28666445 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367459177 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29194566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279384051 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524710928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.274161282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.273594061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.027962665 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269441685 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276235431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.275464246 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10377473 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791058904 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248578798 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278338114 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15894708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.280751203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33406334 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277351057 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281435666 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.904113634 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054921002 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.273380593 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.26604059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495685355 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281955267 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.936810006 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350443691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.450476938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792786738 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285233454 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.204529983 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.982484345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.963891999 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270170423 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204239573 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269669145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280732502 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282178514 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.758095116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.797317427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273742227 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.935638428 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.277243329 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281787643 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.274392679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270515233 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.883541794 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.393124693 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283049146 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281737411 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414260404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.283345924 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2061377 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.275949418 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276570235 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273752172 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272773675 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303447538 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.946207807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800093687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534402501 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93724637 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285755431 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.027975878 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.301709234 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.278925504 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.709771639 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285829686 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.291103636 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278815307 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.282803127 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.950764014 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945845356 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837646877 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930238058 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753666984 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159449231 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.279394202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274030402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697081801 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206765747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.83465809 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438800048 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698904502 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220718281 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455851334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.374943601 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970383819 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285461554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503709792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153633625 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.718489188 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299264479 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486883411 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311315509 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279025497 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203253734 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.576249255 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517236937 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.728044534 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356699431 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694146595 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.721513057 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288976414 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.271434529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557841727 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431243237 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.988108133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.448728095 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270876156 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.95449639 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822962702 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286435843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.501195129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848093574 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276999373 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.47336413 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213385482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.289867566 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28313978 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274905168 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.405597054 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.238162664 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.543652324 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284655186 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209850488 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285052888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758329114 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.18071578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.277026285 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275477133 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973531328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280112273 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542832863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.276524953 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.876418284 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281431798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207820744 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209296851 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.96971193 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284254874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253742456 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727943363 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.613761989 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278283377 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299956201 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49672601 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533585002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.288488772 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805016971 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505293288 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.050917112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298037563 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376237716 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.753442789 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.278238571 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.280267607 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.51040311 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.112089442 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500793367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.181513786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.142587212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274286937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49278707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277472245 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.96857296 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516911723 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.990791015 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.280679422 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94271033 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309031115 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.974743484 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204756799 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.630000691 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288464149 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359380992 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291137159 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.291989275 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.292168325 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437763515 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971790189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293879077 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.292911393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370885547 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.433117512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.883993915 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.280908886 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8139062 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951252125 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814116314 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292410689 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279592691 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292441742 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215920734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430018161 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507998801 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555393243 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41264676 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.696553308 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303456353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.774271358 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294758365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495238596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551647184 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173837648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281140206 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294334623 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.282661938 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288125452 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.489516922 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737838675 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797931612 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391521739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293395001 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696492927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555731185 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280787328 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284254077 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876009823 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.282405334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567009692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.285154633 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021319292 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426718612 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288885924 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917473979 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.292589862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.433889685 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.055129173 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974588613 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538416895 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697360896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.292000584 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809084569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921010484 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545125309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34941568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29363608 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.385560146 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429646544 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.288728796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287630396 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285378429 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327328924 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.995087488 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294154375 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819442815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542624214 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.281045182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.288425042 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302133995 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.290684028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.506731603 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947638332 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509947052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292592385 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286914547 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.096106792 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.818886889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298618765 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220439562 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.282965076 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506075742 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522601977 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307037024 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.734041846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.99408058 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799483385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.251702258 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305854436 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28603752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928124629 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81200292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.893672492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736112545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.84950298 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286815102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557696397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.291187607 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290195568 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561595107 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.286221241 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297668189 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295651436 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.815581863 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982553437 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.289131912 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984913499 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.220820997 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625656421 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896460348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222124989 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290188934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.454198386 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285985706 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412561073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292480211 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.291304185 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284939835 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.061039498 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559082915 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.290333022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.286952907 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.810556478 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300493548 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29232859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532075006 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294928536 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.96051494 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.634054713 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54264993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288571382 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.271930948 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.290738016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286892611 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272515668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482141689 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.775496907 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805273434 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.289311097 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.296745298 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288600875 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.50265356 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494216668 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.015543731 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311645215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289118346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305284402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.192790954 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.791383057 seconds)
  done (took 1548.274359831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.307296688 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.311787709 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.289537557 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.365195614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.28978828 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383585179 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.327614405 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359329088 seconds)
  done (took 51.863303036 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.289355054 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.500658215 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.314950669 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.289727977 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.29147735 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.289188235 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.683178874 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.293797074 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.293221497 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.296202908 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.294530187 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.294370354 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.857616357 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.295541894 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.28443994 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.27151312 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28967594 seconds)
  done (took 64.357156756 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.285676986 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.490144958 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.363180455 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.301877531 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.932915616 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.285478044 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.431902037 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336093898 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.290172493 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.301298583 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.936117961 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.315913675 seconds)
  done (took 82.502454906 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.294422351 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.293038765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293312124 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294311752 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.292476971 seconds)
  done (took 7.697501597 seconds)
done (took 1964.522468494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.547835339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.907183975 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.885139129 seconds)
  done (took 5.021888292 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.434397727 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.483648549 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.605726441 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.609594667 seconds)
  done (took 7.36421359 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.565436715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.67411316 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.47459431 seconds)
  done (took 5.943211716 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.559644788 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.289843769 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.406794994 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.288674387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.288767207 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.288142502 seconds)
  done (took 20.098174891 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.290826607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.296040973 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.293869721 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.296071964 seconds)
  done (took 6.407944542 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.273565371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.032953176 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.276423035 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.289346528 seconds)
  done (took 18.10309652 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.03840895 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05350299 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.036769455 seconds)
  done (took 7.358786118 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29522098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.131739005 seconds)
  done (took 9.660022732 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.584696507 seconds)
  done (took 2.816207098 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.423880981 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.562540011 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.235371192 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.186442471 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.261870457 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.695170165 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.739906579 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.370812382 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.157857879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.212720097 seconds)
  done (took 26.079441044 seconds)
done (took 121.886096527 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.80367739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.539836914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.490595048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.77137626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.516365299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491003457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.709448532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.740244368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.282618845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.274378496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.775989877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.51492014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447202544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.538247382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.446355351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.290165177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.51597989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.849257529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.4910036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.653194694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.709142566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.412793316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.605399624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.430654778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.516094108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.443521968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.00324001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.293686263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.667995375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.060006872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.447401326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.825647328 seconds)
  done (took 185.789159981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.291815055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.304701481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.291450789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.290905275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289889863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.303265187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.30666434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.303699065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.290491764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.302435923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.292215344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.298952328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.301570341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291140979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.29033761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.305211736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.305220414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.297041358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.301231484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.292401632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.291469134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.290679072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.290001201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.291910424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29244467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.293173173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30095955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291311461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.292658873 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.297304514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.296518042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.293086633 seconds)
  done (took 202.705120456 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.292445172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.304417268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.2935746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310596285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298832575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.305237055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.294886474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291788355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.306031611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.290572624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291847052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293999105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.293508895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291856579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305003702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296271339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.302678732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.306847503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.294467087 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.29314937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293226034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.29179985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.29106464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.304398953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297564315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.296982373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.302622823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.293655351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.29333835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.305951303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.307417946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.296460057 seconds)
  done (took 202.767999262 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.489705885 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.301747255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.302642068 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.236063887 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.302066347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.303461191 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.299376232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.490623505 seconds)
  done (took 13.961834683 seconds)
done (took 606.45722578 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.483842348 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.215330451 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.492353947 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.323627786 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.985250939 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322924345 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.323190597 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.476839686 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.192404564 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.479030766 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.477057553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.319374735 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.620411184 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321651579 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.557956212 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.410529444 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.130877994 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.239393997 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.621696756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.788019472 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.561807494 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.697685855 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.477410888 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.188198065 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.620194913 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.697035304 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.941534784 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.134260473 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.323816046 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.621966662 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.79465359 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.185070742 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.370133556 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.357196599 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.408062246 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.395220616 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.165850483 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354176194 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.491961151 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.464175382 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.778589135 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.012562762 seconds)
  done (took 88.06144292 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.292268591 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.292789431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.291295388 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.292733239 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.292821472 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.292533355 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290569154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.291779247 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29293794 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.291373672 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290983695 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292485709 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.292695737 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.293313897 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.291341601 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.291329089 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.29325993 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.293006152 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.29140767 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.291968744 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.293091853 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.290894935 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.293977306 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.291883951 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.290363056 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.292710381 seconds)
  done (took 34.836404835 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.305344177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.52302379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.695560843 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.31101556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.303162791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.310301182 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.376773718 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.306362799 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307486009 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.30941291 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.453210157 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.305245764 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.340787664 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.705820662 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309868504 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.307720321 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.3070579 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.306845052 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.531846045 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.318426644 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.379154203 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.308126439 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.373866629 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.316340998 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.312808747 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.304493872 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.31052862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.831233408 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.308448607 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.454028565 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.998601324 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.374183688 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.797138782 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.705719585 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996308859 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.306880361 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.308856475 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.461266717 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.309583939 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306979465 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.375627121 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.308089172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.705662648 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.9249754 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.32109486 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.309919619 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.85499037 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.459884014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.525474482 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318418507 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.732230162 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.311082399 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.309565965 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.309533106 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.525784596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.316470261 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307046931 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.878051369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.312663714 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.377373023 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.310552944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.308814933 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.5405707 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.311318413 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.529239271 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.310318624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3181581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.310306639 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.710760624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.312900769 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.938651274 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.325674324 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.310496565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.455876864 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.529684944 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.885645792 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311500144 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.542963503 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.811134088 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37800552 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.31398876 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.824162788 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.381104497 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.31447011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.313170406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.311034597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.310407335 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.358090894 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.375382245 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.866884835 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932969144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.888952398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.380406195 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.32303893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.31069775 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.873425044 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.311800721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310819199 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.705632075 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946639727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.326699589 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.318578938 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.925857586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.32798618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.380133514 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.316893763 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.714869556 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.31036975 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.353085078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311048038 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.318260517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313243269 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.379531238 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.315189608 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.313211383 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.913998044 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.478293446 seconds)
  done (took 171.951819581 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.304756126 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.304352999 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.300847055 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.302446678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.303135554 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.311589276 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.304380172 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.307262499 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.31027794 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.303216341 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.305877033 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.306102213 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.308421785 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.304765614 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.315027055 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.311417979 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.958857312 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.302486703 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.306819365 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.320557077 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.07800955 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.30650512 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.305612323 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.32202086 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.30512793 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.305885287 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.322240741 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.308353006 seconds)
  done (took 151.294553024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312382941 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.820420139 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.312792769 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.427923709 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332666246 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.311407552 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.425193571 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.364477553 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.315553321 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.311247989 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.311022775 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.58599508 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.316623663 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.781404651 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.480256891 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.429842316 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.778207211 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.315475101 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.313697725 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.311594847 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.429954084 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.321170749 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.586370406 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.824016335 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.316847526 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.824689671 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.304954279 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.315289342 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.313849715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.828216865 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.314082368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.59005212 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.382505188 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.368192132 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.829352686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.780876673 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.781613175 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.445709283 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.315042809 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31273711 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.313469875 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.30340411 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.827243881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.31739174 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.31663072 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.819918762 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.331462826 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.315734519 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.326274935 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.313355619 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.367927518 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.369574565 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592991905 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.833218655 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.38294719 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.335617996 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.431117696 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.664235522 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.316632584 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.782946594 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.305140434 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.826560654 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.320041432 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.304257953 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.316403682 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3211575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.448032546 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.434547169 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.784079413 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.318069987 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.778098071 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.473551944 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.317102414 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.314836932 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.323005618 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.844473178 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.790306773 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.452242009 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.440113485 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.493962716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.307893556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.316916065 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.307608855 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.388197148 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.319753101 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.837852686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.795210609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.322028918 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.322510948 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.321040422 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.320656494 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.476596407 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.841417765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.389767075 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.789175555 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.61317359 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.598083513 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.319083749 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.376718149 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.319981467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.599853184 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.321181015 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373156951 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.727352466 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.600670415 seconds)
  done (took 155.770404621 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.54125904 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465280316 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.408462515 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.423835101 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.818066499 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.86280789 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442364061 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.436546606 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.417591849 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.551052611 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.411501649 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.412965356 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.491292688 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.38624814 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.966600445 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.383475804 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.408446966 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.435661962 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.421711141 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.300601924 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.899649638 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.58733844 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.476194281 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.362678028 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.40964509 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.032802519 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.837736994 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.808928046 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.475945754 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.506858931 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.812843184 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.392296088 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.23928457 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.944581444 seconds)
  done (took 63.029024709 seconds)
done (took 666.181195423 seconds)
SAVING RESULT...
DONE!
