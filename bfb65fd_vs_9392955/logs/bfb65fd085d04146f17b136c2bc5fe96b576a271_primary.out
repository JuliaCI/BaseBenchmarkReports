cset: moving following pidspec: 25826
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.269136502 seconds)
loading group "string"... done (took 0.571009431 seconds)
loading group "linalg"... done (took 7.240533956 seconds)
loading group "parallel"... done (took 0.160341596 seconds)
loading group "find"... done (took 1.130167079 seconds)
loading group "tuple"... done (took 1.781846123 seconds)
loading group "dates"... done (took 1.268938372 seconds)
loading group "micro"... done (took 0.227101077 seconds)
loading group "io"... done (took 0.925126117 seconds)
loading group "scalar"... done (took 37.688589099 seconds)
loading group "sparse"... done (took 11.639737155 seconds)
loading group "broadcast"... done (took 0.971966958 seconds)
loading group "union"... done (took 12.695974261 seconds)
loading group "simd"... done (took 4.472535715 seconds)
loading group "random"... done (took 8.888128239 seconds)
loading group "problem"... done (took 1.931390705 seconds)
loading group "array"... done (took 21.238919453 seconds)
loading group "misc"... done (took 1.751587476 seconds)
loading group "sort"... done (took 3.284096466 seconds)
loading group "collection"... done (took 18.237968138 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479615333 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12485795 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11474458 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118817579 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143419326 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116761808 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122044681 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083236168 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.835080153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145279418 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118230177 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409728692 seconds)
done (took 5.047619437 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173784505 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081598674 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080636949 seconds)
  done (took 1.356145733 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066843241 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12094079 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065859953 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066929863 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067132038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067535908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066841903 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0670507 seconds)
  done (took 1.717400281 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072850153 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068481412 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069043111 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069674672 seconds)
  done (took 1.476771607 seconds)
done (took 5.998543294 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769101194 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205247479 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181825581 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39743197 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131475549 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156516413 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.624358252 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316929496 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182207032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080768992 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102482717 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315942124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106640495 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650447118 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075783125 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089334825 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136899975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43207487 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066956005 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081199459 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088584999 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127661129 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084768207 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073747279 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143414077 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067319805 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129567568 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079985384 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065977753 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205769847 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172016379 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65191894 seconds)
  done (took 10.229666924 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096019014 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09674484 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070014492 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138190231 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098493184 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07113044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072122929 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06827455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089239558 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130610691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090476789 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103250087 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066903201 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069862776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086025773 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20651899 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081550403 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082268549 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071858414 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076436445 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118150773 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079911019 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079598801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078922423 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130911348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18189652 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096552659 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097493782 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068621856 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082117368 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116581079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128045346 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067454829 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067447772 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126137117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096146521 seconds)
  done (took 4.705481228 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.924667249 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141179919 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09208201 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133717523 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085760625 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065628988 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109045276 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067275433 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082537584 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204120256 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.358026312 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065719635 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576450388 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110079256 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102587473 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06731513 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067636858 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066251585 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353379584 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10773533 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102023109 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079745238 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068905379 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067689763 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34198084 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066790925 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063206382 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068440775 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058110585 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121275567 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067322682 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917444385 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12327518 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066069385 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099397799 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168500754 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086267197 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.266213365 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067330453 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063784618 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151813784 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071128748 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065664981 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082629291 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102920391 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111796675 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065131364 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067746223 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164643345 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064469902 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079974464 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972179433 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152161531 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075628989 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063768371 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244917289 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085078295 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06951787 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065374881 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212368672 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132904704 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068231345 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06784765 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069208492 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071025222 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091898546 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066829616 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.3594898 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069666264 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078042674 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.009138896 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068526273 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068611251 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071993501 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071258143 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084295769 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065271898 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074132427 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064952348 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064725298 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065957895 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083236722 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353943613 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065283158 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067084221 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063793567 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085135256 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095321069 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06576394 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064160472 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099033054 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066967015 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169578541 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106577039 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06658427 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064072562 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085072812 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069154076 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112762423 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066633072 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112134223 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067204496 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095511772 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069076269 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098639788 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080818691 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067280333 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395454201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064503254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064126793 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066963184 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067563379 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066543584 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065349774 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078538744 seconds)
  done (took 21.252180923 seconds)
done (took 38.308188248 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278005103 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078422865 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078265243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077363801 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076436626 seconds)
  done (took 1.869254365 seconds)
done (took 3.132879062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118651374 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099363964 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065233582 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095790422 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064994221 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099861801 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098095495 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.07988986 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097937962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065166345 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097866183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065457675 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065466412 seconds)
  done (took 2.392201974 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082582819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082637824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0705932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083386661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064702305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083505081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081605998 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090040733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081415585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073334566 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064609672 seconds)
  done (took 2.114975562 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081010862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083302979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069981033 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08255258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06440236 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082277297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081932991 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08679063 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082332249 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074289605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064506374 seconds)
  done (took 2.104167745 seconds)
done (took 7.8605606 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075987753 seconds)
  done (took 1.318739554 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589268826 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.049632393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080321319 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11178482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182189039 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117615428 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276715214 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085898109 seconds)
  done (took 8.915804022 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101187816 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068645146 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070155833 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069953726 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06756621 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067217894 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071335566 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069136189 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067571984 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068367439 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068833057 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072718824 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072742345 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072152726 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069845175 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072514191 seconds)
  done (took 2.463200616 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091659544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092037475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074678616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075843355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073502567 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073316009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075423337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0738804 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071836818 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073090113 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075758646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07485697 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072769091 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066685689 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075642933 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076551424 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071879234 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074790257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073594205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074086167 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073439354 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06344688 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070699282 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07332743 seconds)
  done (took 3.142319105 seconds)
done (took 17.092656321 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110402471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070838396 seconds)
  done (took 1.432253509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079997747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081795151 seconds)
  done (took 1.418301249 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081360981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064831121 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089089285 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076643853 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065372288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065428925 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086177177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066241562 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067484538 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067282675 seconds)
  done (took 1.986940635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067804525 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076660645 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069878017 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082107448 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075587742 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065145766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074301158 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069029592 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079497409 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063544446 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072263667 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082855587 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071988307 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08457421 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074093614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069064846 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071380719 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068159218 seconds)
  done (took 2.578335803 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064690419 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066076943 seconds)
  done (took 1.391955468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065712085 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062424705 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065751782 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066054065 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064160136 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062985065 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062545654 seconds)
  done (took 1.706498275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387976502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112506807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300824551 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071942877 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0828919 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253412996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066317687 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071556185 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072090565 seconds)
  done (took 2.727934094 seconds)
done (took 14.507754218 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077977147 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084456008 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095882261 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371952711 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093033318 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067209574 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114747096 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190541476 seconds)
done (took 2.371276848 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208548171 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608575531 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.37802935 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199837996 seconds)
  done (took 2.450888045 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322663847 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087323413 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059882844 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067786301 seconds)
  done (took 1.815245743 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065811811 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068240839 seconds)
  done (took 1.409034255 seconds)
done (took 7.155997598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065344801 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084193671 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065546846 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06491519 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066075301 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062237902 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062552922 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065195286 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064994699 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064942584 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067795697 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064822937 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062504502 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062817712 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063518864 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066501265 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072111234 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064376564 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063375068 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062680626 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063009829 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069378573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062551351 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062721734 seconds)
  done (took 2.88220546 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082603617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065459772 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070842804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069919346 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069213709 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070328503 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0701184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06531135 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070225084 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067342119 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068986785 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070878199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06889612 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071104996 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069067904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071243557 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07255337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067152834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069071121 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071359935 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072153472 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067407526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070948138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071643414 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070629679 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070465655 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069982206 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065815432 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070139562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068519724 seconds)
  done (took 3.380956417 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068076353 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062691385 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063497981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070120995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062461365 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064092391 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062210711 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063142845 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063344357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063121652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063802595 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062177661 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06295063 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063814545 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063734688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066092971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077836637 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063265924 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062470505 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063309122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066142603 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062443498 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062879042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06217714 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062698276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06276304 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062965987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062551171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063188501 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062354961 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065676925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06609854 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062582562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069325736 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066143148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062638048 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066557838 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062415598 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06393739 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062333592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062057226 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.174045851 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062608709 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068936765 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062876436 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063837798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062480618 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063521434 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063016705 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064983182 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062125747 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062091996 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063967657 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0637702 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066817676 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062000183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063338315 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062300728 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063440004 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062632803 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061726325 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061953903 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064586908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063357141 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076470018 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069588651 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062695139 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064409728 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063910112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065389157 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064310622 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075669828 seconds)
  done (took 6.028937437 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089745269 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085749823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065211257 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064508206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060848277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063196875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066607577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063590423 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06463601 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068812433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063110096 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064359678 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064332091 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075772716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063554584 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064393949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068527487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06086909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062948223 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066277783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063182147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066127676 seconds)
  done (took 2.772034448 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153097068 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069374715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104017588 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072125614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066499879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072503702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070067733 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070819044 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071137987 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069406686 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069059927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070777166 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067145312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067532506 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067162855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067278716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068992996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067361485 seconds)
  done (took 2.653247932 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075186074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064757486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085577629 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065082612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064756528 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067101244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069461609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073263504 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067049413 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065342316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073366847 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067383666 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067194042 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064781419 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067575003 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06489164 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067155374 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064680619 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073358883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069581078 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069211218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072827375 seconds)
  done (took 2.810400143 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078550039 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067315585 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081308639 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0671811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061554248 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063518274 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069311562 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065077154 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069372166 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066393106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065540021 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064973292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070167675 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066982389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070450562 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066447475 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067012864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065238966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066521035 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061043563 seconds)
  done (took 2.645982566 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085959384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066707614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067132298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074296185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066421699 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066629433 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074120394 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066171715 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066302519 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08593362 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066260266 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066815223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074165063 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071239151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066538609 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074056023 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074154058 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073953536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066491297 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066643802 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086113752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066466797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074037848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066262201 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066143396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066271569 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066565089 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070988788 seconds)
  done (took 3.276523443 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06539398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064813075 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062701306 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062772973 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063203077 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063043492 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062727004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062327702 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064759607 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062786522 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065193912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064783373 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065141224 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064811839 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064774777 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064866018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065468002 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062831946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062517619 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062619994 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065204965 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065134205 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065067713 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062852672 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062460914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064873676 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062776587 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062601395 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06489644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062848386 seconds)
  done (took 3.214680213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073847508 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072279968 seconds)
  done (took 1.44400797 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062605227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078596274 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061984471 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069552264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069724923 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066096018 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072391628 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068995788 seconds)
  done (took 1.843963297 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079978567 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076091259 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067371412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081872165 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076169515 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083076259 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133165921 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068355632 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074096569 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06561025 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081295896 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066104862 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073288699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067653134 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072992357 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073490468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065283106 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073379238 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070156193 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066181536 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068342401 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07617877 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069404506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062854107 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067152176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087580176 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076112371 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06511103 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068595727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073065801 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071045496 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059713481 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065583185 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066126886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06356097 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075001079 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079951815 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068436231 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074309778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066173558 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075374543 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060598884 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070163311 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071504343 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075251723 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066052467 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067524542 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062055518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064691505 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069351829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062656255 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067060629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061713503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077181554 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070733553 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077701071 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065860397 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06845422 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06992312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070682335 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073950124 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068714821 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069325328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067176637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074013011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071830009 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076559089 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062470635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06126835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065159964 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076979694 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090071703 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073772945 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067643317 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06742168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064597583 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070007733 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06835257 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07291399 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073426792 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067327649 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072627422 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074001897 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067474533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069999008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075449884 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065462738 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070074833 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065055672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083761114 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065932271 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064807949 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065022358 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077791517 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070654075 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066567539 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064776921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073721146 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059934715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06595117 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066757481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066112498 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07587584 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070392839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070498403 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073913698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073912503 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066309965 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069908272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06388411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067360235 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065403442 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073377328 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06074722 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069001909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066666179 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066696978 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202339466 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066640001 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06820986 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076687533 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073417448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066991897 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064398179 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070538985 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067653273 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071631127 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075637889 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06666333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062610473 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062746574 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071290724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067585759 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070979504 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072914965 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069787558 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060568635 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064120107 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070881762 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074606617 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066165979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066902363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071966009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066653123 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065514293 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072049007 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067995778 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065066343 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070945122 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066214551 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061458078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06913392 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068707174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064372575 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069296845 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069477996 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06856836 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066732721 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06422946 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073190573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066949747 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064934305 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065729426 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064488291 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075820928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067957917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061491161 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062694912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074740744 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064425563 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065429254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06536468 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068291873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066933727 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063566592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065849499 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067823332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076997508 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069204746 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066100404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071051868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077986368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065481688 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067779525 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06514246 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067152313 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06600514 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073760066 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070828395 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070277936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067899372 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06170728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07108077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072925708 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064965971 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063551795 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064883145 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069488444 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071298708 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07004436 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066418412 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064002163 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066341436 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068544437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068731585 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065345124 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065082879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0720103 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064001674 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072512052 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066791685 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075431102 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068719785 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060956448 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069096056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064005039 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072025502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061186988 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06374458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065081398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066838949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064963084 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068103555 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06036098 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072584257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073266206 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06615118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06485444 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065461978 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072280008 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066624714 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068783392 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068591722 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070376246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075312097 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064026642 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067784242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074541138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064461768 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189899461 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071537803 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065057296 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065159935 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06542843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064332476 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069335376 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075271345 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072486253 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060330869 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068893136 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065368546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065293635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06131531 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07153392 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068760322 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067110885 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074234484 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066955727 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066910627 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070777103 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066361128 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067405194 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068022131 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069974783 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066802713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067800162 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066017271 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069563889 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065060887 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064418438 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068177205 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066790113 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06710039 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071708415 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065795633 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067133093 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068232599 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066110051 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06748965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066166086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065547641 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069733022 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066470531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066680024 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068750282 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061349478 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073261823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065753777 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073736404 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066609912 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062814989 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073476884 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067863597 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071980472 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066693952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067221812 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067588694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06542474 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069354921 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072761926 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064772027 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077145104 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074442497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067282964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069579595 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067336781 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066931874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065182126 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0673484 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066101557 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066126505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065692076 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070903083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069734376 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067597379 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069463295 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068482048 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067073426 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068013624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060683475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065275695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065401127 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065307955 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075132495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066538978 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065537824 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064873497 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066689152 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064721866 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062536674 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074032807 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07496717 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066300203 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072432194 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064769003 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067229465 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076009655 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059874629 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063558252 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063310857 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064074889 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072575183 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066366324 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074581343 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065525463 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065016684 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062897525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066407958 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064501078 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059982684 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063318642 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068827991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064329082 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064143512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06520802 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067879998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065814722 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074203673 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063561681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065316349 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064411944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061712376 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063725277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063997511 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201743672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066881444 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064449942 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062963014 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065623465 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067171477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06797694 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066063941 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067541255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075717726 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065931672 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069291382 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069598121 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061082628 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069954198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066339417 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065937911 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06577405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07004224 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070145113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068080834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074943725 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066616642 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067622194 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066349307 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064986944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065438261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065762742 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065969215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065579464 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067975925 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0747289 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064351459 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069472142 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066634132 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06636848 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072996141 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067640608 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068551288 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072980846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066803182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067880395 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074873837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070334231 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069400489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067670272 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067869116 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07218656 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065630562 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073049417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067079708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067104042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067664936 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06401429 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065635615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066214155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064871632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072599003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06629143 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065243972 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064943546 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064073179 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067517438 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069004602 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074082503 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068858653 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069837961 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06160465 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062723716 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067148166 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06446556 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067945998 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068773738 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071082665 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068193055 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066172009 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064355149 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074283506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071466647 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069136788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063609622 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068920321 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065856706 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067531682 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066586796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06574889 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066385411 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069395982 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066887345 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06490492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072277524 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068894168 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066218193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067332374 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066180411 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06585813 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060847504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066271007 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067509514 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070897239 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068046614 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06630984 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076030297 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063654986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066679893 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068813602 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065121622 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070057915 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061144242 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067100632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066541882 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066679432 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061177801 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064503276 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06362309 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067220207 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064563794 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060504847 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07525255 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073876048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067811411 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063541018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062940061 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059675359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05999908 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197393729 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067667277 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068050297 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076297278 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065024389 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064835659 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061401605 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06579277 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068539747 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069448709 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063179013 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06166242 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06515811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069924224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073073269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065296924 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065081206 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069766654 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068214353 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064063451 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069240681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063041092 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069794885 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079153038 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066738051 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066646258 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072474494 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073812292 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066784766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061499913 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06649963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069163941 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06665762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066731867 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066842124 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080593444 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069072919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064826141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066007079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068073404 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066024663 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074620701 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067918838 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067032404 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070703311 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068128501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075567951 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068981 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074631543 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069417768 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06925384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065313299 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066020514 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063952127 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065177473 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066776277 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067075165 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070790986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07354305 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064863922 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076449354 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074539587 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067833945 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062705511 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066608634 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065472727 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061276326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067332043 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063671758 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064405777 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064654206 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064545555 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066540563 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0705209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066303063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066317504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065320404 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059963262 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067742991 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068131431 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066789096 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062752733 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065160052 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066199659 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069279942 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068608052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063198891 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066950496 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067226883 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066187482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060944449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071939058 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06467431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067259407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064529187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065664819 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06597676 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06915498 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070447754 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066616303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068027597 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069460256 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06790456 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063019302 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063623582 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070983503 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063825199 seconds)
  done (took 42.445982222 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099287147 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062730391 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061017413 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061304357 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072899198 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06225386 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061683727 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062895397 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062797998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064614831 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061692283 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061266975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069853956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07670923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072763741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065625275 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06140118 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062446115 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061545376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062424966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069853988 seconds)
  done (took 2.786296277 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072545646 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069673775 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072105343 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074600941 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066401876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06997709 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071535964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069815947 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074920384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066051524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074628189 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069605806 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065978803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066373154 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066112267 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070126699 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075019915 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066475959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069767542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07162262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07839926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071788741 seconds)
  done (took 2.91916647 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066141714 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064991817 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066459609 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060652727 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065288763 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060895807 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068445404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06296363 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068226143 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064232409 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064274429 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064083308 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066810835 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060615517 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065332809 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063222271 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106536338 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068399232 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064991971 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065898508 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060932418 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067377686 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060988293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061581235 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063971358 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068342628 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066359692 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063551565 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06459309 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06473154 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064868006 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06326701 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066658911 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065634998 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064230493 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064494258 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064897161 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064497488 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06067692 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063011086 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065670364 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061152556 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064972722 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066057045 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063518276 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063069176 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06607037 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06414866 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06020303 seconds)
  done (took 4.566359619 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078464008 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108231025 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067238379 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087306215 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078836632 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074090338 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068579396 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08787014 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062696594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063565442 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080185872 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078476813 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064876335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069194605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071527701 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064994827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06588928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063785021 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068483533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064281632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068798593 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071331775 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078548066 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078073743 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068598203 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06385759 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064408558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06868285 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076920739 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069286742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069462314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069745353 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079262275 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070096616 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064042444 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066897105 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079954372 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065305821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066928801 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062763063 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067128042 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06906035 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070864102 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08059614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064905576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069917227 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064806464 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061662194 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077021221 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067242932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072077099 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078408295 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068289276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064756164 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0689021 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078745903 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064727634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063101598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067540738 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07687807 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06240607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06833287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07764962 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066378575 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071234552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078139218 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069428386 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068516852 seconds)
  done (took 6.334707387 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073847938 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07148891 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079852959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079139022 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071453968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071147746 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071089063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07112133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070747163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075589734 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071470569 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091415811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066544336 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073890286 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071748735 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071341345 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071390978 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071188788 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07149483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071118895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071644525 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078953279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071226719 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07867549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096837536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066570908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071012416 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071435425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078978144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071206746 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078307217 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071513065 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071105636 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078658613 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078205427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07089847 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064382426 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070955916 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071169495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070936262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066599521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078584656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070627809 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066192715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071034019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070651105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078297077 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078695788 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073569649 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075331535 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071045474 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078644916 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071014799 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071128125 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078322156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103121069 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078318833 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07840143 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070757966 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078179994 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078815346 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085069941 seconds)
  done (took 6.01193549 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082811557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073604124 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075637123 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060664293 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063279077 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068519568 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063275789 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063660448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073315093 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073412509 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075724839 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06873826 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071292963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07575003 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068738641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071299632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068564055 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068569386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07314504 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068548476 seconds)
  done (took 2.800820012 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073110019 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082434443 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066501833 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070651423 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068154692 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070450798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067340584 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06805983 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065926451 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068459507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074479027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074978705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06608623 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070856282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074535354 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070437845 seconds)
  done (took 2.516323663 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073705333 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070722396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07883735 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065322083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063529044 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062145802 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06508822 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060844279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061947767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077031697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065037736 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067410759 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065239659 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063512816 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062069771 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067501466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061468509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06264799 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06528237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0769262 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075523384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06360628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065693383 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065382197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065041525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070323016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06438752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062704111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062790181 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065740914 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065467655 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068743689 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062873055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063093605 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063604972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062193558 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064571097 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0654125 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067494163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064601959 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062960687 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064735416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064834993 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06588618 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061501477 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065447183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061466157 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066617422 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062609491 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065165531 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064754571 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06713615 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065467505 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071227778 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067673383 seconds)
  done (took 5.007316821 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078247222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069277565 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061010539 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063038226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068005688 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066554492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068530291 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066678775 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066926079 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06307021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06669785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067902083 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067083126 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068595758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06684182 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068424569 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061369177 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06702415 seconds)
  done (took 2.602312371 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069986184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064960853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072623471 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06475913 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0650673 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067228261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061115156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063564104 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063815261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064946167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065066033 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067370182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063672364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067267965 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064838918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065282327 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066936614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063891056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064772833 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061382357 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067016156 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063599193 seconds)
  done (took 2.828185075 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071852686 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091022977 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136478983 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082345574 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080601226 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077742151 seconds)
  done (took 1.930721612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089446919 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077627615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065994717 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087500096 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072512524 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066211696 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066828975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066632412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074925862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07493107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0662162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075073306 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074902281 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074371205 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072292714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071807877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066520309 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066782188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065700567 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082837944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066344056 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075144985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066545275 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066538198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06665161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074032322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074980847 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075312095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066325832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074830039 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071986912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066653502 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075365469 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075065136 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06819206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074746909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06666986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08293697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071919369 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074094858 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068612165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073031778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075038602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071242606 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07490836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066916045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071134818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066713864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06716291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084988766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072608751 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07425528 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072800637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075219014 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075020895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085333521 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075207565 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074741084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072698055 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077856326 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07481129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072284369 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074486325 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076051164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07244873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074410575 seconds)
  done (took 6.206093503 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08063905 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085628207 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067234656 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076128873 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07466387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06698676 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066805782 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067045502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066685739 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066806235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106423249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067138707 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075010681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074530648 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067037383 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067162674 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067149665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074331012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066885413 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085150335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066708016 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074694247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074780305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074346819 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07570727 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072480031 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067248096 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066891475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066907294 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066854959 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071667251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066831006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074919415 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066786639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074393367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066929235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067187788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071552331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067240538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072281077 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074784601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08311557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067091214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067008273 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075833985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066916734 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066840198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066435115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067012255 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066629165 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075305822 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075318145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07534213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074292484 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067091406 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066838198 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066908067 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066435189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066869179 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071924565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07410279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066762582 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084907576 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066473461 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066521553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074562558 seconds)
  done (took 6.125920511 seconds)
done (took 129.307738 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184029913 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169452559 seconds)
  done (took 1.738642186 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068062714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09531144 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076538135 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126986146 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066410547 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098840213 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097905142 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077263797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065729365 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06583062 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065622667 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066941652 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130028964 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065810117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066062148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067615038 seconds)
  done (took 2.69973728 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095711905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156390894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097884223 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064603171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096167938 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072003245 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064260623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074472318 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07061248 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064614986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072007402 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069838271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064659084 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070067021 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070869742 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072582466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064441358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072389788 seconds)
  done (took 2.814585449 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099586292 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089805108 seconds)
  done (took 1.592131994 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153531533 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103907438 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148416962 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342490659 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16672981 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229048242 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131763351 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126269575 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115001497 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122872663 seconds)
  done (took 3.041664884 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096775832 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150574887 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254833111 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114604531 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071547875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093171348 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115462663 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077140777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08022399 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07958532 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079913645 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075234488 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097822528 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073228085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073015907 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075113038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101825335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071699276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072963992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075833011 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098537556 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065353929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07272371 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071548002 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076431478 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077077704 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064936024 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064950168 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076109229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073633177 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076443535 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092016343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077018322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105464227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069342601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106512291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075516696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073214472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072882299 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07335518 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077913874 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077949479 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07180196 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075088425 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064721931 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075294172 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064743481 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064790585 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077486559 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065863194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077331922 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076113782 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105113463 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065741552 seconds)
  done (took 5.964514064 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.09992522 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103281951 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071092489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108779956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096574822 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070935878 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099716326 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089695092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10051484 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091831827 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087272232 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070409988 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080600889 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081951954 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107877815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100376579 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094436365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07035879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10024054 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100952566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067914399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093573313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0899338 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100347208 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066847894 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069549199 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067638901 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070192115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075638215 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077240723 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069729033 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100411788 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083393463 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07740726 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066479473 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067787953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067653872 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078335073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09611691 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077673463 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076531058 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066830717 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067574533 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069075613 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089568403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066965101 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078066219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07892883 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077764247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069226896 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070044121 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067695996 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069256086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079058794 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076245712 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080808899 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078877653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067772323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067907479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071435459 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07951399 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077925804 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077504123 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09151592 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07790774 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067926758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079223254 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084176885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067970604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069782242 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067795499 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069164788 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069051965 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076714371 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07710323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06932987 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069209485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06778246 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078654742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076757907 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067618514 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075616749 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066144884 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068131886 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0692714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069242704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076223524 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07896748 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069724995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067643961 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069315665 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067913532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066415341 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075468569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079184309 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077452659 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077513523 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06878353 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076989507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076566775 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068777221 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076820174 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067489404 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200370867 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070003314 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078146734 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077287952 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078615967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07009312 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068806159 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078223938 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079768341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068396404 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077827262 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080031313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079487733 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067824326 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080315348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068279925 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079562176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070579418 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079461253 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068682591 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078937169 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068699942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067288224 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06818536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079262885 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07017937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068595639 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069817864 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069582843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078561509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081936528 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070624267 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080143817 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077772851 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070279907 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078160684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068803044 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078402218 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070073233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070470487 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067431885 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08188727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069419213 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068488244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069576446 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079554977 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068487384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079203547 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077379737 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067400642 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080881739 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079052383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077203085 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079845746 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0704968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068670555 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068257297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069840336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076944409 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079261282 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070265001 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067725459 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077846125 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078760228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066899075 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077794417 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076993425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077357179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068514864 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069870309 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079592425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079865284 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077080811 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077072605 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077627507 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06812742 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076215256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076766808 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067526068 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08344582 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067660631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08148075 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078021971 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075355192 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077632852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079880954 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079073924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079082803 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081493656 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067465322 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067640222 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078703887 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06823583 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069293307 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077241188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070279119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069898963 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082670613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068135364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077990021 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066322143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076703039 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065991308 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068792955 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080739456 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067140321 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068686346 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076772231 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068661159 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075112808 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077985936 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07574727 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066827283 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068512084 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076935381 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076181684 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066804927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066691374 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069519767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075390627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07423784 seconds)
  done (took 18.514720719 seconds)
done (took 37.778213183 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20982708 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151391064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179901649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117707342 seconds)
  done (took 2.165145874 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121145559 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102429879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09511997 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064793731 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101179971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064736905 seconds)
  done (took 1.995187151 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308738464 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209162919 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181010681 seconds)
  done (took 2.139195803 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197567597 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185754868 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392069915 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25155628 seconds)
  done (took 2.572515817 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14286433 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088614189 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066553609 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082855517 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132928018 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159178048 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100192333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124717876 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077146742 seconds)
  done (took 2.468742648 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14608661 seconds)
done (took 12.958757435 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.169201147 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092440302 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.192372287 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073523202 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073565724 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081615501 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080911619 seconds)
    (8/309) benchmarking ("sort", Int8, false)...
    done (took 0.148266631 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152275917 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185198216 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072348395 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076957038 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112837658 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19245515 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072989585 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.217541048 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073223016 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194743071 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204409573 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15745025 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18795735 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09480242 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085645294 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076809735 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120463018 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065125433 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.173570108 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.061801638 seconds)
    (29/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073014668 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071652717 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144363688 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145819479 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.154402209 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216564382 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070733348 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152989672 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097652837 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.165056255 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095053574 seconds)
    (40/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069035741 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072087355 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138446658 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071424583 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071432865 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074095636 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06688987 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119931675 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089718071 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086317324 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.1462747 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066514212 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 0.125443396 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074381023 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075626943 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071300918 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099957591 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062744863 seconds)
    (58/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.136797139 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101320009 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104237254 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096335809 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07719083 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099936313 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071487014 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.179152081 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110406939 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.065902386 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070588767 seconds)
    (69/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050749124 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094055338 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184010635 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077369429 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072160552 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080794701 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08629682 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065455267 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078686444 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172555612 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173910043 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.147082768 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05056802 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087882912 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062173907 seconds)
    (84/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115837365 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.297725088 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.148262936 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089535684 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052797932 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090557487 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091140783 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092662541 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075937551 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086375491 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137520569 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06590302 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109618594 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184739657 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052352266 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052284001 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149423748 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075115013 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065486709 seconds)
    (103/309) benchmarking ("sort", Bool, false)...
    done (took 0.132837622 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07356479 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052005991 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052091893 seconds)
    (107/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09035867 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140435484 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204480343 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051808953 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064859809 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053885945 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070868267 seconds)
    (114/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07103761 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051117421 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.295677264 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149783744 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.184417219 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.163502742 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06612781 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105232634 seconds)
    (122/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071393433 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051994694 seconds)
    (124/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05113122 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066714627 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06576038 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053134225 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085821299 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065142625 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052278615 seconds)
    (131/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072384749 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105209944 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064401815 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131713358 seconds)
    (135/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107844462 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075448945 seconds)
    (137/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079533264 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064700976 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088871733 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.134620029 seconds)
    (141/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073259582 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090723943 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 0.125147766 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.107841297 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09335993 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051089196 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103782886 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052222719 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.061394429 seconds)
    (150/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088648756 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065572812 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070875726 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073425872 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.18421513 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065304791 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146860548 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136000703 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130302205 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148199106 seconds)
    (160/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09769045 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06771548 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.193468811 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064247658 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064899427 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072202396 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050723382 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091378574 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.141404042 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098846342 seconds)
    (170/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07255049 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071420665 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105096314 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065504212 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073576625 seconds)
    (175/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07302834 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093317804 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060217216 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072226303 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070741001 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065507573 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064364927 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052471427 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068749485 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075096544 seconds)
    (185/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087762907 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069937571 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050844794 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090266982 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063017776 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064210707 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059812501 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050683346 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052063859 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059609597 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051278406 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051066527 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.230548526 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075942108 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053706861 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076919946 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075004663 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069986447 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053060828 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158411038 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149097782 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182834222 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051648206 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107364698 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071459779 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064616839 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138266441 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070748988 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051048191 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112653728 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066397181 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184668898 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085527461 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051099874 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073748695 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064333081 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086663933 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069649633 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071002473 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051178556 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066177852 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068459685 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132593958 seconds)
    (228/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10708517 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051106098 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051723817 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0721093 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065402558 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061438236 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164232513 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078424691 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064983347 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066854705 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.14949543 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168552417 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05140645 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072405084 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074985757 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064483419 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066815025 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130256307 seconds)
    (246/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062336488 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065473221 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073493584 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075430554 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065795407 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067194288 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077535293 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071058178 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088027576 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051136296 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072240862 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05221457 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051312855 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17352484 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067323257 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0753506 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064989406 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085086362 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079461536 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077860779 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050959758 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087261435 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06217948 seconds)
    (269/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071683587 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072500701 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050978803 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066354066 seconds)
    (273/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063057237 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167367924 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136832709 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063267284 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051962309 seconds)
    (278/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071355443 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064988982 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050572952 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066495843 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050482883 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064576864 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05073722 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051352025 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050548949 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051335889 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069928158 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064750587 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064747167 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088135973 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06147375 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066826995 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.148270319 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050568356 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051887492 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064856779 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063879734 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050575069 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098140057 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087398654 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072407397 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064369164 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054060153 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069861427 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163765125 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063419713 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050749203 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064409926 seconds)
  done (took 30.296566588 seconds)
done (took 31.750844223 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087660356 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09314083 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075858487 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094368868 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080722559 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075535919 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071283229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076986863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078675433 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080210161 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077381423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055131948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072863026 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07295564 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073034777 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089987971 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076937242 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071373066 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071524706 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063721189 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071825358 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064924613 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066972484 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054505967 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076380627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07109837 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071393127 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072713853 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064545155 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065002274 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067656005 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072006342 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064624295 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077051995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070727806 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07162923 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073639705 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075037133 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066246925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065400459 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073336683 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065117303 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07139596 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072710209 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070863803 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069993561 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072055204 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077039219 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089705444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067336984 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073343308 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075101158 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075199515 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071303994 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068654178 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071901204 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06960425 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089783316 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072622081 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067129928 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073642025 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072632514 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070246917 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071707201 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071873453 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073991853 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073901922 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069882335 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073571828 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069983209 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06487794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072227635 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067701292 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064858548 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074463287 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075725502 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063646651 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06974628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071508242 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070211908 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063798717 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066515642 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066820618 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070497339 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066385003 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054115569 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06797516 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070462509 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063993023 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072266328 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070790685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070633758 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06602012 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074000238 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063728407 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06955775 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064548652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06437799 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066053429 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068202599 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064512403 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066670786 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072850699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065443223 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070248259 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077487033 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064273435 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070209401 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06351506 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0633988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077902072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073310091 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064557352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067006825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063535195 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071505973 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063984729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064127022 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064602589 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064312447 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069370831 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064139724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066257727 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071208359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075906293 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064024774 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067113906 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065825899 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063663337 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069214904 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063772248 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064278817 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.203063272 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06433912 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067196501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064965217 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071635828 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067291385 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072510575 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066161532 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073289472 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06952066 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069977476 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070348902 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063540157 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058755922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067275493 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067541995 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067255988 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065176551 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066256183 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065433213 seconds)
done (took 12.373057306 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066795969 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140702849 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097939522 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094005831 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084971117 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065969991 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075356325 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100498792 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066753025 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101009713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085899657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083792293 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111019275 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063957376 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065224945 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0691349 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066860998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080354165 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099688487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085968534 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107924198 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064823472 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09328824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089424047 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085857413 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091228055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066275633 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069393523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068625854 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099256331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085287321 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069093587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065944053 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098736903 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091174793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081896857 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065503367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081478862 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066322062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064839631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080146878 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096881629 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078596208 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079341643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069380728 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068360417 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066168556 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082347211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08779795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077276145 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085311619 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101411526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067733121 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064981514 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063520038 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084146666 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06497746 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068182757 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065197862 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067179235 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065106928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068651828 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079906002 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085665988 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068746163 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078882434 seconds)
  done (took 6.792632293 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085359995 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092497054 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086221729 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086088362 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066112965 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06572767 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06553522 seconds)
  done (took 2.099877306 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068401579 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087682643 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089567338 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089244457 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08384793 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086219102 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074496415 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065738245 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079561429 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067057715 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086451913 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100432077 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066128741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071883936 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089910517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065903362 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089275013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066021988 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068708118 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088495685 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067859153 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081215691 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069503565 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066281319 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079910007 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066037477 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112179263 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070053765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067186594 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068411048 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063887019 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105504913 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079115879 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074548518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065290952 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079562423 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079675936 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064334707 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081465706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070748016 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079068231 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06583824 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066691522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06347151 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069967264 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075595852 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0666661 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066431021 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068255409 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085351786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066478366 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07915212 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069032142 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068613931 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067221027 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069268281 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074963628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066344903 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084920806 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066954171 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081949238 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081551346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079231743 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081166539 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067834881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079037433 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079215538 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068025378 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067659359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068835084 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081421793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063965346 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066975857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076221014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067100419 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087797212 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087798134 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066984785 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07477223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066406336 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065885557 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065727619 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087800284 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06818707 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065833264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070598474 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068942627 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064365308 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065541769 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069620819 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064140718 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0675356 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068493315 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068565172 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068430886 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082002206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068174411 seconds)
  done (took 8.728722262 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0711365 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069809362 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071676558 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069278044 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07004387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069343589 seconds)
  done (took 1.994127215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094190255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069270157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081932779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074435817 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104326436 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086004718 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085878032 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078004675 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082792094 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077798063 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085778852 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087186626 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091532033 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072560096 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085381654 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070821878 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086009735 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074969142 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077248523 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071965879 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085859227 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071868672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072622895 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080773822 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074766989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071565266 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066482346 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078134165 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077235871 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077823995 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071571193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074682876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069949633 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077682118 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086081661 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06979994 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071345622 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076384557 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071376821 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074452256 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087314249 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072251243 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073929956 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076585977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07758245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069781638 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076088022 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075405889 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085243277 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076249764 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07612611 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070546229 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07436315 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075890621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069577547 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076968367 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075912533 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085121856 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071503362 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069925414 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068557502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074678455 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077418283 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074423804 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077834317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076369614 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069834379 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071817773 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072111011 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071111707 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075923195 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067982906 seconds)
  done (took 7.086738998 seconds)
done (took 28.238998468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542493004 seconds)
  done (took 2.082498233 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600966139 seconds)
  done (took 2.164102319 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.083589179 seconds)
  done (took 8.643946218 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401890819 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47714445 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685954907 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129910754 seconds)
  done (took 3.302040648 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66309161 seconds)
  done (took 2.234784097 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211316173 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195492065 seconds)
  done (took 1.990987316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380653776 seconds)
  done (took 1.947784322 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111859036 seconds)
  done (took 2.682069072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260256749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162425673 seconds)
  done (took 1.99286359 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465005411 seconds)
  done (took 2.031919616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.854800344 seconds)
  done (took 6.425603017 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204122783 seconds)
  done (took 1.815473751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241390358 seconds)
  done (took 1.811818326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701826969 seconds)
  done (took 3.272171783 seconds)
done (took 43.971995674 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081420328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079865127 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080186471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077177281 seconds)
  done (took 1.873611575 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077855999 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072040005 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076139599 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072109956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075368241 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071593971 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072878377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076207648 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071373768 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071606163 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071477072 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071756885 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0736164 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073461845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070172735 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073739838 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07510317 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071612721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074681293 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071545499 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069822285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074326321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073823939 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071219922 seconds)
  done (took 3.320982991 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078564894 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071825326 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074334219 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071324869 seconds)
  done (took 1.873746326 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078608512 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091119674 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089012517 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076347867 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090515019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08539491 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06871541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068165129 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072556777 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076479343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067249973 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094808318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086473655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076454707 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078358388 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064951063 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067221392 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085882857 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076498877 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076450549 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068834091 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07635297 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067250073 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08711511 seconds)
  done (took 3.44511528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078803826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101503051 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077325368 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086302627 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088525692 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064553507 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07385502 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087824883 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121616148 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065060168 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068948491 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064655799 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071449284 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064714416 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075135924 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10334483 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106781955 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067427214 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094500603 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064582695 seconds)
  done (took 3.206293311 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072091674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069044448 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065497684 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067735755 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076519861 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07300521 seconds)
  done (took 1.998960373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06779694 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066157983 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066152888 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066265496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070408331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066686796 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065806577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066409394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066114966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065834402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065728947 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065196332 seconds)
  done (took 2.369906173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.423946975 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070395117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067751871 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064969563 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06975057 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065422368 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078684611 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067483541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089406077 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065797802 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065608649 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067518252 seconds)
  done (took 2.770491073 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203539003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075310509 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232687085 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134632506 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109924936 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11361228 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102771958 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1116125 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14156346 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100574325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165470837 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162597251 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105853786 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135385966 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08824727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096813182 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153057521 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159447438 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102306656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162866464 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141563862 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12275737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144723258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099520773 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10398332 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119705883 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070183519 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078613407 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167606547 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129352521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143870411 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109184797 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091940777 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173535984 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16739276 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140050363 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132534548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082673366 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100265096 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131190021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197584153 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08892294 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159338195 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246662042 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081087685 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132870574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119999506 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118884199 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105330907 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08846853 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143430857 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180423719 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138175145 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08674457 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111146608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112838264 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11443499 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102003672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178630777 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15952456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126075382 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07083607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097758532 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151503504 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130109837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108203392 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125712863 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092790674 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130953385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152781204 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116764981 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140989453 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1264537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087452111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117714865 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137575981 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126088502 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167248029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122591416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072107583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122576423 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101541042 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079952886 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140038891 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074142766 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172577043 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097365582 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104427855 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111497988 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107645893 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107381011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158379276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140522606 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244015878 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066002838 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10302956 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118828242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147202922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085658538 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107040793 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115364107 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076599821 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137996316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074148423 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122552366 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07513476 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123199657 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131611551 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074822588 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120439996 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099890858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099251359 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131070788 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157940324 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088180243 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081363237 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165323552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119368847 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104020231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141746273 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154361389 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09854114 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10131769 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1470424 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175879099 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088124047 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160300997 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105484357 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08242279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08606726 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121531584 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11087448 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120345712 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081225691 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11676281 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165771958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074155024 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093385333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131027305 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078072697 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079695308 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102065763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098794527 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093683047 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098804322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102027459 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135751864 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121545118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103160915 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27017685 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097876999 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167906522 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087764203 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09982578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102667989 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068717696 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135225249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155271829 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078731388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162360697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121658062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104373915 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118710707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081527844 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138539267 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077736708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070059894 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143924554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10923729 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108885192 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148578767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103244401 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124852472 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1187044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132906876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130351942 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127713711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103481255 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086884443 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11009479 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123885815 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072356606 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089950222 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078874056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102494122 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094235591 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081907389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140002089 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122862117 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098885118 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110364534 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095503178 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144754059 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075063893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126594713 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117371735 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092593878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149585415 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149271698 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128675898 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097717725 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142612174 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069232428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072807782 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087374761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267118849 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082396923 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083531685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115902214 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145026396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127834583 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135879739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110084843 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119003097 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153210478 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069119222 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113158214 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145861979 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119962869 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103101815 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088728929 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097747158 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140585914 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106660778 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178779365 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112717386 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124822289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151340611 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097810123 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079137446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101999684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133074974 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102865082 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142194908 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103518538 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086814033 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108311715 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073041397 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09841114 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124997081 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117796789 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133634405 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112456089 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130329362 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076064275 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115402585 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118819897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12070738 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063356894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118345794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158609287 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092554321 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116517971 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150650291 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078201149 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122558335 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320252044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145528804 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083889041 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107956285 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117088656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126837686 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118802457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138831822 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106904426 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134202869 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107403445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084618728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086338898 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096323945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103761496 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09279645 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107230871 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114128772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093582694 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130998084 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102188793 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108101584 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115928873 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095430578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087967154 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09509677 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172067187 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117639177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16866309 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097296256 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142841627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162050709 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073604663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077969048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077205504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137728915 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083086633 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128656955 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096266034 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104255126 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121836576 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14019768 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093671512 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067577501 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106881488 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132051245 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110343319 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096668379 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102756781 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161029088 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099561497 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078388122 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111667067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102501097 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100411032 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168934079 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060585179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095256137 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073678686 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078503324 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123267192 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145033145 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077908096 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.09991073 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114953218 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105504818 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122266854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097277705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095607722 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110280134 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142322806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123634324 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08676958 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107656998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123622007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148640535 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10139415 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094726087 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163144536 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145680328 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152293113 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083500308 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10785171 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107508504 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102682134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144367679 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079661835 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15058622 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077159111 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126019466 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096696205 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083688302 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120294797 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.092971207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082775663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135832896 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110492417 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078367675 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072479443 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110089691 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111814345 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099223217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072460533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12933282 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069887551 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122718854 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155254379 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076863413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097947463 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090708061 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.337849372 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11220738 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10459602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089343505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099294324 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173825095 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087885509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148342366 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139611149 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113101776 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135421985 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099344007 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634533007 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077248997 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150579133 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115409711 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16998893 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096249126 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116677015 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108854191 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122156588 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142144199 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103444588 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176212859 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130269879 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115210498 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078745034 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101264515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101216962 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087620421 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104102767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112317623 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114691296 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092197707 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11431285 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121796822 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080965426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093811667 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153709973 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115605394 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142335915 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138749979 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084128625 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116673228 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137085071 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079059984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119175622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148464705 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103941343 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09611049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079162754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099739216 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166129321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072520128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155903538 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116062144 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106397075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109695896 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110049614 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125864064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10322464 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116610049 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089226254 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105474421 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108223335 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078645866 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073964559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100062988 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106904519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094110593 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094002832 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095635263 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144769274 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069194435 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091534352 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099655674 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138172964 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166144368 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.085483348 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080164579 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11290392 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108218131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108316152 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115427591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076768015 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079878692 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078262931 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07808477 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104686363 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108015915 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099772239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10633179 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15549386 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079209329 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219641064 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091683801 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100720736 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06798213 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07521495 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091691847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092455702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103042452 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097029861 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161523384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091296206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086807899 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088485208 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071169503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079922709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122576744 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.371686886 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123320343 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099928081 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063195111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109305096 seconds)
  done (took 57.749232554 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11178244 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083076684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09750677 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14976301 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121999569 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212141572 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156326841 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199303775 seconds)
  done (took 2.867185954 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071779801 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093613753 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100998037 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082303895 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066566681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068354422 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223678842 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079702688 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066427929 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08792339 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07812642 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068150909 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421051407 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065354664 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067115482 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062925719 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067306861 seconds)
  done (took 3.492722512 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370580872 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363661425 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372519716 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07242674 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.79275792 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088370747 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077767512 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095155692 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070965707 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267882828 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705771054 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094773227 seconds)
  done (took 14.10392102 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077329347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0689825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082530781 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083440815 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072747334 seconds)
  done (took 2.116935526 seconds)
done (took 102.797152121 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08188663 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403649005 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053850127 seconds)
  done (took 2.217598403 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084770049 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086444762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083497775 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082256106 seconds)
  done (took 2.07369196 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07640818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077041931 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084025447 seconds)
  done (took 1.972042588 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221397959 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13729202 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08559647 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08370236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078492678 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077420898 seconds)
  done (took 1.983361842 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074007002 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075117694 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071910576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075683318 seconds)
  done (took 2.034808496 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078096036 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053922074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056559046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056850551 seconds)
  done (took 1.986837708 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087098208 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078689156 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078053842 seconds)
  done (took 1.987031207 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108675206 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083789274 seconds)
  done (took 1.933696262 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083689888 seconds)
  done (took 1.82859562 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100466258 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114829968 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126308815 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107949404 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1348895 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107515081 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084365295 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085724024 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076314692 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086338603 seconds)
  done (took 2.765263072 seconds)
done (took 23.04352512 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080664279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46096019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359069586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090000572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666023037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355708456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.975896495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091127386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112081362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066712517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08332065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650032685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967395883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413807115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954920065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322152284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647884826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067334378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066946233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06679718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961733849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066791946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067209538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067344448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647445097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369491218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067468281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321961164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066747455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068801486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354007475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067009253 seconds)
  done (took 16.353917986 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071590557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116102321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071864104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082785037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069310399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068423302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070393185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068038377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117960058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067064566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083261937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067072914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070558892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06772137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086026804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067118482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067903906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067957355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067161825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0678039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085620554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066847308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067575801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067610164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067271466 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078423488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067201932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067109693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067584923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068998921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070203258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068004401 seconds)
  done (took 4.109094965 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117532999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127461186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076249559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102191685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111986463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06903051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14142936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091624711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126386645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06729501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083406804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067385059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099864761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068105261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086683841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067610872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068487738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067891848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067377795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067720639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085899626 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066770508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067496361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067762726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067619988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080132119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067859029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067347551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067206253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069003315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070269092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067879144 seconds)
  done (took 4.3715833 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074308978 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077046443 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084150131 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081835276 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068083881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071304846 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071593882 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068388874 seconds)
  done (took 2.35007254 seconds)
done (took 28.934267662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080271255 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070310248 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073708571 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079551211 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072224822 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07772878 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06626004 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073359345 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070908661 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071807751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073779826 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066938279 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070311219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066442341 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072701065 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067278553 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078359006 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071008965 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078034975 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079031597 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068612054 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07198322 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073087328 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078158645 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078444119 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078144881 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076208709 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071789656 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068208684 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069899407 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075924598 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082520635 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067681917 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078331652 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067086253 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066740966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070648247 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0669518 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078329535 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07535855 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068682003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074814557 seconds)
  done (took 4.794755057 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090231876 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093496388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085446538 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063799273 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066023607 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064160322 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087294731 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059006192 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05888689 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086641596 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055222433 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058753355 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061644534 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053530681 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058602448 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056563976 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061265595 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055095391 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058606096 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058804296 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057868959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05366141 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.05954861 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064630762 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055864306 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061115202 seconds)
  done (took 3.453173268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076283765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086106139 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090117177 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125775678 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102621777 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075859992 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077079078 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090891253 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083884668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066437509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070269972 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092421324 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086815729 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073310142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066698475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083395413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080844649 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068149759 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072580599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089405378 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083043108 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082626712 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091248323 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.07978029 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065934978 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069031766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070241477 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080208465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070978093 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075343629 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070401126 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069884826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068593123 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077861534 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07051387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068477911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089056865 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076389123 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076882107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067307808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069924985 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067485452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088377823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121769629 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067241774 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073103238 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07484917 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075346125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066470265 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085458929 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077210386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065986193 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069759651 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065906829 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066469517 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079286493 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068590702 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068723983 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075459598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081734577 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084326699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070434989 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08218337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066343831 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073431153 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065793891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067134457 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065513774 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090676699 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068733348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107020484 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067678105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067775718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07497419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074291267 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072612193 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066728582 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082634311 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076524969 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069547441 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074862694 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070122292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06931945 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086526212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069138318 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067921553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067756745 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073346935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069725863 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067554847 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079013809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066214462 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070204847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082491197 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067005202 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067668822 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072411006 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071557841 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065704847 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078149129 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070868937 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067729346 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075450006 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0663477 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069047734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076817164 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072617038 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065420031 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070831715 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072683357 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067136673 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067694261 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06941422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068174333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075354439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07269533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071106738 seconds)
  done (took 10.571715845 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162713346 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155248912 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06999489 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145085528 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075542998 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077887005 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146040514 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093403814 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066883038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06785257 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067868158 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108281366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104463124 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114501664 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077708149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067140851 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082227588 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112545976 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14705738 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141673215 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082524136 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075838545 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069204364 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068808624 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070130226 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077120788 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084821825 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075870251 seconds)
  done (took 4.48142467 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082644679 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099086356 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075131271 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089886002 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091972654 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067778076 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069494399 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069055217 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079335735 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077870355 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066610414 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072361138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0736834 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07033883 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068528814 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073970169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074490803 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068612179 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070203441 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072352384 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076652982 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079672356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070650972 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066369868 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073156794 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066362313 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063807174 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083536088 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067312476 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089138173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065028124 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074246932 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080968174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067962764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066960519 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067583196 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066900678 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066925503 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068390435 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065315317 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065488012 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057058061 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065740653 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078287141 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073144167 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055998118 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071375972 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071529016 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071849885 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064306288 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069479832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069258804 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070122629 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073658887 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071647468 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071612193 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068198361 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065028208 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074566473 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066814799 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063754161 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065483797 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070863601 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064986549 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074331825 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070876414 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065408821 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066220237 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068565803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072476358 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066542808 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069741726 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064156449 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068597754 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071138051 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068407395 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067849387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065065376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066609035 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0666435 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054669002 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066650218 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052786189 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070064072 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064754675 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065593343 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066427654 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071277569 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078759878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068211844 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07239476 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067788363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065857936 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070034988 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059863424 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069154155 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081330362 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081596626 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066795072 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064757855 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080585421 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071495524 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065557738 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055509148 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073598659 seconds)
  done (took 9.166537842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09611951 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090042893 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071811767 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085255057 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.093447925 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088912358 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076232577 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075955984 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068717432 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081169183 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072622013 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075980759 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067178788 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076256637 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092015987 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075896789 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068964997 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075667505 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070740445 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099535711 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082397488 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081777769 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073585048 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067427189 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074975049 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079121454 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088098388 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078803491 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077528567 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074665538 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079207256 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088136956 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073166848 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071186771 seconds)
  done (took 4.488496126 seconds)
done (took 38.701324741 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.838005771 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.095873031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.836436316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.25139016 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.912738162 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.034474206 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.839152798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.838354402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020412879 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864755539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.094735627 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.870834005 seconds)
done (took 66.262462563 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.874485829 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.978685407 seconds)
    (2/2) benchmarking "String"...
    done (took 2.103798333 seconds)
  done (took 5.855301072 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.118557792 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.368752695 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.072773098 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.830479358 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.833057445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.128233119 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.632360968 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.372840342 seconds)
  done (took 31.011325571 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.117876723 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.030584886 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.536328187 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.565647786 seconds)
  done (took 16.077608572 seconds)
done (took 64.79053484 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.868739389 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.834522748 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.854822013 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.813072573 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.888044664 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.852736124 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.893928938 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.058131577 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.830924033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.818142115 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.829251044 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.265883075 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.832166455 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.945137581 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.827787845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.835576134 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.892841676 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.260262605 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.988434603 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.836446133 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.850921129 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.845358041 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.829316525 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.839836075 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.878208624 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.836533087 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.269817105 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.842744482 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.681205455 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.83206405 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.880283631 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.187596594 seconds)
  done (took 206.773411238 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.832456856 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.943943602 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.00391134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.858884554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.329730875 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.034033324 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.963256791 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.379916594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.834924267 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.847827036 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.09694276 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.833117422 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.132815589 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.787108603 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.847314453 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.832965285 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.008397813 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.140808408 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.838930243 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.106531847 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.847441995 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.999550042 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.945678284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.082362273 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.839685703 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.878033008 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.860206384 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.845938658 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.031718853 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.990899875 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.868897033 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.880177914 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.039745498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.70313811 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.851439574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.846059874 seconds)
  done (took 172.941298588 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.987011626 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.834234693 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.833045462 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.833955975 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.83390103 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.839053664 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.83235475 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.974782202 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.977305862 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.318573296 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.360791549 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.834834263 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.885200538 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.706239886 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.835110826 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.904200566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.845732928 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.831955573 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.849223929 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.862907625 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.830365317 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.835755752 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.970791976 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.847772304 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.83672974 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.838831546 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.836449293 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840581626 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.204878733 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.833055496 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840571817 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.079831458 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.832456191 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.835832821 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.751434801 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.213443692 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.935002852 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.834692619 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841616288 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.835785485 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.058748364 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.833464535 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.836640828 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.839041007 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03052616 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.834206292 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.970873768 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.839255856 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.345688322 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.832627634 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.838108342 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.037330307 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.542364199 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.836420755 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.835874542 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.840249863 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.837530317 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.83636953 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.844276185 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.951790478 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.909117924 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.835368369 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.842230511 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841959767 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.837284403 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.838352577 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.839344605 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.939738682 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.894088051 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.063807482 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.846304455 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.960819858 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.838941203 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908030273 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.928900893 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.835101051 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.837667473 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.839023684 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.839586871 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.918995641 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.83551557 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.967365498 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.842899167 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.840192813 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.887902728 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.907177985 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.836205523 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749487721 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.840023641 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.840501842 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.149356037 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.903518229 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.837047273 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.839596121 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.8415661 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.840020062 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.967220483 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.960879942 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.624036441 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.839406403 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.963299965 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.840447982 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.977338033 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.837715491 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.039728914 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.842258587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.922156271 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.841789015 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.841708117 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.840862462 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.873256246 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.840340725 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.899299899 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.842168876 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.211104485 seconds)
  done (took 409.235844115 seconds)
done (took 792.765293696 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.531948965 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.488420383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.606754345 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.511674441 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.489220418 seconds)
  done (took 14.410047656 seconds)
done (took 16.19007488 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.930056742 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.929807001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.862788271 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.92790121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860983739 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931950347 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908854513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.86735255 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896645304 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.866371547 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898265873 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.863414203 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.85307123 seconds)
  done (took 26.380624028 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.081897082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.075247737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.910790954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.070940886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.886943957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.098783833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.007170981 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.994828763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.998240774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.858832813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856564616 seconds)
  done (took 23.624847374 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.083446002 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.083757939 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.91390342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.079072396 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.888881506 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.082467186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.005849882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.999461507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.994497199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.858783207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856831518 seconds)
  done (took 23.631784312 seconds)
done (took 75.417817278 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.851330687 seconds)
  done (took 3.635167889 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.87495559 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.011808835 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.855107174 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.855965783 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.851767084 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.852959594 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.859484384 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.85128692 seconds)
  done (took 16.799455949 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.852146744 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.849499677 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.852589665 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.852842604 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.849713573 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.84985539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.8525958 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.848973403 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.849697446 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.849886562 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.848449352 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.85300853 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.852770601 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.852219689 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.849939982 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.852576728 seconds)
  done (took 31.402853063 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.852560296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.849205131 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.848755326 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.84930947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.84923937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.849544918 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.850055815 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.849652854 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.851707283 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.849149672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.851567119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.853653908 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.851923277 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.849978849 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.850598685 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.851725574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.850395233 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.852139726 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.855854457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.852471787 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.85093121 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.851078643 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.852419628 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.85232401 seconds)
  done (took 46.215497422 seconds)
done (took 99.834732309 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.544627909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.574748508 seconds)
  done (took 8.905569315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.857025652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.854407875 seconds)
  done (took 5.540130776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.854373967 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.854220642 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.85379502 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.853914081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.853811151 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.853148468 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.854909385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.854288232 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.855401887 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.855913975 seconds)
  done (took 20.332231931 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.855154578 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.855864712 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.852413805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.85485237 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.854795475 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.851318084 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.856090077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.855903702 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.851118528 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.853173396 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.855324167 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.852865749 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.855689969 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.853983539 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.854569583 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.852370043 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.851708351 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.852352026 seconds)
  done (took 35.158740992 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.853850935 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.854887467 seconds)
  done (took 5.49755697 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.85280423 seconds)
    (2/7) benchmarking "second"...
    done (took 1.852053947 seconds)
    (3/7) benchmarking "month"...
    done (took 1.853951078 seconds)
    (4/7) benchmarking "year"...
    done (took 1.850532842 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.849718154 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.851308938 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.851342214 seconds)
  done (took 14.749691545 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.854681502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.025583178 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.09801839 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.563845352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.857167675 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.857850242 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.809027423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.857415202 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.859619399 seconds)
  done (took 20.571782795 seconds)
done (took 112.540300524 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.70427025 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.844719501 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.23083069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.905423432 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.890506359 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.149260074 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.883470753 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.064885732 seconds)
done (took 43.461790614 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.906616678 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.348078804 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.357646232 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.692518312 seconds)
  done (took 12.171870287 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.821263977 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.374905368 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.87381129 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.427820313 seconds)
  done (took 20.282849982 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204410444 seconds)
    (2/2) benchmarking "read"...
    done (took 2.195307186 seconds)
  done (took 6.177948326 seconds)
done (took 47.315523862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839721402 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839372812 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.840405708 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.837235408 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.840212574 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.837730026 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.839925819 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.839821551 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.841581128 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.843168797 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.839741854 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841680372 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837763798 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838868197 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838872073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841372212 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.840004409 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.838303311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840064367 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.839894683 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838091603 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841666385 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.838128403 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.838723922 seconds)
  done (took 45.928581306 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.842390581 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.841417623 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.840420098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.839781909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.837751412 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.843259048 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.840610253 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.839246208 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840543095 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.840842298 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83730052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.838374483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.842573832 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.83726435 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841071937 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.839289766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.842533769 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838760958 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840555882 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838377688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.841209613 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839154021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.839380544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843269564 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.839206021 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840157702 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.841925035 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.840208254 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841381109 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.837935754 seconds)
  done (took 56.983235529 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.847750036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.848859223 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.841566835 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.843060581 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.841899582 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.840660343 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.843215081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.841344384 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843020053 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.843737234 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.844639574 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.842366891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.842782002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.843351416 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.843406668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844480971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.844972784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.842887399 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.843805619 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.843541298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.842674995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844650082 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.842288132 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.843639475 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.843061571 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.843881304 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.842650578 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.843003562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.843393301 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.842783259 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.844470262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.843795649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.845674302 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.84470763 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.843694842 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.845455094 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.848292406 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.852288168 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.844939861 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.843479309 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.84366236 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.844554472 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.844017853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.843704684 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.843744689 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.844390589 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.844151412 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.844136296 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.843418042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.844528587 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.844895577 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.844810474 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.844963865 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.844924801 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.844692908 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.844636629 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.844107977 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.843942742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.843377824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.843600008 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.845008039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.845847671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.843806827 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847085207 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.846819692 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.846421128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.844266628 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.845952154 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.845306172 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.845859382 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.844756737 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.846606998 seconds)
  done (took 134.571801324 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.846029645 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84492736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843343735 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842476548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842426732 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846231096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.842021056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844897915 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842819651 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.846416812 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846153257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843145322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842795186 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847871458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846132838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843758067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846141092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843729469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.847404615 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846113708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846886264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844007973 seconds)
  done (took 42.367403995 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846330877 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848121661 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843817205 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845912733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.844620322 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846675773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.844556135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847077085 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848250036 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845579621 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845558861 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847134888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844558931 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844034396 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844453521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845903888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846597662 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844915374 seconds)
  done (took 35.005685048 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.844603531 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.845782571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849204655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.845248528 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.847548131 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.84769724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844717788 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848483979 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.848704947 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.845261219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850277931 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849569761 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.849089289 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84679932 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849028975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.846887819 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848978515 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846474479 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84948331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845630528 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.847915491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848764056 seconds)
  done (took 42.43034419 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849247409 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847116085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845972776 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845508775 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846904382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849521943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.849729609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.847674499 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.848764044 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.849663817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84562789 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850698973 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.848425493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847823017 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.848566837 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847903034 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.84729056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848789855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851846828 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846293269 seconds)
  done (took 38.747712595 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850464353 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850126024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851605301 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851343593 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850459275 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85007797 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852479112 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.850484804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850644907 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849674252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849374756 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.851202792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851934215 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85190948 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849911831 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852370439 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85171809 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851552653 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.851811752 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852130327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850748947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852713537 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851158416 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.852913392 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.851037067 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851748282 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850831851 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.851059989 seconds)
  done (took 53.621374847 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851542483 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85263248 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.85054255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.849930182 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.849582237 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.849525903 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850555856 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.849880063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.852695979 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851606691 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.853326459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.85301035 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852886234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852551708 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852761367 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.856954178 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854638979 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850894298 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851087281 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850411476 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.856281192 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852950848 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.855177715 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853928081 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849419643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.852327333 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853492179 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850854852 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853774994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850458182 seconds)
  done (took 57.354644866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.874583948 seconds)
    (2/2) benchmarking "in"...
    done (took 12.854009727 seconds)
  done (took 16.518857988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 5.584403301 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734862229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 4.235107477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728187729 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 5.793845799 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.728792643 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.734929313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.150154321 seconds)
  done (took 26.774088905 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.738957091 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 8.403494308 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 2.047778478 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.734803496 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.733322503 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.253743433 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738056672 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 7.360452273 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 5.593529326 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.738035383 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.739469136 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.746470538 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.740225192 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734243485 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.734867595 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736331538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.737631865 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.732682901 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.733324688 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.731924647 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73426339 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737937722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737095304 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.736482793 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.737387417 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.749785566 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737349301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.733835258 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.738894822 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.737437084 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.735072134 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.735601379 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.73445886 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.736027416 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733949896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.737664522 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742213029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737260167 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.742080293 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735428568 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732905037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.733492085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.737463259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.736926915 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740566104 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.731501654 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.73342608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.731010693 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.733894453 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.735256112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.743011768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735909068 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.734654927 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741928015 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.737482548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742590057 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.745826704 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.740505798 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.75298285 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.751066409 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.747756451 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.748340365 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737871801 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.739288226 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745409146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.768032701 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741254084 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.737794181 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.734967582 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.737665828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.743393482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751242479 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746393338 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.736227111 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735820135 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.739294315 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737654597 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739656352 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737325797 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.74220272 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.736583582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731166717 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750152927 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762778338 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.736462068 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.740935358 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.735053147 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.738173738 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.740652017 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.751561597 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.740356625 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.737493384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.738977808 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.742103709 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743928261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.738660866 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.736890971 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738322347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.737758542 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.744219377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732575644 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747923133 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.752717084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739315739 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741256242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.742542284 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.73942093 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740167103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.746686157 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.740040128 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.742766464 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.742632913 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.748055603 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.740770043 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744693965 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.748947507 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.738067958 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.738315203 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.742069956 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.740531831 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749084343 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.773329972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.739897553 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.740520892 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.741097041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.965299945 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 8.404183884 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.745084635 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.73999251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.737703062 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.743591523 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.74178185 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745228416 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.743882659 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745620001 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739849778 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.739242591 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743981059 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.740473816 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.744544328 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.743423455 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.740973267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.742238288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.743740842 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.743789366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.743457356 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.745354356 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.739261746 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.744300012 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.742743157 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742518042 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740727457 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.740888813 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.747655981 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.74154388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741691569 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.741872794 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.742719062 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742937249 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 8.206211592 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746426749 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.742262552 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.164939808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.748411758 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.746780975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.742186961 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.74021842 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.744001771 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.741105535 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.742893161 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.745067255 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.742831884 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.746987127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.751685491 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.742871767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.740599952 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.746206281 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741976529 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738823871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74457546 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.744240729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.756162273 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.740646197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.745750725 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.744069869 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746100722 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.741221361 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.740870139 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.745800368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745589619 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 10.497755991 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.382702356 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.490642187 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.695125025 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.478068418 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 5.295578295 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 8.519642527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 3.420614919 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.6870244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.26984903 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.579915742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 2.575834575 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.577366519 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 2.576999677 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.9345255 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 2.373266748 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.574537358 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 2.790892307 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.793052071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.378842553 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.682959885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 2.483806316 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.473810448 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.372857554 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 2.474837218 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 2.687793348 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.577256391 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.685808593 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.270525856 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.579081587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.267446588 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.37114593 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.587653924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.370232982 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.894389791 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.581981664 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.580742967 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.581387033 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 2.581764118 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.480076444 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.369348846 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.483528755 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.579151219 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 2.582155662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.798143335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.482361652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.584060805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 2.478038105 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.270539658 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.580288137 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.686841552 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 2.594638064 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.470541342 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.688225808 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 2.374171812 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.789570633 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.58481147 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.482150135 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.68373079 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.577339137 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 2.585126194 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.47871468 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.370679035 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 2.689006218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 2.578472014 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.477586481 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.685614182 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.374502793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 2.373781016 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 5.409073503 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 2.477063999 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 2.477806415 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.688480649 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.685651255 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.593339457 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.477647361 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.47640735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.478176516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.479327439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.589541511 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.58784753 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.686043287 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.584485146 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.916340473 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.488416576 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.482417775 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.7887402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.583471218 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.484116132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.479040193 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.592724766 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.587961748 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.688921064 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.692840354 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.375284075 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.373346204 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.682632767 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 2.271695395 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.590001064 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.584191423 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.278459934 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.586005493 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.476611777 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 2.47909074 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 2.579857131 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.58526503 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.788344068 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 2.686961212 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 2.484599484 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.486349153 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.374751419 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.692058094 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.382393794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.373190277 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 2.581773046 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.799659359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.589083929 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.374414895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.583213737 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.381767643 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.691600921 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.384426874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.587693083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.491355386 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.588916955 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.487979909 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.268533271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.696813163 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.281912991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.47398119 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.789739055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.585965879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 2.271421797 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.484036063 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 2.271815314 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.690706374 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.382569882 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 2.582233642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.375646174 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.699599157 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.477880414 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 2.37516077 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 2.375050987 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.482307939 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.48195049 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.588815108 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.484546543 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.377022065 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 2.482520982 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.277228994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.893217611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.484257391 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 2.581875808 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 2.477076965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.480208998 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.797755231 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.479319592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.480369404 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 2.270343508 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.474406599 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.483913934 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.485223597 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.583305533 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.382997873 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.275378736 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.695862729 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 2.790908187 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.59018992 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.375074856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.477136 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 2.691902093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.585177844 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.79654157 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.685685244 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 2.693454672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.479467291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.480755726 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.488514053 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 2.375304712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.69433039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.585547206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.37945744 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.585058941 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.280645587 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.611225498 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.692625033 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.834967203 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.381547937 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 3.005903726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.594915788 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 2.376285452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.79054572 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.273964532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.595372816 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.388782785 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.792658672 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 2.47835523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.47987852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.192124936 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.472854805 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 2.796712442 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 2.580028248 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 2.579698989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.682583212 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 2.264941737 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.372897476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.393699204 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.57932841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.474170534 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.579246749 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.694884177 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 2.375935092 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.473571357 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.47255914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.582746819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.68200158 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.471984629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.367350731 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.473034638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 2.472416223 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.888465288 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.687436315 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.791702304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 2.579245388 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.262158138 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.679346746 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.577668204 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.575684577 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.471025819 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.578575887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744306905 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.747540555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.74580287 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.745974509 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.743225051 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.746391555 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.748925275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742385958 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74375183 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.748906669 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743064576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.741765564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.738918154 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74351506 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.738128295 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.739532596 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.748642404 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74352535 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748652975 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746259806 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743872072 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.740625476 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744759677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.749218717 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.739322935 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.742724529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.741981898 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.745732068 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.742951853 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746480388 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740969195 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.746974567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.741241102 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.741263484 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751771592 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.740422208 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740516979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.740903664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.742483439 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.738216833 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.737590372 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.73924547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.738744958 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745847055 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.740982974 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74149779 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741085494 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.738481166 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.742070683 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743879216 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739707162 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743100972 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.738538946 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.740359265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.7396676 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740631128 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.735308182 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.740495663 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.740540871 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.741556851 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.746631165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.738264726 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741329809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.742113215 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.742847366 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740946835 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74085426 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.738975834 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.738454022 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.741165745 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742250218 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.740712579 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.74633592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.741308758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.740684652 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.743518847 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743644944 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.74497852 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.752229165 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.748754223 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.739206389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.741252619 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.742286775 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.744025871 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740445243 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.741813996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741799965 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744179793 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.741134266 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74201998 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.742603555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.744356349 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.757274088 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.743814996 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742663453 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.741649853 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746215081 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.742099745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.739655048 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.741575157 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.745930536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.743683859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.749744488 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.74255414 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748853061 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742630321 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.744385145 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747431253 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.745321396 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.749316881 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.745013317 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742222283 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743357564 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.746238923 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.757613656 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744964051 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751219938 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771333873 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745033519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.743698862 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.742901709 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741465195 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.742550917 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.743614549 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.742880671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.743541885 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743838374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.743543385 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744758025 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748104895 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.743973224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.743215966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.746296427 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.744065496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.744602898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.740310792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.745462067 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.744293828 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.742867057 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.742984493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.745213091 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.746314878 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754970673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.753959896 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.744580273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.744325955 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.74323272 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.748132433 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.746847439 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75404102 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.753161981 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.743624761 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.744751863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.746925623 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745027158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.742947508 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.744360182 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.74500972 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745409081 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.74337012 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.757301948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755135667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.747909432 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.74407318 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745383155 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.7457742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74647593 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746233284 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746419377 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.746160479 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.748538971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750726788 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.745121221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746977857 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.748637473 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.755526066 seconds)
  done (took 1275.714942389 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743540576 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743274912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.744541581 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.742567826 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743380773 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744245404 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742766529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744458674 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744493936 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743751775 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743837045 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745150889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744906763 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742808948 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745965698 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745784211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743954262 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744049174 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744865513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743995319 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745111372 seconds)
  done (took 38.311983937 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.747054105 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.743737043 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74708998 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748159744 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745708741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749048997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744761122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747723145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74746291 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745853546 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747872197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74709122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.74488219 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.748068422 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744809908 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748329791 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748357181 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745908514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.74860718 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748227313 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749731894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747659699 seconds)
  done (took 40.121876097 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748828161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.748507285 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.749517732 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.745216503 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.749664542 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.74577191 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.748155965 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.749457389 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.749483806 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.748971866 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.7463096 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.748843825 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.75506217 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.754201355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.751618061 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.749582463 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.892934002 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.749997776 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.748457206 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.749561685 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.74564797 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.754814598 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.746115203 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.746161442 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.748766495 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.751227844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.750238058 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749428932 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.750464127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.751946573 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.752384548 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.749008895 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.748669401 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.751486592 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.749601274 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.750457873 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.75463183 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.748872365 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.748406555 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.750663166 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.759397234 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.775439216 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.751775108 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.754612831 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.749499491 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.751585227 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.752221676 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.758242821 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.749693435 seconds)
  done (took 87.618577088 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.752306482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75074645 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.751088536 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751485225 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.750298002 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.751020456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.752492075 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750200807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.748407057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.748249646 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750341714 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.746815467 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.749108483 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.749826012 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.749368504 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.747033963 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.7484465 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748444651 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.74684333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.746926692 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.746791251 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.750001674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.749411478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.747171381 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75024766 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.747005824 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.747300843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.749361833 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.747230184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.747388815 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.748662694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.749241065 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.749884841 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.747562044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.748325984 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.750234725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.751274457 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.748002764 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.750503048 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.748405653 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.749743545 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.749996769 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.750179079 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.750518416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.747979484 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.747907605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.748221517 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.74788177 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.747989462 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.751177701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.751260368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.747792459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.751007483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.747644815 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.750839797 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.751466765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.749019404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.749036329 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.7514519 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.749685286 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.748547607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752615924 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.748679641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.751876487 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.750963696 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.749255332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.749473092 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.751320636 seconds)
  done (took 120.64812236 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75058715 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.751005527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751694869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752883725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75088418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.751466623 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752111115 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.752280504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.751633787 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752239449 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751381744 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756492514 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.755126812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.753519862 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.754687985 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757923652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756248636 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75533108 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.753480425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754363605 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.755014961 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.754685078 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754444607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756192511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757599068 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756044182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75484409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755118397 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755379282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755490007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755679455 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.755445868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756067573 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.753993646 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.757104263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.755205042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755613122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754828345 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.756622288 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.756658958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754643528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757442168 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756777808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.756351669 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756937968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756425132 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.757039956 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.75612887 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756984243 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.757926134 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.755703242 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756838783 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754551018 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756139322 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756785012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.7554948 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755374818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757114808 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75688496 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758348964 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75571915 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756668908 seconds)
  done (took 110.512583706 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755283004 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.756890217 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.755644959 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.753564188 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.756746028 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752565955 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757807502 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.756631233 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.755717484 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.756959313 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756225606 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754379697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755755774 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758039846 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75491098 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754165246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753738717 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755197836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757632277 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753346612 seconds)
  done (took 36.806419528 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.756228138 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.756967721 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.754691545 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.755186613 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.756538913 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.757016617 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.759136312 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759255892 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755499205 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757744592 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761372244 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.758596353 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757365732 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757134394 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760004834 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.756710999 seconds)
  done (took 29.815319103 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.756537304 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.759736339 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.759129238 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.758622083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.756241479 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.756317474 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.759363308 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.755719238 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.756302709 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.759317755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.758197741 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.760178324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.7587968 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.759649524 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.757804192 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.758482732 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7562595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.756512695 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.759504055 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.758414962 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758394032 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.75687792 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.761617051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.759841864 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.759279957 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.757363583 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.758234108 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.755904031 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.756721411 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.760300995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.758144191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756400299 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.756990221 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.756036219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.759162445 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.756330281 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.758973706 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.758641896 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.759415461 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.759055504 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.761440024 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.759154009 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.760147596 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760799556 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.758402708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.761204213 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.756958354 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.757999635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.759579062 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.759005966 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.760096042 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.761151268 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.761606327 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.761096471 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.763277751 seconds)
  done (took 98.423982386 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760160208 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762689326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760247977 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.762823796 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762593917 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.761517256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761632833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761306861 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761425489 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762381629 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758965267 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762219096 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762653238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.763071264 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762249001 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763604405 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.763268875 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.761953943 seconds)
  done (took 33.41394271 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.760642018 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762883179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.765451573 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76047226 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.759991946 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7632088 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759660964 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.764990178 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764122777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761104596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761127377 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.764566431 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763928918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.764698671 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762820414 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763042899 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766654959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76565689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.761413822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760591391 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764802104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76372474 seconds)
  done (took 40.487844518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.764386676 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.765951173 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.776677157 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.802630066 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.796284781 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.763267872 seconds)
  done (took 12.371776661 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764046483 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765509539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764282027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768319419 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767940124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762688062 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763755157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762498199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766336358 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765925624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766058129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765059215 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765101408 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764892592 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765637586 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766877502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764596525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766671967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765805013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769807765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768155244 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766621839 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764320695 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765012707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766076523 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763499997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76547437 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764547455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764591844 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767581697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768677804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767067642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768343172 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766194936 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768187978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769201667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764145939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76932628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771268962 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766179924 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769623392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769401351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770287902 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767148782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769135502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763062742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765898252 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766260193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76724446 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769572941 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769657135 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765969497 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771116712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768196114 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767897129 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769116182 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768764589 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766671745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768368545 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765307213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771342126 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767292161 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768646743 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768601571 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766656739 seconds)
  done (took 118.321446265 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769031156 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769962694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768812641 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770216524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769003019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769503245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769835433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766382212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766063496 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767705099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769447054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76800917 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766698066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768202201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767100972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766503266 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767786174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767689468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767917301 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773021503 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767139374 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767964425 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766960118 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767993393 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768485866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76870754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76977331 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767834001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769179977 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768858445 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765607198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766156368 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768440187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769135353 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769079311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766954355 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768346793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768355688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768011588 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770120721 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768630045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772123843 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770090024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766045406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769217271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771028495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768590042 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769962369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770694293 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76981486 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769531358 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76866638 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772188427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770124063 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769437699 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769753831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768185211 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769246862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76909873 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772487971 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76974004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769132232 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772675665 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769969905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770243267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76984531 seconds)
  done (took 118.457247901 seconds)
done (took 2713.105212572 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.768579319 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.80061534 seconds)
  done (took 15.276752393 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.932442985 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.882033868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.77143521 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.808114042 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.771621481 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.769361531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.787651215 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.771324125 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.772974811 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.771930927 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.770660516 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.950049999 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.799990043 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.771690283 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.77023553 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862636096 seconds)
  done (took 50.702036044 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.773997457 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.774252014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.783146935 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.773859392 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.774500142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.784744938 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.805267096 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.777583679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.807737643 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.786758859 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.841632232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.790526845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.773725925 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.82150501 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.792398594 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.787550664 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.85683501 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847707643 seconds)
  done (took 34.066923434 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851507672 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784284338 seconds)
  done (took 10.355528966 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.792913392 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790970497 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.796485047 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.767019571 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.792654581 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.792627809 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.804043789 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.793451189 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.800158964 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.793338663 seconds)
  done (took 69.644676842 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.779016857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776342581 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.77569489 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.773527811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.768709755 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.771942871 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.774507947 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.766652115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.463293006 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.814874332 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.781086251 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.778449536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.775302144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777032386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773394521 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.796115397 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.90228326 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.774518636 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.775229215 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.780256465 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.773998859 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.829622883 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.788988751 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776994729 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.805736992 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.458660406 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.783444565 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778742131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.900983164 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.77289185 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.774867124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.775897189 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.775682781 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.157666805 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.053945561 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.778699606 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.782211742 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.78150934 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.772357586 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.893142886 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.77568969 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.780955731 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.690024523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.033008228 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.881426189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.817476578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.146482077 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.784465675 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.775959819 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.80778599 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.783265254 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.7793055 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.789274883 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.282682942 seconds)
  done (took 127.439167246 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.772176668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.34023483 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931470929 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.771567432 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05479909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010593115 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.779095861 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820633471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77805789 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017954967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993226541 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893690092 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775293014 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.769677249 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773185417 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770406942 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.921616419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.843345763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770936162 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.774392904 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806004061 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040732321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9006875 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776531786 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.794866681 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997798197 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.900880099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890737456 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.999852689 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.768258203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844992615 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773637949 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.770414575 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.77203168 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940764512 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.884096066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872654891 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.773738067 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769083502 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.771920315 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.396377535 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987268629 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.881919172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.911145501 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020490401 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997173392 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.481629467 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.771371289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.416839257 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963254037 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.970645273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026769832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.901395703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776683279 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.792840171 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771924908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771772594 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03200856 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005858974 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889336211 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773841965 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.772344488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770446268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071156098 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.773936086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.88186707 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77451602 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773441828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.885447933 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88847949 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007308373 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016476963 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802649284 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.489792936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.821257947 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055537532 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849182673 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036030191 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.774501385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770631993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867310546 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.403981114 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.978365746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.077059968 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039862674 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815920713 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.349231864 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.770943124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020893057 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01690159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.974994502 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015170468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94269233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.591664521 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.772644538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.772565507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.883411375 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906502233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.74612813 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.119073007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022895508 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.44111258 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804468304 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068795072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913203461 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.775818624 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.392810332 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773627917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96957891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815720715 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.775618426 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773877477 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.02176225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.560327249 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774168346 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.598669115 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.840713178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.778301363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034585382 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775059481 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01179324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777188262 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085137271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.095547202 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81764673 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.955002163 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017169015 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.47183847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068159773 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083778208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9008881 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014330703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.063389408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.778358843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059364938 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776657581 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.776751901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.931351525 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776252615 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.931212687 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780896032 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.008827796 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803184056 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946647224 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777082788 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.045712595 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.82231357 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831284058 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.779313544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906797791 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780500874 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.771000899 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954185992 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781033041 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775485799 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.287341123 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.777788997 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925281923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079167194 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801004604 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849158571 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.281540638 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777942407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872802849 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805723156 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.304778861 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.777162515 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.996824581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.780047747 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.228933126 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.77641722 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073300003 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.978110873 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779410237 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.779481518 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.571797203 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.206803292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777333089 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.93883474 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.229602641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318544257 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998737649 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785100924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908801784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.784746857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.868362609 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115199731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776712011 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.779402063 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.778353885 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77882801 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776401375 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993855587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.808798404 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.462961788 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.90895089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025503775 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.090895708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.040785019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.829073633 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783627431 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035536168 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.781747915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.847008791 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.781225149 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.804590111 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027468251 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782718409 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.996651743 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071796813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.822660527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831757159 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.780898197 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777936809 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.778119742 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.918920614 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87946531 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782623274 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.777973829 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897627718 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906208585 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969578413 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.319620744 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.742121389 seconds)
  done (took 878.812049381 seconds)
done (took 1188.00687848 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.780047812 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.779906617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.77340228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773245355 seconds)
  done (took 28.831634054 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.782621089 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.779656911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.782354702 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.779772893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.782222228 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.780923673 seconds)
  done (took 12.406885601 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.129683058 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775137002 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778903653 seconds)
  done (took 21.401868727 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849339075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.199945983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885518411 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.219260289 seconds)
  done (took 9.87429317 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.78367084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.782504083 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.78210212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784704273 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784330779 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.785735163 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.783870547 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.784615464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785959353 seconds)
  done (took 17.776137602 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.840914972 seconds)
done (took 95.855481007 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.787238308 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.151230575 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.781731566 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.881401079 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.858717419 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.988394704 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.908989056 seconds)
    (8/309) benchmarking ("sort", Int8, false)...
    done (took 4.777106914 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.803780488 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.867231647 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.806123073 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.817326257 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.776731293 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.685440336 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.804755932 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.276653633 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.809117721 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.134767096 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.077447082 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.98803861 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.781797061 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.017633391 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.841369594 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.787144039 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.419231947 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.07917087 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094017886 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.814154379 seconds)
    (29/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.906055095 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.09939882 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.880314729 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.313956674 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.945934842 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.771877583 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.89333436 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.079215355 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.83192462 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.090710032 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.096960859 seconds)
    (40/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.86589504 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.888166705 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.897603705 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.056793449 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.008327482 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.888244829 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.778577938 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.652305168 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.121286632 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.674439231 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.771515051 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.85342802 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 5.517766333 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.904940372 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.889871858 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.195972986 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.584502775 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.154155326 seconds)
    (58/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.948593352 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.767656302 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.915972244 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.383844943 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.900543431 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853420458 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.938908712 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.145831292 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.992531984 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 5.458373405 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.880112142 seconds)
    (69/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.859394947 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.078112962 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.770565285 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.790213689 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.8111489 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.34093075 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.777897243 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.882944316 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.444284037 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983496334 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.787250938 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.062892983 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.672801857 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.570698317 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.921314797 seconds)
    (84/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.787046192 seconds)
    (85/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.36241611 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.207082469 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.056717741 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288312526 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.93801273 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.000899388 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.680876141 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.907538218 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.688624087 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.789323122 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.78754902 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.862492712 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.361626448 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.152743288 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.174274917 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.414800279 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.782830658 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076351884 seconds)
    (103/309) benchmarking ("sort", Bool, false)...
    done (took 2.234554708 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.812393163 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.921814646 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.770733975 seconds)
    (107/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.064079624 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.804465706 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.981026001 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.009493052 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.885670422 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.769093504 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.004039552 seconds)
    (114/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.034785893 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.083436445 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.801271862 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.841617573 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.152988918 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.643986753 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.83398595 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.798858924 seconds)
    (122/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.884703634 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.184951529 seconds)
    (124/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.965529877 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.922038773 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.783515209 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.816887056 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.810759149 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.019908325 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.048600089 seconds)
    (131/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.816982932 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.770918763 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.99204165 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.787641531 seconds)
    (135/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.997653696 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.115692943 seconds)
    (137/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.296152224 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173804031 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.164864962 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.770990038 seconds)
    (141/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.1721813 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.70684056 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 5.595678766 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.917681612 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.738824102 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.958211981 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.773684478 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.772934857 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.881799462 seconds)
    (150/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.8701598 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.452515568 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.873912625 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.81153005 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.069048142 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.127458927 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.86955009 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.89823838 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.785153097 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.883153854 seconds)
    (160/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.929473889 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846507595 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.770922535 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.490832892 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.458325561 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.070470946 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.145617809 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.788379252 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222957582 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.48079592 seconds)
    (170/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903946219 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.812718145 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.981693763 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.065434019 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.910886675 seconds)
    (175/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.828310071 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.834862682 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.277771801 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.138790033 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.909733439 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.786439207 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.089577585 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.79458721 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972575238 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.105990415 seconds)
    (185/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.818006784 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.812744917 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087193571 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.825224539 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.851553059 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159093142 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.27868877 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.944273305 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.380242544 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970279791 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.065439295 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.929277037 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.37497081 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.000824852 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.475929608 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.685004795 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.992247394 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.80676752 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.657221852 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.986479016 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.944436614 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.797612812 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.956181149 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.778231275 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.852951736 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.928859994 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.791340622 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.818354877 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096298627 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.891848927 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.398676607 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188549675 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.696048491 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.998850779 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.377227576 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.920488875 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.497838654 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.476387507 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.878870559 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.189666256 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.916689555 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.846754445 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.66760498 seconds)
    (228/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.082580335 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.1575789 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.081105346 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.822531742 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.194333648 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.084664328 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.790551146 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.30993258 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.04931635 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.877825909 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.891090378 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.793589104 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.960429235 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.805738773 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.789741683 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.940987398 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.882985454 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.789071497 seconds)
    (246/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.943313259 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.941162276 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.428321682 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.906985775 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.168624593 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.956530222 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.472531929 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.829547864 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.528582074 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.792320296 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.191650471 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.298431246 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.937345784 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.794894012 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.852337701 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.793045977 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205850879 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.802022318 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.634303577 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.952661115 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.073773455 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.834867459 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.776596411 seconds)
    (269/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.877451427 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.817475766 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.369646661 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.920288223 seconds)
    (273/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.873856565 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.790536195 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.79240376 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.908894556 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391873919 seconds)
    (278/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.570829212 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.23275098 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.092280753 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.534932848 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.073224991 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.100778061 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103156754 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.936455101 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.03841759 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.014161142 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.836464097 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.174375278 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.796252623 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634757528 seconds)
    (292/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.115537498 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.037141537 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.192701694 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.118604027 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.783010868 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.866227232 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.780751946 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.901662271 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.875016635 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.437467069 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.819544464 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.065711975 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.87726265 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.907747009 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.765240621 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.884668859 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.899051185 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02250777 seconds)
  done (took 985.650047071 seconds)
done (took 987.379729596 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.825270746 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820882338 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.806479572 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.826724892 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.917856998 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.839097579 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.816714262 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.808415247 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853309393 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.855755568 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.80574877 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.838813847 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.807181351 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.8064259 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.805539269 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820279691 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.112587454 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.836773497 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822825877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.814574821 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.822725501 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.805089053 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.855069281 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.838454949 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.809615696 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808649502 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.809096973 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.823901095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.918254199 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.809037101 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808817322 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.817350521 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.112638785 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.835126891 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.801151849 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.82439384 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.81723728 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.816178618 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.810339643 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.838457794 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.262486006 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.815320489 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.808848803 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.807422688 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.807405519 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.811683871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.808147597 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.81369201 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820582027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821416235 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.257646336 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830297911 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.810979443 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.807711874 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817835907 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.808374183 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.812110743 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821071786 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.826349476 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821109342 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.106104063 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.841965733 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.809211124 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.825784775 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.815934068 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.296794855 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811048666 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.813437127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263008565 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821995857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.292987599 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.824206581 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.810357233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.822510785 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.840406495 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.115210529 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.832759303 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807398355 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.81656968 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.807009614 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.818958284 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822086289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.813342519 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.809287239 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82244646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.841637604 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.818959838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.810569055 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.817484849 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.827567316 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.817003186 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.819687374 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.812289745 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.804867652 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.819536127 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.812255997 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.81308164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.812288775 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.815002846 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820205528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.261599096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834819171 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.807021149 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.806548148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.810448028 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824169685 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.261316996 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.818504904 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.829047575 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.857399898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812695868 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.108052495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844151968 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82614611 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.81955006 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.813116262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.806105884 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.108691374 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.292051788 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.833342949 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.812763864 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81036636 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826132943 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.812913429 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.807310976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.117162832 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.842862886 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.825449522 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.93269006 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.822254076 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.843402786 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.809696575 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814637066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.838736548 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825569445 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.844004492 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814868944 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825570378 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.827704981 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.808516847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.821917686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.8220393 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.813091768 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.818307572 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.805239201 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.839511955 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825099018 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826191388 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832582209 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.932473525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.80929933 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.110202508 seconds)
done (took 284.776077375 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.881248391 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.803177727 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910712096 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.810585375 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.892713193 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.895260702 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.807017473 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.807327341 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.807261006 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.199374138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.807543116 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807849845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.801927352 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.807839177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.892058795 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.810302809 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.807292807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.150320093 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.810419703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.880744506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807688705 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.808534845 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.810554211 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193260723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81010675 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.808459688 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.881172705 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.810775732 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.157399367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.809751191 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.804518209 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.156542144 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899256856 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.828888721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.821335766 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.817816445 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.894788051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.816275592 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.89113991 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.891714741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.912521203 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.851095409 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.809258928 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.806332425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.815259544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.813355471 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.80999345 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.838930235 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.803442569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.810119994 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.152221324 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.821406337 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.81057059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.80989527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81052839 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.842659514 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.810057562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.812487796 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.901182747 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.812826733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.874659072 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.193466839 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251835871 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.812346044 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808859904 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.810227279 seconds)
  done (took 180.463465538 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879227883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.884335512 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.879189447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.815994822 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.863091362 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.88380118 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.815910667 seconds)
  done (took 14.768693135 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817832285 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812878933 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.862052443 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.862974538 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.81268903 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.963248655 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812744396 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.82389009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.811504866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.865075978 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.812956919 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812630596 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.820131274 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.813616724 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.861638098 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.826172986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.928879796 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.813600306 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.814232385 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.964748439 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81205052 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.820655847 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.868742183 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.825378844 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.813952186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.819873366 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.40341272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814270825 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811333812 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.814514175 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81196501 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.855837383 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.814029943 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.811664536 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81187631 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.930064831 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.814915161 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811693577 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.815443508 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.812011816 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.815125604 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.815349651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.814309302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811586559 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.814407877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.838033302 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.81389155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.815123017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.814381132 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.814856701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.864211982 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.81442504 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.813246939 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.812299449 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.870423366 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.822200629 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.815936151 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.813406575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815950967 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811867332 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.965969549 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864465045 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.815995195 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863019154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815895683 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815295616 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.816193131 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.81603419 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8705782 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.816086698 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863907467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.813703523 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.971645888 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.839959271 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817633687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.820345471 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.819171865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817162744 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.815414975 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.82339593 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.813069447 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.241672285 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.823076618 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81460357 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813611815 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928231634 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924775013 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.814103854 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.829258524 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.823918101 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.814775307 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.86877452 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.81636601 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815426199 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867525292 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.930940752 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.871918353 seconds)
  done (took 200.85208868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.820093924 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823810955 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.816984804 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.831309729 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.81655551 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.815627802 seconds)
  done (took 12.675461489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.818465708 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.817807283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.816410589 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816311366 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.816623235 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.817039217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.818177999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817744413 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.82108238 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.817194107 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.81781837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.817399281 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.81769436 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.817760888 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81792218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.817423178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.818290248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81421592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.816508649 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817577854 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.97384758 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817660257 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817660936 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.81883338 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.82145807 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.817060659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.825047506 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.817545641 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.817424354 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.822731159 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820379374 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819854685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.818307097 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.822932202 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822577434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.819654612 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821627792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.818744717 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815846051 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818911433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819480085 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818219115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817713393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819187527 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.820175717 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.823204598 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823632648 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827508267 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.8194877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.81981504 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.819191848 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.819030881 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.818849918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.820359982 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.819692148 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823473236 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824956333 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820682142 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.819448411 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.820049447 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.820335678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.820313551 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821229909 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.824766686 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.817136933 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820566687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.820206948 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.822901308 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821558605 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.819072733 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.821567879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.817609897 seconds)
  done (took 133.913670932 seconds)
done (took 544.43599428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.033783802 seconds)
  done (took 8.787473876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.922471002 seconds)
  done (took 8.750546954 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.463314427 seconds)
  done (took 10.218558986 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.822907861 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.84359301 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.822669 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.819473157 seconds)
  done (took 29.072428377 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.996529948 seconds)
  done (took 8.750119365 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.829728135 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813823462 seconds)
  done (took 15.454812538 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.881080398 seconds)
  done (took 8.636209223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.87651224 seconds)
  done (took 8.635426755 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.823828275 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.843720609 seconds)
  done (took 15.438290816 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.800909349 seconds)
  done (took 8.556180785 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.120598748 seconds)
  done (took 10.881634819 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821679134 seconds)
  done (took 8.58810202 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.813814347 seconds)
  done (took 8.568544773 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.875224482 seconds)
  done (took 9.629192449 seconds)
done (took 161.720762126 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.817873514 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.819652493 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.813494648 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.818596305 seconds)
  done (took 29.024180837 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.854876566 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.854854337 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.854192528 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.859026484 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.857390613 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.853839791 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.847297114 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.848758084 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.859899426 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.857152531 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.854439875 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.857995261 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.854843625 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.848117584 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.859068514 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.855053634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.858922337 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.853949542 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.84727648 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857518651 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.822515714 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.859409228 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.857778538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.823749492 seconds)
  done (took 46.215906016 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.003556083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.892114501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.975100346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.873084098 seconds)
  done (took 9.500573205 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.874007885 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.874506074 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.8767962 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.926340292 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.954257061 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.875237553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.844295677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.843182716 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.83003147 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.874616423 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.952620509 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.891838655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.952355613 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.823508314 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.001354464 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.822652823 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.823317873 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.875549512 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.927866899 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.940699383 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.823762303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.875558848 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.876926499 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.894071862 seconds)
  done (took 47.012053446 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.821422393 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.832146624 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.829899081 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.822696327 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.823249191 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.823842395 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.830135464 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.824028284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.843601621 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.824458358 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.823250954 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.823662213 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.822940409 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.823589226 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.822790895 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.835199465 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.837177608 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824039264 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826947287 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.829631285 seconds)
  done (took 38.303326239 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.81821041 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.75735264 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.168450665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.073275782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.817753516 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817160132 seconds)
  done (took 32.210941067 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.837433663 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.888481662 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.832427758 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.880680771 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.968319478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837054772 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.824454044 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.89291012 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.94195179 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90093937 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844337275 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.852751168 seconds)
  done (took 24.261855545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.820359066 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.822722902 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.821548693 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.838457706 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.835771569 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.833792941 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.83169688 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.818124268 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.839067708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.84686447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.834238766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.837917944 seconds)
  done (took 43.744256208 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90790773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.754424874 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.771325156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191070347 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165722246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031589924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.112065339 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1072765 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.826069587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093863524 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.628625678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924763671 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074694288 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298558883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.860880906 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.232671016 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098644939 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010594065 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844247494 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401026046 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87858656 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.009253372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.47112423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871641234 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033121792 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.920222589 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.081838125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820808437 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948419958 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850150975 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832482345 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822596394 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095466837 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180135121 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923667503 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831635013 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220638049 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.53370674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.806729941 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.448834657 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.364913836 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927114212 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832946654 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823624607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757459137 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973501057 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152745062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.829894976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.53433028 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822897919 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834379704 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918988722 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.826203108 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.600579389 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437914162 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.827699484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.820026189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828884778 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394073059 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804123539 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.009543223 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.804654236 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.880613736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465723505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184542967 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959723367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.826989861 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827272385 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758268387 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.502912581 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87360444 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050923427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.844940672 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437121643 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101387464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.66940823 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766376588 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076732474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.319525332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.805379839 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049177052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82520239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759287278 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.763169366 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758681719 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044642882 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853995983 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.518928036 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854088695 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099145199 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837238169 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842982885 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848033848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.046489737 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.707403238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824508465 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.40349457 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903357801 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847070999 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099541913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760945936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.828843622 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078834841 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.035863959 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.883909212 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.279529597 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942009816 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338065046 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.884440487 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995251071 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880507129 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07814365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871423026 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811135106 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872417802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826959118 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075292444 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355122197 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.969931529 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.636179106 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956332946 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103342054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849382675 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908959707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832977203 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827088201 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.523032948 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369279651 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.826401715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.828305689 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857922437 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882098948 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.827192486 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762518461 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.458227059 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647201871 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.842311642 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049558083 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.347960226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146223949 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762468633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131697327 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853005289 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.049352289 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44724938 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.885003618 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083705795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.889935638 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.898335953 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881321164 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846721838 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925694365 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850503292 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.985495806 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123387333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.831858906 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.831469741 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.523715468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859293229 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832052233 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.833739535 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360368953 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082433208 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82311429 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830254094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665776162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841892071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892208747 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833638608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838740344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.369390026 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287478867 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.838132816 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.420557702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050724871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840155361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.472490141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943120137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919969549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083673056 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877563306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.764048858 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.542108394 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.522122329 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830124877 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766119614 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83019653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839994801 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840631049 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.93995401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084976415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862540441 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.413973893 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.86779028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842391696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.83503814 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831145357 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.339394805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818350092 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022002153 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88279253 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975124589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.844647 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76583136 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834633688 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836034642 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831190736 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.831072784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864005422 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.415223517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185861875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089018802 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.239194533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846344428 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.468608621 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.883138708 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.830480221 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.297929025 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131963838 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.870339533 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872620773 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.842169855 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.504085533 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411765463 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402933624 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119805323 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109142184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181390649 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.032502252 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866945366 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11536308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767985443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363669769 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890962274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123508889 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769650717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88983582 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.454913342 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158898755 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847901227 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055899562 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141070432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.338813282 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959123503 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044109525 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868042496 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.983469542 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801715995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.356080983 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918586728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.352751872 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023067981 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111747333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.339564098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.94104314 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.833805896 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.471800036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905498842 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.543291507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.994559875 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.026240069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.579407861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281923312 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837887646 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051788645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16527733 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.000630929 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.935567092 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771643479 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846292632 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846382529 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.836093332 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.833834381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.723481901 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.086925452 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846903215 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770942789 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.927074044 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113962598 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.723177287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.841888979 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836545099 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083985359 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.340407561 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003023635 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.90876228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360110664 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844802245 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769329649 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770351455 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.528841308 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844169243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.793933946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026600868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.896090175 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456951327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886134024 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037717054 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08985913 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.850246898 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085577576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095708522 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.302335371 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866039458 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.937570736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.338229027 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.926717048 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.835466686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072364113 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369244834 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.064744044 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.790835608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.775508851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836126691 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052443839 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837349904 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.533679778 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043742229 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.555679374 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.844581103 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147630931 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90048975 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.536739429 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.787763926 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.8955127 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847141042 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916763403 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848770148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.849770217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848861898 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880253518 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.541143139 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944316595 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.851864087 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932281299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827188335 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35324502 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845065154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093931834 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163115859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135584994 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886524662 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838851492 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846193075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773312416 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988192237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057575033 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112669544 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.903984513 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.83805692 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86383333 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.30436368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027719908 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087641596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114168371 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.723654066 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.311454515 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.864658431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.840236368 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850700519 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.051200265 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029914686 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112594 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870067593 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893332612 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151519593 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116205076 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840138231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.839548644 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39274353 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.848511326 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489565641 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.872301231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556695134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099227962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851021196 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199140747 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858924477 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.996611505 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.614154484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532476984 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122062793 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.806935819 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885336852 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09557385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155447312 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14072404 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908545974 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85225522 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.934893864 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987934833 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.724700232 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841412922 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84177012 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.787913164 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.552272153 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85231945 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100370098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137626403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.840565945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.726642647 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864849162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.852348164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06469528 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06191325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087264823 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852380488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850881223 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.624402963 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095913244 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890813213 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776235644 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.846481417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933635283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085542922 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863004505 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295387081 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.554410446 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093944973 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.772034627 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864999073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013849508 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154913034 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135819029 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.365384738 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035398772 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401929146 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376400654 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152114315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.847917539 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004611039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152455816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.847135628 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.918188175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88916665 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092286794 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14526509 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.854496083 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457890662 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.810220454 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.137062789 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139635933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787236363 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851117857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900605661 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846534363 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.907283383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855354087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.723480617 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002501026 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.626562324 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063345684 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.849574867 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.893318902 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.321625898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.126524552 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883033515 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923853368 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849108078 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.512659488 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.194522337 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09923278 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.884770493 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.857871205 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.84837924 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84534443 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787774174 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.007314842 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.956876853 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0964638 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.919908742 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888327852 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849250044 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.06057824 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056702495 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.540986382 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96924461 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916997192 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892187857 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.752661172 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197473789 seconds)
  done (took 1642.582247249 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879225394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88004399 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.865622761 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.883984901 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882660373 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936896702 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.857088513 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922850195 seconds)
  done (took 56.893513728 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.844287282 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.074329805 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.85437293 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.84526779 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.855969763 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.846395601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.012327945 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.861740215 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.855128057 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.85543176 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.846897308 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.847092679 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.152389242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.876634135 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.846775788 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.833385279 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.854653818 seconds)
  done (took 73.963803825 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.846526096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.94099675 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.861386998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.856842281 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.572278048 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.84838076 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.403495746 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.859600162 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.851035449 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.981184958 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.485093792 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.858838424 seconds)
  done (took 86.153038796 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.856679005 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.85419807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.853425565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.853404615 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853442222 seconds)
  done (took 11.062284837 seconds)
done (took 2142.706313534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.099976248 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061129399 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066967222 seconds)
  done (took 5.916597864 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.999986722 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.046936746 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.167967143 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.193374956 seconds)
  done (took 10.201283671 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.139924461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.236149965 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.063814221 seconds)
  done (took 8.23036761 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.2577912 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.870949505 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.968716953 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.850482937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.853766395 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.854532166 seconds)
  done (took 22.350606186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.85511403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.857969577 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.855037574 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.857904145 seconds)
  done (took 9.217424453 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.835423336 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.610392709 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.84191682 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.853209344 seconds)
  done (took 20.931035999 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.602759556 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.617269987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.599485258 seconds)
  done (took 9.609731348 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.378677289 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.764404264 seconds)
  done (took 8.933634533 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.111834497 seconds)
  done (took 3.90292417 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.986943994 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.120356118 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.317187548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.327954621 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.393860511 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.731015508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.178498171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.11094675 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.238711683 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.292620293 seconds)
  done (took 24.4914235 seconds)
done (took 138.771005019 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.201419659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.343463249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.917304693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.110815389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934192772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.91616232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.107438489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.08610054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.696287976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.694551612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.120729208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.927825067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.054922767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.343414652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.054879332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.168810531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.917396334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.214550567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.652721427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.747952311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.108909317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.818885588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.965569457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.832077855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.918761386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.866859149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.30507353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.170516036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.806358054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.305013704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868930163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.899570291 seconds)
  done (took 165.87025025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.754445436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.854683509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.855768847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855785558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.219008863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854444619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856499524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853748315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.989371835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.972587843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855059218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.190193747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.85411597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.854501997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855946311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854815001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.1075534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.775977668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.85584083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.855733353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856242605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.120895935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.860014936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.160511074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.133429074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865450901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.855035418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.870572447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.872195084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.865432633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.869186119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855182559 seconds)
  done (took 207.105993857 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.855696233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857073982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.85633753 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855684773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.858953295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.85962396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857563723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86500373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.609757573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.576673594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.857852767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.856264902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.863198682 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856777377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857618937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862431195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.866466611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.866975329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.864321615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.865890575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.86569724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.502471206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.860003419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.490708641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.859834174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.862503061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.854441255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.862404333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864510171 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.8650066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.864615252 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85714402 seconds)
  done (took 220.092671545 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.045845531 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.8646347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.86569574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.712726681 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.864830002 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.863914676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.766371465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.047863593 seconds)
  done (took 18.840782202 seconds)
done (took 613.715798223 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.307285261 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.153254311 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.036207153 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.890218803 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.081634367 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.920426372 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.88552404 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.948216233 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.600498111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.952981617 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.546195847 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.901437977 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641532303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.908814885 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.008015111 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.941212673 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.407377939 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.497614404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.058857874 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.935257657 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.04956158 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.803932842 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.959251753 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.641642612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.658553496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.852981205 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.059013345 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.413407807 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.894251118 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.045124718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.618367615 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.255610942 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896704235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882432659 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.935988509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.919379542 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.227049109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.894707242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006180777 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609019537 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.915624829 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.482926357 seconds)
  done (took 102.443458129 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.855757558 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.854089745 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.852804966 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.854344012 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.855471839 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.854429005 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.853828248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.853252431 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.854037262 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.853415212 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.854517847 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.856046547 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.854639149 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.855622206 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.854424635 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.854739168 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.856199994 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.857032465 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.854937924 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.854293649 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.855526678 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.854480799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.856118593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.85491162 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.855883378 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.85613714 seconds)
  done (took 50.036327368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.868774676 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008137324 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.087951165 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.891716015 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.867723209 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.872306767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88637843 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.872813833 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869652101 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.869057925 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.956871118 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.872689457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.881931167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.083195547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.882922447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.866773265 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.866482188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.865529327 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.010145838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88274464 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88564313 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871477083 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.88413978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.878644326 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.867127118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.865862639 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.869739083 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.330613437 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.874529538 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.956699879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.90871361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.887565433 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.298871827 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.093798248 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.922605336 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.873337057 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.867536801 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961371053 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.872100995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.866546909 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.884679015 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.871685278 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.08698721 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.370005358 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.880485612 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.86797295 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.340077122 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96676565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.908832649 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880184494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.090269419 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888648802 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.869506994 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.868327177 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.904437785 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878666484 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.866864951 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.22600948 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.881374783 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.894236977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873752237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.868765557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018477551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.876706783 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.009065959 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.880943768 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.874745325 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.869265321 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.086937202 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.88718493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.372632997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.885733977 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869991954 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.958103966 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.013758958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.368150577 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.880713441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022847542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31683605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.89232206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.876796166 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.322480344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.896522845 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.878749675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.870710164 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.871069987 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.869606669 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.913658153 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.885111789 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.306039791 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.375610137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.24061449 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.896342409 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.884449815 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.869330813 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225351271 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878774563 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.870299493 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.081276433 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.387148202 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.885909041 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.876532584 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.354124977 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.886838378 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.889176669 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.87915537 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.088498434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.885013472 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.915073614 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.871260547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.876183617 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.873201361 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.888709323 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.879590112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.871534674 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.342951029 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.979665343 seconds)
  done (took 231.802572372 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.864322829 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.872837312 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.863539837 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.865177269 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.863340266 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.869371327 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.863872669 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.86366978 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.869659936 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.863880311 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.862893658 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.866534296 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.864219557 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.865983951 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.275443737 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.873331585 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.462571658 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.865283226 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.865814377 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.867069394 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.518181849 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.874023371 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.867075356 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.874144018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.867146262 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.866994502 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86664838 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.909990963 seconds)
  done (took 167.780612554 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.872985809 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.055847778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.89127959 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.907529968 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.886394588 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.872172171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.896706332 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.895895394 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.881359556 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.8720536 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.871455692 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.933619853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.884832437 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.010628155 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.905003388 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.90957007 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.982589998 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.882293483 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.873505406 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.872782842 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.900867468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.869505535 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.934365803 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.000875116 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.896108118 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.991880968 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.882575167 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.876555043 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.874318573 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.991617382 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.893966635 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.93495946 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.904594045 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.891667162 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.998076686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.995022999 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.981642362 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.905260795 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.882229225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.873172006 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.873319926 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.863565853 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992892313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.896676193 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.874774232 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984566622 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.897862215 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.876264994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.884965178 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.873707127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.889558423 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.895165757 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.945340011 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012079036 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.912388053 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.901474794 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.899190035 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.155529012 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.884270441 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.976446807 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.871440192 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.993142757 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.901334707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.864959395 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.876547853 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.880896611 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.903677156 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.910492165 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983732171 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.885236477 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.977040881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.911312527 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.885625588 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.875991747 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.877875873 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993106859 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.994710171 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.911291061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.915662848 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.90996845 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.876300675 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.876379918 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.865235138 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.892821487 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.880859672 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.994196772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.000116115 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.885404019 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.878961796 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.879501263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.879235459 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.90173861 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006790205 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.912850316 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.974519414 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.945492409 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.954343544 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.892360471 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.889710237 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.884931673 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.940651418 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.892214512 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.890002039 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.204036399 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.947606238 seconds)
  done (took 203.408670572 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.969083082 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.324555101 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.930350006 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.936260909 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.146472602 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.307650511 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.70904654 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.922445813 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.930594476 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.952062982 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.090898388 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.982407595 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.939227173 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.912867611 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.332245553 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915271972 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.932696889 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.947728261 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.931375813 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.471086333 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215187397 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.043879388 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.928359776 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.118116128 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.90654081 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.225942438 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.244589256 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.30121515 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.957370064 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.258024779 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.248086392 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.575526601 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.133324836 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.169749239 seconds)
  done (took 74.728918294 seconds)
done (took 831.997874783 seconds)
SAVING RESULT...
DONE!
