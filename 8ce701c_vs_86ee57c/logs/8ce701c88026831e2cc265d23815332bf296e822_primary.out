cset: moving following pidspec: 11917
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.205487343 seconds)
loading group "string"... done (took 0.559223713 seconds)
loading group "linalg"... done (took 7.515465709 seconds)
loading group "parallel"... done (took 0.157320543 seconds)
loading group "find"... done (took 1.144600548 seconds)
loading group "tuple"... done (took 1.802391794 seconds)
loading group "dates"... done (took 1.226627239 seconds)
loading group "micro"... done (took 0.216239675 seconds)
loading group "io"... done (took 0.900823093 seconds)
loading group "scalar"... done (took 35.774156641 seconds)
loading group "sparse"... done (took 11.484355152 seconds)
loading group "broadcast"... done (took 0.916493215 seconds)
loading group "union"... done (took 12.208032003 seconds)
loading group "simd"... done (took 4.454516596 seconds)
loading group "random"... done (took 8.41679907 seconds)
loading group "problem"... done (took 1.778553853 seconds)
loading group "array"... done (took 19.6401385 seconds)
loading group "misc"... done (took 1.74125679 seconds)
loading group "sort"... done (took 3.064467736 seconds)
loading group "collection"... done (took 16.71867063 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525935422 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127753737 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136811299 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125667673 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151648311 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120934125 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129208899 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089276329 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.867869023 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155494381 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118064567 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410779228 seconds)
done (took 5.340928838 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175242809 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085701177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087376784 seconds)
  done (took 1.241902229 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069565707 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134269278 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071428313 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071493085 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071433913 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070640993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071065346 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07105313 seconds)
  done (took 1.631067165 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076539812 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072790766 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070153329 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072114087 seconds)
  done (took 1.361123932 seconds)
done (took 5.558860906 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.77111491 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209044241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188230718 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39313103 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131189983 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177222143 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640975361 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314675774 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190948111 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081287013 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110124034 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345589048 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123492535 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64665331 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081172807 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093486467 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140880445 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435739157 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07127446 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086258969 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09274824 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132801323 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089326183 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077555501 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150600123 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071221855 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136897399 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084502386 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069844792 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215587857 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17613293 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671461532 seconds)
  done (took 10.302337535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10275061 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101590991 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072996097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128734163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102834495 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073623242 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078997196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071977632 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096152836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133483535 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095474632 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108699737 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070310589 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072895303 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086691141 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212478113 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086891615 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085656767 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074032941 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082423296 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111261827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082057353 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083699616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083726321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13228215 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185396218 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104078292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102841043 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070923235 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085142737 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118543587 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13495558 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072502506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070629632 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128949078 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098806752 seconds)
  done (took 4.711852552 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.982888721 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1440342 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092009334 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135005456 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068996404 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114276018 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113987743 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069800826 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083987358 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210414792 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.391096436 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584045849 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.113789095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113752727 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107002154 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071592036 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072500051 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071138101 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.47272099 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101701848 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109522273 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083027754 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068581647 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073187965 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071946598 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070529009 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067417507 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071479974 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116354885 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068275043 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07772702 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30848523 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125307504 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071364124 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938263063 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17006791 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.209525805 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105868868 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1731961 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097585822 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142782825 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073162938 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069982029 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162597788 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069131811 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073933185 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068824192 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069922451 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08810571 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10717071 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123585867 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070930148 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070078284 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174291088 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069531851 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082480472 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.1462635 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071853461 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156329306 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069551962 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291644058 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093587971 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073916076 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069463037 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202695991 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127634967 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071954752 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071493909 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072125617 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072583175 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365073992 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069773712 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.195122879 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072499505 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080310556 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073361159 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073657869 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076486705 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076326293 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094800871 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069654859 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077222292 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069209045 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069847644 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070112731 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086574737 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.483887149 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071056968 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071814114 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069197455 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094691125 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09853228 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071415179 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070308568 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103823692 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071376601 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070058892 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070798775 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086713895 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073345866 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11673654 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072366818 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113431047 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101982795 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072876183 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101928185 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08326506 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071744554 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.438530535 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069837304 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071300028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069315639 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071226236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069970898 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084244384 seconds)
  done (took 22.277376457 seconds)
done (took 39.344177521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242080356 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074402062 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074510551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074722098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074467362 seconds)
  done (took 1.693142326 seconds)
done (took 2.836562813 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122272097 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100937019 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068340582 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099829679 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068986616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106232374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102694196 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080551516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101719952 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068507215 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099900905 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068302428 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068377571 seconds)
  done (took 2.308488958 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086969977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087418137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074108791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086546198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067897928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086573255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085463519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092850596 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085332798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076981407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067648115 seconds)
  done (took 2.03076725 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085997003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08721172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073835103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086393585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070316724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086046642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086071268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089325135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086263121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078452109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06822792 seconds)
  done (took 2.026746841 seconds)
done (took 7.494487057 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079953412 seconds)
  done (took 1.197165612 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.535180041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.658834013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083493135 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105642447 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190221397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113689869 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244844609 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086796228 seconds)
  done (took 8.294907369 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091508283 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086058388 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074622359 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074221308 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074784362 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074273971 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074869738 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07558512 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072788982 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073567029 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075707546 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072582011 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075772967 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073627909 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072431464 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076324396 seconds)
  done (took 2.411795818 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09482457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093490544 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077052707 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07843267 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076307142 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07604871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077764327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077526196 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074852284 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075974268 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079032391 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076824829 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075173307 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067452015 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07753633 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079673873 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074516246 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077523514 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078383559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079160999 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078781691 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067776264 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075321531 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077478239 seconds)
  done (took 3.081119522 seconds)
done (took 16.114654229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109288728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071847714 seconds)
  done (took 1.306517674 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082498121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084790926 seconds)
  done (took 1.30152157 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083949045 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068573999 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09116399 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080039373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069086612 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068578279 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088795215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068815506 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068866807 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069082945 seconds)
  done (took 1.891298665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071113131 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078555065 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072297461 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082609233 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076132287 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067555062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074161083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070844913 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079502611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066150463 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074127786 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08665256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074060108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088269445 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073906149 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071581976 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073340502 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071286722 seconds)
  done (took 2.49116519 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068685896 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070285703 seconds)
  done (took 1.279076845 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069503513 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066472863 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069882323 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069535685 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066701896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066703032 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067358522 seconds)
  done (took 1.612482251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384158012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119665252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303791801 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075643452 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084853356 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256459264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07045723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075824855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075226764 seconds)
  done (took 2.619135173 seconds)
done (took 13.642924598 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084008267 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091084145 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098743715 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.381745363 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096212428 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071045065 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117529924 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185723232 seconds)
done (took 2.275369251 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214823252 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.765844727 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.480827179 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207567172 seconds)
  done (took 2.594663121 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340178398 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091821123 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.17871852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071710331 seconds)
  done (took 1.832792546 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071138693 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073390643 seconds)
  done (took 1.290783822 seconds)
done (took 7.080114316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070569473 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0700844 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067621759 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070318181 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067673837 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068410693 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089015999 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070131879 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070295978 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069876139 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069997373 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070050847 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068160828 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067680704 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067692926 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067736151 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070393503 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067601256 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067858168 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067748374 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069771138 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067512674 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067607381 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069767071 seconds)
  done (took 2.84760456 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086415938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069723268 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074245318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074176371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072030974 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073829596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074015865 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070185044 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074466396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072063369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072503014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071754459 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072508621 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072048517 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071792384 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071970608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074206586 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070054171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07240436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072473849 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074715944 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070090792 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072291834 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073868632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07210391 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072332209 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072314646 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070234833 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074110685 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072047261 seconds)
  done (took 3.341616909 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073372474 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066478965 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067178288 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074187894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067167513 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067529636 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066687043 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067385218 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067545318 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066910266 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068248497 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066828555 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066792885 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06744648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068088164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071214079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083472486 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066911493 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066711587 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067517913 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073601147 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066781901 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066956157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066799599 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06719423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066510802 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067210308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067081687 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067929555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06705619 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070373016 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071283007 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066705247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074569547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070873334 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06681712 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071354926 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066683077 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067065562 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066665434 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066472622 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066598193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066974698 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074877416 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068305909 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066791674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068276043 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067541505 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068875777 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066631374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066767044 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068846339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068396053 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0715617 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066946627 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067600512 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0665072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06799479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06713254 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066804049 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067069822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069934358 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067899336 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084115512 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07497376 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066947819 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068589421 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067606218 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07072478 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068772961 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08235894 seconds)
  done (took 6.121444171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090238624 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09003417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07000809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069335455 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065017724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067541157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073275719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067374953 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069985309 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086877235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067583251 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069706865 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069875314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071732003 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068322961 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069627147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075826554 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06556756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067200752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071272745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068469303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073079625 seconds)
  done (took 2.759916288 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150797142 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073252074 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108361837 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078359425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074120476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078269884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073383695 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073798788 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073622434 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071690787 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071463027 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073637943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073404256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071574904 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0720965 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072073682 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073980055 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071625332 seconds)
  done (took 2.598749164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08099218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070402367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09134278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069912452 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070189987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072516887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074073848 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077544764 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072132908 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070139743 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077798186 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073004124 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07306641 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070382645 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072235794 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07005921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072432698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0699669 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076949341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074191978 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074186157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077246948 seconds)
  done (took 2.793936754 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083390884 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071784322 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084946911 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071774591 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065066604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067721256 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073893422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069872209 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07353193 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072027381 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070095605 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067594794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072031902 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069817095 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071936948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06964771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071579338 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069793448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071813685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065104139 seconds)
  done (took 2.599071023 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087745629 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070763464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070876458 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077361352 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07113173 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0707552 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076805788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070630419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070699253 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091039085 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070762445 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07062016 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077266015 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078187348 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071114889 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077284617 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077443752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077570291 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070608095 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070965331 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091498464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071258835 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077374061 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070871667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07086757 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070821085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070651225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074742574 seconds)
  done (took 3.263897862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070647778 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069880404 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067836791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067537963 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067812298 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068039859 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068183152 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067948534 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070011884 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068040677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070112854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070205819 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070327456 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069697831 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06997653 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070317506 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069958988 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068317016 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068262652 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068268011 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070341715 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070214558 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069927644 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067774334 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067797104 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069708332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067763697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068295399 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070013695 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067762763 seconds)
  done (took 3.240753521 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077919485 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07632611 seconds)
  done (took 1.324740971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066154632 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083861098 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066572766 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075393332 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0727968 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070379448 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076634485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073495984 seconds)
  done (took 1.752167556 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084443589 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078461317 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06970255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078941777 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078546346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085976474 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126262135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069567907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076423519 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068531496 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082583139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069358636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.0766504 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070818802 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075915318 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077474996 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067765464 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073990319 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070821819 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067776893 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070403877 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078863981 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073414505 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065579089 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071894882 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092834392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081161216 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069396624 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072936818 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077856132 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076572174 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064735141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069438133 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069857708 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067303492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078385382 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083915139 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073447188 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078669278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070589568 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077786706 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06526627 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075194875 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077325054 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081408181 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069746038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069787258 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065084992 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068785002 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072534999 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065481975 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070899086 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064803735 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077361883 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073541998 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080241955 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068123339 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072235566 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073201803 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072855305 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077296197 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072318121 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073089838 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068857882 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080854708 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075578016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07751678 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065034689 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064127509 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068092959 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079296059 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09340361 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07552228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069973515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07030747 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067600489 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074105795 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0705564 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075295872 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076623891 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069077904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073762721 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077400332 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070951548 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072373229 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075416515 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067074616 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071306241 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068410103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085343653 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.070842065 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067312808 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069346521 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07973777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073422426 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068233155 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067770845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076517075 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063254872 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068276243 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068722485 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069973562 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077961905 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071763882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071917288 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077568777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075145883 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069766942 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071704589 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065529246 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.19424978 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071729603 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079609313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065021719 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074458647 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072567859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070009402 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079117856 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068532961 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070494312 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07869109 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076335254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068601351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066902942 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073692911 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068971761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071895238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078628096 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068125878 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065094589 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065091948 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074148535 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069725652 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074190733 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073097253 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073463323 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064363004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067950988 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073979721 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078498013 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071082748 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071490117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075911069 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071364564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069029126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076911964 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072865175 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07001733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075366274 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071446024 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065297792 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071553574 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072996632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067926929 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074405593 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071577666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072974666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069681566 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067928371 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075112939 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070200848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070081061 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070458231 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068293721 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08025821 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072849538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065389238 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067148411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076873974 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06893846 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068997721 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069760773 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072372243 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069557863 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067396693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06876404 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072861507 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077169586 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072169195 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070465496 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076001831 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082503491 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069224638 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072720185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069312215 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069809402 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070256355 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079009106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076216432 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072881818 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072772389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066812707 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075278721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077602104 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069164101 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067093248 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0694585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072692302 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075472233 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0726689 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068926582 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067561683 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071010385 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071520249 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07275778 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068578968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069501232 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073977765 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067140852 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074061265 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068966935 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079405768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072309281 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063970631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070100929 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066738532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07565512 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063915127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067566875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068999362 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06840931 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067726287 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070914196 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062827303 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204636787 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080221047 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073209683 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070661477 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070302639 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07824579 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072985217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075045616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0744769 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076103284 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080429005 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069940198 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076966879 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080331188 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069800434 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064415798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076260842 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068192738 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068157763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068584468 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067386135 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073490652 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076648021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076760579 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063927394 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073007429 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068353319 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07015053 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065412845 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074378881 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073191809 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071217266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077382742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070198655 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069259195 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073987623 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068611969 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069565175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06952265 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072918106 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069375531 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071870564 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069058161 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072663046 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069331308 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067084031 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071785105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069149251 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070705054 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075272689 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069080713 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071275762 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072541678 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06951933 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070939242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071403776 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070494069 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073165032 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071609349 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071426198 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072948103 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065083664 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077859602 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068752372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077773456 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070714044 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066583719 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075304069 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072912547 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073742895 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070187193 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069697369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072165339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068918997 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073378699 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077287479 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068972175 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080782249 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076949344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071614448 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072934095 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071343888 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071779187 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069858712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071518879 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06957602 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070813706 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068563066 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074087336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072672471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070685203 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072139745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069591202 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070773431 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069823255 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064282754 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069679293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069800218 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06958212 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078725327 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069256149 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069587042 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067939445 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069028866 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067680715 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065923424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074202135 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074643721 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068203118 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074672968 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068679121 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070870586 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079156283 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063006359 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066889275 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.197707671 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069891523 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079424624 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071016498 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08126823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072186806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070831011 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067872747 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070316262 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067965719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065031118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067801392 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074850535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069820936 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0689629 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06952093 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072953528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070351946 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078476963 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069243503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072177685 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069471077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067633883 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070053277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070061126 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073115902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069725815 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068943828 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067086641 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068516663 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071438103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071858592 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06968157 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072173218 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077532859 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069024006 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073272369 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071540722 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064602752 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073092597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069440453 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068902256 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069668333 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076119999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073550257 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069536754 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079247717 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068652162 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07126859 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069002126 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067471892 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06871306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069085682 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069368569 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069751086 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070358757 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078135378 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067478383 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07366524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070811948 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071417797 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076343656 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071095559 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073591575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074582479 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071781523 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0722008 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079186631 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073666865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073981843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070046532 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072206508 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076371705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070308726 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077367603 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07106651 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069996704 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071939094 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068775294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069591668 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069424466 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068544834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076320802 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069891869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070131099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069915238 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067762872 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071653868 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071559893 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078013613 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072305261 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073179527 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064898588 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067263974 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069905407 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068357339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071811105 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072617804 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075539693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072079547 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070773619 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068273713 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078849022 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076215566 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073403893 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068454157 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073090193 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069150022 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072314866 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070569102 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069798823 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06892171 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072772283 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070860571 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068646876 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074888106 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072184386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201143588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074561233 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074110858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072113715 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066064202 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071087794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073355824 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075763196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073930315 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06991264 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081236145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069195629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071273123 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071597825 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068996197 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075052279 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06536399 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073100589 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070426701 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070804893 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06524063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070240286 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069326544 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072839651 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070431907 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065130469 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080538163 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080095247 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073827528 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068660621 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068259616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065294 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06505406 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070328771 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070537943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072325703 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079984847 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069802895 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069712755 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064890628 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070049697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07409475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073521808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067750907 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065186783 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070228522 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073313884 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075777085 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068081168 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069068704 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073129833 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072355694 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068014696 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072635167 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066937177 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073894579 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082012573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069946384 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071507965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07633637 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078309337 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069978656 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065510969 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069805869 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073353345 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071218808 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069999348 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070541523 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084611019 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073539979 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07021352 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068315945 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075656233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070304507 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078357632 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070279019 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069986049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075299343 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072425758 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077041033 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07412066 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077291025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073590943 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074291304 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069504416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071564186 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068253635 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069930475 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070493505 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069679597 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073573849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075238436 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069625923 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080297938 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079326049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071610538 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066815914 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06986874 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069984362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065190556 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069434468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067724929 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067550176 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067759766 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067857992 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070940865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074162778 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070431669 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068598985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068336557 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063354623 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072028275 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071943089 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070441065 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065913717 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06799771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06833923 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073227963 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07033145 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067699766 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070736459 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071286801 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070693657 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064600707 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075589843 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068088055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071162932 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068660429 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069029662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068956304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072704097 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071990212 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069829997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072151791 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073034686 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069766942 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066585407 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066197375 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074112964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066711879 seconds)
  done (took 44.502067024 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109604673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069239495 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06840343 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06802335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077687456 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068801133 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067910989 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069299299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068726722 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070567084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067315644 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067895951 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074781559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082341832 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07723438 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071288505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066555048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06764184 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066809612 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067840808 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075060811 seconds)
  done (took 2.853071928 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076282738 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081903953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078078507 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086571818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07525737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073743763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078909559 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073978498 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082705207 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076504508 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081901289 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07421477 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076826841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076554456 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076772263 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073783378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08211787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075361241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074087529 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078934023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074172511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078571888 seconds)
  done (took 2.963847259 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070413693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069271652 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072914449 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065412507 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069431941 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064980901 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071778613 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067826838 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072539576 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069829932 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078524775 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070265487 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072069628 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065479495 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071220114 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068021892 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113534087 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07319876 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069321089 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070826978 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065926785 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072476693 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065790076 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066716791 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069936348 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072658149 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070459217 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068606696 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069135987 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07010015 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070057053 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068023722 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072358124 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070967322 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070332672 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.07067443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071619898 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069894034 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065637818 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068046357 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071142945 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065941976 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069928597 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071635129 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068160917 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068276102 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07190161 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069368126 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065696815 seconds)
  done (took 4.718418377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080857323 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110882921 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072169295 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091930746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083364831 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075851074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07441205 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092483353 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067021809 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067775717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084261063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081970554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069302336 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07349188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074407062 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069194919 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070277717 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068198286 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072609815 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068890781 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087598886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075682428 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082333356 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0808823 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072479293 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068017647 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068071025 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072608558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080281645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072875973 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073207886 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073811855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083015786 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073909953 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06875281 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071167182 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083992679 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069047436 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072245583 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06659235 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070852066 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072963864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075626177 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083888875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068937181 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073657639 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068910163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066431657 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080517597 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071044076 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07622483 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082012939 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072632029 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069229485 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072900188 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082953944 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069093755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067982003 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07171056 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080394965 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067205005 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072539066 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080990293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070748771 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075287127 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081129122 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07412034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072744845 seconds)
  done (took 6.498772117 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07832949 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100096663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086080222 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085436327 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078875497 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07901652 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078824107 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078884768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087554259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08304824 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079558556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11896476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074923716 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081030693 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079184683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079512161 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07925754 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079631657 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079377802 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078943069 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079546138 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085682159 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079530823 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085748709 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081782549 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074935491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078542581 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079203298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085472051 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078716817 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081880055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079129098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079104999 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085205286 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082087572 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07916449 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068773002 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078862488 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079131936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078838081 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075175433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085711963 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078540606 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074913165 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079206922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078847216 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085841311 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081960379 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081052204 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083061982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079360282 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085681353 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079449935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078971659 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085660753 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088169267 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085353806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085606345 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079432151 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085618927 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085377577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087955881 seconds)
  done (took 6.383574089 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083531435 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076296621 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087529022 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065310875 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067496493 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076324634 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068431981 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06779209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076047718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076593071 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07853713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075408365 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077936958 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078313872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075475965 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07855768 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075616944 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07557009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076574425 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07587024 seconds)
  done (took 2.814327809 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079078848 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086381349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070619345 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075351013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072859573 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075353659 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072473548 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073065351 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071577624 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073777996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079557578 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078965172 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071336615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075113475 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07932016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075561627 seconds)
  done (took 2.499269039 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085841462 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074974536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080844011 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069238812 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070686028 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066074774 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068953479 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065798367 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066128897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081892373 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069232026 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080364954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069232094 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068629178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066143896 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075203848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065701983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066793698 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06925851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080413509 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072971593 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067988794 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073282217 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069557533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072130216 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073972886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068890611 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07078279 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067336497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069576655 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072627112 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073709375 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066532739 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067460518 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068189579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066917431 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069174911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069643627 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075036936 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069556697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067644899 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072082247 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069272866 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070805339 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066132135 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069606057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065995864 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072103786 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066893979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072325434 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069172173 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071716959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069815256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076971272 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071768683 seconds)
  done (took 5.188720867 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083484308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072917047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064663536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067255322 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072552602 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070854875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073383231 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070816436 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071394893 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067630953 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071846177 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072384673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071608792 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07334136 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071501919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07315489 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065233025 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07074347 seconds)
  done (took 2.588397046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075740932 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069625201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076916022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070066845 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070540493 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072041161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065557209 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067985567 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068149422 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070658398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070054963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072178437 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067985804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072481904 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070472413 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070163895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07223454 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068602783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070349047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065749955 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07221644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068089098 seconds)
  done (took 2.841991422 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09650113 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086945893 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141302683 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082573447 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089842233 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076269724 seconds)
  done (took 1.868245562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095811032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103595655 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069832689 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073093763 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078375782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073718599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073664877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074145618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080745446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07899299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076524633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080981718 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080960614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080862395 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078489 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078676886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074055799 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073905504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070362793 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085648348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073988592 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081546524 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074283406 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073688894 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073963396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080796429 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080671807 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078612689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073656827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081565298 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079020861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074265553 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081640674 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079151044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073437147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081254932 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074036964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085721627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079022354 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080817108 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073250411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079028829 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081366035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078394284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081287403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074244655 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078269359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074157738 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074655963 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087965841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079165384 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080613223 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07888558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081613972 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080976156 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087438606 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07881223 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080168583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078963931 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079025206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080398889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078749589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08021357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079475518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078994983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080730643 seconds)
  done (took 6.509059868 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107745977 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071310376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073835085 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078909999 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080596392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074200535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074540679 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074076559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074330833 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071204433 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111311623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074097596 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080645061 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080464715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074476099 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074103156 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074244502 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080850949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071116473 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087368815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07456665 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080742946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080920326 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08071577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078859722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078985439 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074414395 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074078978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073944433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074379423 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077935855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073983682 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080724233 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070975876 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080535533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074175936 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074085727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077968207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073965085 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07861502 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080458135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086034046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074015018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073939276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078933154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07442705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074227253 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070901983 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074562801 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071379388 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078869682 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078961084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078563337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080759266 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074073689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074510386 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074080863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074122704 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074182631 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078817293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080581548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073953124 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087182583 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073944142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074460854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08079902 seconds)
  done (took 6.439753826 seconds)
done (took 132.461859442 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197704228 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1748489 seconds)
  done (took 1.659559662 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071976166 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100761813 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079914013 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132309901 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070340339 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104119911 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103011599 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080567765 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0704755 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070206936 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070345986 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072215582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13493188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07036669 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070038853 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072666673 seconds)
  done (took 2.679822102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101181781 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159510615 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103985571 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068584037 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101150716 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07549892 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072177168 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078808694 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074414789 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069221778 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075686039 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073765957 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069981797 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074433097 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074207947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075584895 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069114556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076234138 seconds)
  done (took 2.798840897 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099583178 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092694413 seconds)
  done (took 1.500444754 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164524051 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138157923 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206833208 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34009832 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157615514 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148352927 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148892269 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147678159 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1195583 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141284071 seconds)
  done (took 3.017356659 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102746246 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151915391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274555366 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119557964 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076539551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093922775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121832294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082269454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082974274 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083021691 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082530277 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080203614 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102494424 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077068934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078744812 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079679352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106377984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077917317 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079281603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079125751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10472993 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071157663 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077031573 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07799163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079925298 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080228015 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070229628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070254612 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078704372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078785632 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079876373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0930266 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080123635 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104706553 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074523137 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10603193 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079791883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076706234 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07920427 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076916517 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081016306 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081136534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077399402 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079451685 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070367556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079846692 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071066738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070968882 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080551552 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071481407 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080601398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080006338 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104640299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07144168 seconds)
  done (took 6.101542932 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110069173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109649817 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073681727 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114628332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106298711 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074049107 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108866744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101420345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109968012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07443681 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072099324 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074108617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083075768 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084317256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119390722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110271224 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076226891 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073357192 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110658826 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109925192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073022414 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104704813 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100669087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109676633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07157662 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073896528 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072304543 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073706544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078985256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080552363 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071953741 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081756497 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086110518 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079914009 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071817425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072042349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072087603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080849433 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081640345 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081115678 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079564112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071323565 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072112226 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073217099 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072923832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071373773 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080350962 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081490869 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080438157 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072305728 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073356086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072029513 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073337788 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081332883 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079410014 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082357416 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081475068 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072459908 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072294487 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075057637 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082654063 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081516725 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081416914 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075705089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081735669 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072759265 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082974198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085813074 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072664743 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073970774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072069675 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072476262 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073378198 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079739192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07935073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07339699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072100247 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072342163 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081312606 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079456289 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071905515 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078757994 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071219712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071599615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073393042 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073244768 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079200821 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080674941 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072989167 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071686024 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071720161 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07180171 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070930585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078442975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079850045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079875559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078884183 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07194178 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078598372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078508289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206808039 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082435404 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073594125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074805783 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074567725 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080751639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079946849 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081834164 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073007815 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072530921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080439213 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082260569 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073024836 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079931045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081959104 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080237351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071337406 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082663439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072245012 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082296769 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07328469 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081807055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072580393 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080892055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07239861 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071881779 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072478336 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081073467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073817012 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072146645 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073863997 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071971348 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080015767 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083907788 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0737111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080465672 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079674576 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072911903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079861778 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072371089 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081503632 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072241863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073050407 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071443026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082916951 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072632829 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072353297 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072528684 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081388559 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072135202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081584424 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07943217 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071302531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08302079 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081656022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078875927 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081937334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073135369 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072367423 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072540067 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072017225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079625793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080828214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073660978 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072162633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079657707 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081926634 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071448288 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080008313 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079698067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080394507 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072190052 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072704953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082432849 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082417771 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080012448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080106465 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079827749 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072669838 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079099904 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080323284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071921669 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085758211 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07208174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083546576 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079954375 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078273942 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080291442 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081374924 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08102573 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081553673 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084244138 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071241405 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071812863 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079724771 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071389818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071140856 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07760185 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072080118 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072248677 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082630194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071098721 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216762248 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073344644 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081580257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072583413 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074844374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08584989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07267621 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077326801 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080893349 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072330862 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07982661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081906701 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079363756 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072638592 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073343705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081199826 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080886639 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072222219 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072165985 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07335948 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079875692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079373447 seconds)
  done (took 19.244422932 seconds)
done (took 38.326061702 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195664787 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148094191 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161544737 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115924729 seconds)
  done (took 2.014144632 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112297907 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100469258 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092290261 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069018147 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097728098 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069658161 seconds)
  done (took 1.882910508 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276501187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192302098 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176173063 seconds)
  done (took 1.982788075 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199299754 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185029068 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.430391776 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263701906 seconds)
  done (took 2.512410574 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138803187 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087521473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070289263 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086066073 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12723979 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155414283 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098371147 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123346222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080963931 seconds)
  done (took 2.355506963 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146888661 seconds)
done (took 12.237276017 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161575205 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097442922 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.212808619 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0924667 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075710637 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195850706 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112854707 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17727855 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072025325 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123599529 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101468668 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.201890296 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079142758 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098136147 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080438756 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.209538905 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079645479 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.230610594 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.32064594 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123518861 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.227753458 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078331539 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101378064 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141758238 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077909507 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078922879 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110488626 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077863967 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115325246 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080236503 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183756507 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203540283 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184720465 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.115028176 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.22731005 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166585073 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076771484 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130101832 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093270226 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190302489 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080742486 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.164401792 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07841901 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078614037 seconds)
    (45/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071464908 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187780046 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.068828602 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103704088 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057348669 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090979049 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09324739 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086052852 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.186395419 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080187884 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078237624 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.157294718 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.162644771 seconds)
    (58/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073730957 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 0.134570306 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094066816 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.208216592 seconds)
    (62/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17535442 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075634117 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089966435 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.070180182 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08044146 seconds)
    (67/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057167052 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.154812864 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075482743 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05582542 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.173704117 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129889137 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068736428 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077221962 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090038287 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101674637 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067714593 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056449457 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09053101 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156341079 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.288501135 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082115979 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073003166 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069431488 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191091828 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082722297 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076901116 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083163522 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205841463 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093853156 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076071016 seconds)
    (92/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080687224 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071319945 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101181229 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078893922 seconds)
    (96/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.15387448 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083474527 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161347316 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080213873 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154724848 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120241904 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091577032 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095176694 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.118788103 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.218255444 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142299375 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07569222 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176459216 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159510164 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15144599 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074725839 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091357151 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091939608 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080833973 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068483313 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116256419 seconds)
    (117/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.116728689 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057751422 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080072971 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081591088 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.111061486 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077254071 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068620773 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080955886 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078145086 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154688539 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07082875 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056793929 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.056560214 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098426232 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071798341 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056304028 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094810419 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132199426 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069576944 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077367466 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078987219 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114981258 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076512771 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163692851 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069499522 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15085769 seconds)
    (143/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057163519 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067876265 seconds)
    (145/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107341551 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076141058 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073724669 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156506162 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083543878 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.152654561 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094661791 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079764239 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077447403 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0834839 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082632888 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082520759 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144058307 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076687077 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069657998 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071638734 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067708285 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075721239 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.058487567 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.171917885 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076148314 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056783266 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068679068 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068954251 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056390081 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092363721 seconds)
    (171/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118382605 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05593798 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067780356 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069809408 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055866548 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148046127 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07726294 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056012466 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076064009 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070437599 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069295222 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069238308 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.056203745 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077758767 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068366368 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.276015772 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059376604 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 0.151870262 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057468628 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174778357 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077032237 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069359165 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089819373 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070397454 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079311054 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056789796 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119984135 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161391357 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059229799 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076512417 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079017523 seconds)
    (202/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108987739 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173681503 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069524387 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16322131 seconds)
    (206/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098410765 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076745332 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070802388 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073206578 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069906775 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057875019 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076984958 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12357945 seconds)
    (214/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05784439 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078246413 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073176633 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076047768 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183988278 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094501798 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057896998 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069080962 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057573602 seconds)
    (223/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076610659 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.088904693 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077510852 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069581074 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099469489 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144122837 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069562036 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133429393 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05728879 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079219119 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156133565 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084475019 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.057909641 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077687991 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079266671 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057564745 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06967204 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182365457 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093778721 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077170436 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164110418 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070388483 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056898202 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.057295312 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071510665 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069180304 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115148967 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070562879 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073112759 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069534249 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056053408 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099183452 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069525179 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068181458 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058961547 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068792106 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082743203 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076790971 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05647638 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081894206 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069513923 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077634488 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056765786 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058056787 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077581174 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056358474 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078074851 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05657327 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069389434 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076236272 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075946181 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059322464 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069720391 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094714923 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119104765 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075347496 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059877254 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060459266 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077729391 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119225167 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127962693 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093992598 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057967883 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070683427 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057505142 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068827198 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07637042 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072073564 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071178208 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057130828 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 0.13364301 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0700796 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126736484 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075861597 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056696473 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058892823 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069565484 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056199516 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171801044 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057671565 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056467668 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.057658739 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070195794 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.235485369 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061003679 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059177099 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.059028021 seconds)
  done (took 32.160232625 seconds)
done (took 33.514174272 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087136066 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09662257 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08028658 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096797434 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085750357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082249841 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078613596 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083056426 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085124807 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087161206 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083284785 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060808803 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079476368 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079633005 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079857595 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095320479 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083834863 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078335726 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078970632 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069770381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078406623 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069965065 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071835734 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060983354 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084140919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077064449 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079205273 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079026702 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070701613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070808943 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07449126 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078806758 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070072602 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085010363 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079022913 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078384099 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080026498 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082407793 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072054447 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07036187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080173961 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070713473 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078047658 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078412834 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076624644 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075985137 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078168334 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082081346 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094415097 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072568081 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079829934 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080645088 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081690873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077558892 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074466771 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078199016 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075431554 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094267237 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078156677 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071745045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079708027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078886928 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075512643 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077911225 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07814488 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080241582 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081643315 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076371331 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080629095 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07693529 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069704421 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078445762 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074260137 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072461869 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081079515 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082579466 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068843433 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076558785 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078038545 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078316621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06943801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071714826 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071260925 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076814506 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071948963 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060764282 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074297235 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077040645 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069213741 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078130054 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077250713 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077456887 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071441858 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081797807 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069182455 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075588505 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070505919 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069865347 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071438116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074452287 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069432732 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071377779 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079892888 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070908645 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076503838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082132423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069516426 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07661138 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068526517 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068772812 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082949267 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079228524 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069850509 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071681205 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068176565 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076607921 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068537649 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068770976 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068525791 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068449206 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07506983 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068573861 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071048071 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076682346 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224577399 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07114461 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07570333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073040881 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071021533 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077779832 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07040143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069967332 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071777658 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068286726 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072397909 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069772604 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077291038 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072725298 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077885933 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071018475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079270891 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075214809 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076112626 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076405033 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068725498 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065913859 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072000612 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071793169 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071935028 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070079062 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071360192 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069687416 seconds)
done (took 13.110200727 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070994243 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13464761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095731793 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096804619 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087366201 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070763903 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078919133 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098076144 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071799543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101404917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091330335 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089461829 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112203216 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069109238 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070347076 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074229099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071778685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083352749 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098798755 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090038851 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114561513 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069744688 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093568913 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091261495 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089301397 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104929407 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071091664 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074376396 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073821866 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093857158 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093112653 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07427583 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072792861 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098652654 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094306909 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0850563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070813146 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08507431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07097996 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069923854 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07160233 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099084137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082578442 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082615055 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074241736 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080452497 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071848661 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085733135 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091123387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081468292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087723474 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100817043 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072285607 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086255262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068656667 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087415523 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079298897 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072816157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071032601 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078294838 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070668691 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074061987 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082824791 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082414176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07410013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086551912 seconds)
  done (took 6.948453309 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08729552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098933734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086323387 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086448994 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069659547 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070753622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069920526 seconds)
  done (took 2.014409758 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070736383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090817767 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090943323 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091441733 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084568249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092841311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079727633 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070506972 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095169603 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070271075 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090444777 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100576386 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073423508 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081993906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093021365 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070698534 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093009083 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070481631 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073592688 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09270571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074798957 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097161578 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081747076 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071358685 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083600765 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071520827 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114140346 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079712371 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071138994 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073775951 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071043825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109583607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083962507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083050422 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071208385 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08378395 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085048167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073166375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081939675 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08016348 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083697354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073622488 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071817865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071932034 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075573043 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080822362 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071694511 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07390327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073619225 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089538812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06980096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083618689 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073443437 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076272051 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075715889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075516247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080725352 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071990452 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089438523 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07109929 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086197206 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085444322 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084031389 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085877661 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073052109 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0838314 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083788505 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073490641 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072818672 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074860491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085633213 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073243159 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072858725 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081027445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072812223 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092492659 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092235004 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072443982 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083838135 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071393105 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071530373 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070686618 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092327225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075680242 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071326083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075163097 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073666591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073154168 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070516362 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074809509 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071358976 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075621891 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073450772 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0739512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073677178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085267578 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070342218 seconds)
  done (took 9.154737155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073646988 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072130161 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073724057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072236538 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071701657 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072283874 seconds)
  done (took 1.908146181 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093100657 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072474854 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083844391 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074767387 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105877405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088531045 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089371966 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081097602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086586424 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082489461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089307795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090188444 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093660276 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075841372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08969775 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074898996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089509809 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077933435 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082451595 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076024629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08905269 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075858127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076766426 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084087948 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078821779 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074791701 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082105423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082347474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081259903 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080692434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07544484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079283323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073999998 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080202659 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089057785 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074127851 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077312576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079982406 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075641785 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079017807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089597857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0762327 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077539051 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080602046 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080862992 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074498325 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080005883 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082426529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088997101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080211897 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079892135 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074960042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078902539 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079928152 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074138425 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080378885 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07989847 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089352922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075764977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074032841 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072449236 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078784377 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079800882 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078834037 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080754694 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079995677 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073976859 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076007959 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075880457 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074743781 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079941304 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073470172 seconds)
  done (took 7.253020318 seconds)
done (took 28.710828937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542369613 seconds)
  done (took 1.969029374 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603335301 seconds)
  done (took 2.058344648 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.513875428 seconds)
  done (took 7.963385839 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372583714 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.487094288 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718830306 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137584338 seconds)
  done (took 3.206596932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.72804491 seconds)
  done (took 2.188848543 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237571246 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228640657 seconds)
  done (took 1.938218148 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.352810602 seconds)
  done (took 1.80625421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113855811 seconds)
  done (took 2.567548524 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234691885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165713687 seconds)
  done (took 1.860451453 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.437302271 seconds)
  done (took 1.894099988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.856393954 seconds)
  done (took 6.316010827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22252033 seconds)
  done (took 1.722373218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23764022 seconds)
  done (took 1.696517899 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.749065451 seconds)
  done (took 3.205859491 seconds)
done (took 41.860644792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08679014 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089000716 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089253965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084977264 seconds)
  done (took 1.789626468 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079837854 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076275829 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079580586 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075913736 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079287945 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076897212 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077774661 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078627286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076398443 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076960463 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076395987 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076562909 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078944911 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077889283 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075486453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07899712 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07941492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076443388 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079372397 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076507176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074647557 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078745813 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078851389 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07568394 seconds)
  done (took 3.321730786 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081532569 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076372966 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079055128 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076582337 seconds)
  done (took 1.778805634 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081899876 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093416916 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090949604 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082260509 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093691739 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089187555 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073362388 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072831769 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074080897 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082386807 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072036531 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098645723 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091224418 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0819736 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084079515 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069096816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071485205 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090557738 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083120236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082835911 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074155685 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082560275 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072085879 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092404095 seconds)
  done (took 3.442278614 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083869873 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104168466 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084215162 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093435246 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095487002 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069255761 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082727353 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096339393 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129377356 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069987024 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075398819 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069739914 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078337672 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072618978 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084239874 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11171074 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11515335 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07339287 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101547621 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069566346 seconds)
  done (took 3.230521655 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075710161 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072907967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07455796 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069218052 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080731602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076174162 seconds)
  done (took 1.922933196 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072492924 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072167091 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071430629 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070312138 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075991328 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071731716 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069921095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071545794 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071352796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071145033 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071139596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070184474 seconds)
  done (took 2.328326709 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184596524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072112734 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07215504 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069549525 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073834707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070657341 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084800145 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071695684 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094927759 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070694338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07078745 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072568741 seconds)
  done (took 2.480275291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195883421 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078877038 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227055515 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151828924 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109494482 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113957605 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113294167 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112626804 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137213563 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10090014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160425665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162611365 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107639055 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136953358 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09214694 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105660574 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150793589 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163529556 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107109179 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162040137 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142151198 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127250146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145018729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102852747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10608998 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119588571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075377693 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082097932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164906116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130794264 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141486098 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117295312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0925983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170469227 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164281354 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136889519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147390274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086210506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105224454 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131155792 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196899685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090653676 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300223117 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112676445 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083961645 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132653347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119135742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120678104 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105645868 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092661886 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143171471 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177861942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131759713 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088492369 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122885487 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112085525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112177884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113920369 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170117035 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155558733 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127043319 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075203901 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108512286 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147990947 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134432402 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108480568 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122837843 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09331902 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13105714 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151387221 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122334676 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139792229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115739817 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090589807 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120670862 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135824063 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126981673 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158453173 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124635133 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076225965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120541107 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099956376 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082778103 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146658684 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078163114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169994613 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101471704 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10808186 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123760512 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108271078 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108287827 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152175716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28521306 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106209497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072836433 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107045987 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119313932 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14290973 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089420572 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109569845 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116712597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080546922 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133656895 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07928477 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123225701 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081671885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122813453 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128726081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080602575 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122499621 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10496569 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103235615 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130105969 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154632211 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09009413 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083697106 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161576839 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1226143 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103899364 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140531902 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153502862 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104618917 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1003221 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144539666 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165803677 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092062138 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158984159 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106224877 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086087762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091140584 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123408666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111620528 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123908512 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084085115 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117644497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159246405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077864638 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097458273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133148262 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081676023 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082943474 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106122559 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104716357 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098964949 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099973863 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103190538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133511777 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274493107 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107311043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124173044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10027332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164141907 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090245927 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105115098 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105026597 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073986613 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129983905 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151321602 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081493911 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155558296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12126418 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11656516 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119410146 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08648534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134223106 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08233512 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074266357 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139163869 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111910609 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110490114 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146979885 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116303918 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12333155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118724197 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130008119 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128723189 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128966661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10790313 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091510217 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11345983 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126299942 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077046555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092331055 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083390277 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106027693 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097279492 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086391348 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138830246 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12250032 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108799739 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112248041 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097845013 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143300497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079625082 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124732469 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119180377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09716745 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148190421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147084834 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131228141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099744835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283226234 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075080882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078284809 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089975635 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121870529 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086355891 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086075383 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11495996 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144033451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126646086 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133855819 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1230535 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118960674 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151191106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074319505 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121394909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141116859 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121282217 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106328368 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093687957 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10066658 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139518655 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105697895 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170962455 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115020155 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125185323 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15406113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104483136 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082441428 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104235485 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130885914 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1042263 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141944121 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100555431 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09080946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10902452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07931917 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09904279 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125943818 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118663177 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134949471 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112709978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1304149 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080386883 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11365974 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120873134 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120049418 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069137642 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11813971 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161033303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09654081 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116736988 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296241263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082787245 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13709251 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167426161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141170852 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087329605 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107907586 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120946388 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124819261 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11871207 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134929609 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105583077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135891873 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111062027 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088501063 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089360888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097514988 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105014865 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096787036 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103376081 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113911084 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097667956 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130036576 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104909556 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11118068 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118510027 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102888544 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095861331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098752096 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170756194 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119180354 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164710379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102171619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139097798 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157352794 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078308594 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082386182 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081564246 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135715267 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087535691 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130004782 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11177265 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116671558 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122623491 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135919115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097161926 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072694887 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109460761 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131320648 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122720997 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099375073 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102944684 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156437842 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101019731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08091483 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259908644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11710341 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105041886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165212712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067785617 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107826473 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080259828 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082516247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124520435 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146702779 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083291423 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101431224 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120275287 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111992491 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124851806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099888857 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108704135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123613944 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143667525 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126452105 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091641756 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111405087 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128105361 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151224426 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103779289 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100012099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166911286 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148711738 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15441775 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088764571 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114536364 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114902176 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109933752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13593806 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08676401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157538 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085112487 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135101715 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10347337 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090232329 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126507859 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111328353 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090899698 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141441938 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116880336 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085280131 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081002059 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115050112 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118577871 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104562917 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077858917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284326704 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078285361 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13260323 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156939719 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084180031 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106181267 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09737333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082894215 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105200494 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103698276 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089975194 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102048375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165704909 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088837112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1433779 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131011742 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111843053 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132969017 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10399084 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642365284 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080432265 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146581711 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114945166 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166590478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10126764 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118081344 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111104306 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1200364 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140501384 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103553971 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180537346 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130156505 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116973492 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082614168 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10337767 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105047422 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089692752 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108230831 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114757613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115778071 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095428586 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116882654 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123182093 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084935608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097451505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150990786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114574783 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140153958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134858745 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086619891 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117410883 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134646858 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231207684 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118798523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147714262 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106425019 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100570742 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084387584 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10031744 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155346577 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077423924 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153078554 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123203196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111446596 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129861032 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109175117 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129138216 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104925161 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122035688 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092981387 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108163091 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113542293 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084320996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080165462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106636687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111392929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101467973 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098268461 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102314581 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147906679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076644678 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100696662 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116625467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141212281 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166297923 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09189622 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086167142 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120429855 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116221499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113117381 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121993768 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082510734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084727259 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083413084 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085845022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108830782 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114338957 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114387283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109574634 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155548253 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086538306 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228200139 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096853388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105094807 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074141903 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080362804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096987316 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09751651 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25572001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110529919 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156990237 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098230647 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092368924 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093220261 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079390435 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086859601 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124946591 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111930051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118437369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102388636 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068106529 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107228921 seconds)
  done (took 58.877176721 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110536906 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086204971 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100293243 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145190328 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124355635 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203152887 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155495661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192738455 seconds)
  done (took 2.690324591 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072302755 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097349984 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106303486 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087045527 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070469388 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071809327 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225158326 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084705541 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070298722 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095754049 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081830645 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072893279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.408492649 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069777139 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071166808 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066607875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071458312 seconds)
  done (took 3.385328473 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393081406 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616837726 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37307416 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082314085 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.909492766 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097522605 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.169731375 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137446461 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082148891 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525922884 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698443301 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131470119 seconds)
  done (took 18.78969304 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08676541 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080634803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093309305 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09337702 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082875866 seconds)
  done (took 2.094563333 seconds)
done (took 107.620214032 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087822258 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431498299 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059720741 seconds)
  done (took 2.095846978 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091275689 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08991584 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089385681 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087416571 seconds)
  done (took 1.939560278 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079704328 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081188644 seconds)
  done (took 1.735686174 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230923512 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172697923 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101472578 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087122539 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084818992 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085033186 seconds)
  done (took 1.835514468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076832856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079370079 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076987603 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080039444 seconds)
  done (took 1.887702141 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080879617 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057912722 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060291224 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063263158 seconds)
  done (took 1.837140485 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091032153 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088388274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083152383 seconds)
  done (took 1.838396407 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104417366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091484346 seconds)
  done (took 1.772165232 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085019067 seconds)
  done (took 1.663549394 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092623615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102976154 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135333751 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117622317 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141342826 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117614315 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088820916 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089741969 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083627735 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090522479 seconds)
  done (took 2.637903205 seconds)
done (took 21.413021097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083672295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373616613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364490478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093390823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67301721 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361631207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981911293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097071659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144882071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072522044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089200956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653558885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970640532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330820454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958350864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.336091592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656354074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074750747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073626661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073265452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966712082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073143606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073632994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074227358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654798146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379312073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073913574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352582488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073541173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075723932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361014685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074104376 seconds)
  done (took 16.251356257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075558326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1243262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077916445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088521805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075088566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075052943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076292146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074206808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126473253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073654908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09065763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073526561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077348903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074600052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092642722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07677559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074392513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074670544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073934325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074011781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092341546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074005854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074078309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074175649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073394982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08616668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074092837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074122336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074155286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076000436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076812438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074828046 seconds)
  done (took 4.164757831 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121046427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128738911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07856512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109126884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116881742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076166157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149767128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098845159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133114772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073488444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090669171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074118217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106465192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074640368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093510355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073961233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074863441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074355717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073919243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07446175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092823278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073663494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074089487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074335442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074340816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087910811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074005841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074358109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073904932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076217455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077640382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074297755 seconds)
  done (took 4.414757456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077649147 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079696496 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086613309 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087694166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073523627 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076818777 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077752992 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0736816 seconds)
  done (took 2.225850527 seconds)
done (took 28.639628233 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084385637 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074641893 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077784983 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094032344 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079103102 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082158895 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072087571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081344482 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078981415 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079361931 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080451045 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07258596 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076725974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072207369 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079337854 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073551761 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083624154 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077714437 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083441832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084007185 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076099391 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078751184 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080855402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083649869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083480511 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083341224 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082102326 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078486169 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073417543 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075867753 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081942339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088924121 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073239875 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083084983 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07282077 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072767208 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0768579 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072644776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083164621 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081801309 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074691867 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081883158 seconds)
  done (took 4.894046233 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09250733 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097011244 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089460393 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067532356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073152177 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070813588 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094819534 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066662337 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066052213 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093962628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062660821 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065315086 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069619428 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060388687 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066295064 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063956275 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067925562 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061708426 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066128853 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065540468 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094819486 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061204398 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082593089 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069556229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062372548 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067971128 seconds)
  done (took 3.499779085 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079448938 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087521424 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094973703 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147432784 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115057934 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083104258 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083401164 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097477571 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099219583 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071812585 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075808526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099384184 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092989788 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078810237 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072731056 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089625192 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090512539 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074115665 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078184757 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09957404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090707963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090809424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096184623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086626508 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072091979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074975461 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076385004 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085079559 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07499443 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081644582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075129512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075192565 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074022267 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083751932 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075013883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074311041 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098877561 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082456984 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083454572 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073225796 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080193585 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07341133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095776698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128709456 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071555082 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078136696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075658977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082151626 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071766535 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099437676 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083496444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072620478 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075664454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071839608 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071871567 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075543504 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074197805 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074612074 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081294526 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077628431 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096595707 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077469759 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087932053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071727974 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080747012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072264873 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074411253 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071408301 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096782815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073852989 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112032017 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072952506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073014449 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081788486 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081096397 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078953092 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072366362 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088049501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082128902 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075191866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081014937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075426407 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074361098 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10146421 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075197531 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074353074 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07343646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077777843 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074691526 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073690251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084928335 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071933752 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07445939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088865971 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072379703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074035638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078155574 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076211097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071428331 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082562101 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07582417 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072725909 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08187367 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07220807 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074026729 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084164887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078211142 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071291505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076464541 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077162514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073121168 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073742736 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073987261 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073299262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080714118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078591955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076267997 seconds)
  done (took 11.123050404 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169728806 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158414563 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076159321 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151407429 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082066631 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083223222 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152365085 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097945566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07294733 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073721484 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072908131 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112666043 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107758204 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118555759 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082804739 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072587268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095233991 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116960879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154388552 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149793148 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095694001 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080818977 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075338429 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074198783 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074578111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082586887 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089960207 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081361411 seconds)
  done (took 4.498958263 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083967658 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107270908 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078737748 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095022531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094059635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07259459 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074336578 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074529643 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089816908 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082440799 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072708891 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076878972 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078878711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075949541 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073334541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079593183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0789325 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073992456 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076341805 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079984136 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082708294 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096374992 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074943389 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071851711 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077366402 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072021877 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067844429 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087691041 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073443998 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097031497 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070195884 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076983514 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085917002 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073662276 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072532385 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07262109 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072932663 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072695541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074311416 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071385251 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071437049 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063339237 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072224915 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082769683 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085563936 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061887045 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076984833 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077929454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078025634 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070341928 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075695693 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075852998 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075436523 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080255962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076172749 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078357305 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073817202 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081540403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081129035 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072320688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069714032 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071475303 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077667554 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070035615 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088192015 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077142877 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071631165 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073233034 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074343485 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086018385 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072466283 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077606512 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07021789 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074740513 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077806759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074394997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073912329 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071466669 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07292734 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07329244 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060919765 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072644966 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059101034 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075302133 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07144431 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071829135 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072870948 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077565836 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083304734 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074032083 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078619523 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074358585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071798229 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074623381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065594712 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075125212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082957412 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086726039 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073216228 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070772225 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084797584 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077562488 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071780808 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06262117 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076140662 seconds)
  done (took 9.641224416 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095864788 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074780362 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086846464 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093809826 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091219471 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079167458 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082255471 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074622552 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088910651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079141829 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082681376 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073161426 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083209857 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082289561 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074875083 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082495339 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076199922 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087672278 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087451686 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073214828 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081314891 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085017249 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094763125 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085572103 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08401142 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085856768 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094561656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082444892 seconds)
  done (took 3.987621398 seconds)
done (took 39.233682662 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.693763642 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.856217083 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.672917403 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.998123784 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.741648349 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.896163541 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.77229491 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.667975482 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.908990997 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.707032139 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.981817499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.747728895 seconds)
done (took 64.371933452 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.708639813 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811020756 seconds)
    (2/2) benchmarking "String"...
    done (took 1.906850632 seconds)
  done (took 5.313450433 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.891928955 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.349107987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.906744884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.665168354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.672073905 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.937911486 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.47436786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.191685702 seconds)
  done (took 29.794834625 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.790621256 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.896054391 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.362537099 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.394868424 seconds)
  done (took 15.092260625 seconds)
done (took 61.492130144 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.661308829 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.71645861 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.708928809 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652732582 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.724909504 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.676864566 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.820957638 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.905479963 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.666420139 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.655774064 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.670714104 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.093958396 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.680891308 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.836404002 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667331038 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.674971019 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.66871772 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.097977713 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.824361814 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.67985361 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.676174064 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.725866484 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.669931641 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.805330722 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.67303282 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.672666831 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.082615356 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679237819 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.296261431 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.666699752 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700182236 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.012138019 seconds)
  done (took 201.342584882 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.667688841 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.669622259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.774260863 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.690349811 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.192478665 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.854362374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.784976303 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.23135194 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.674361919 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.67597542 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.907403165 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.669380472 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.912740682 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.66856249 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.697495241 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.674941155 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.876439434 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.927256913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.699660934 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.840535127 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.676081866 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.679538587 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.647684014 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.882821625 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.668889781 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.78553803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.699507503 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.700444485 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.863664381 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.858469439 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.673984452 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.706034604 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.879538157 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.542722897 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.688173018 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.672827198 seconds)
  done (took 166.316144712 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.867302211 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.669476939 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.669952466 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669828591 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.676263895 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.669275029 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669401906 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.794160627 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798361818 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.29103989 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.07964838 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.724446559 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.669997662 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489897448 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.670474516 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737310722 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.683851201 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.67134764 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.68663297 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.697158794 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674216816 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671329865 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.67027893 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798386739 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.681988207 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678364433 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.672006996 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676506245 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.042607407 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67114609 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.670518606 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.855279859 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671482086 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676346651 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.911124551 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.671492529 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670632313 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.527217794 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.765829202 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754619803 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672406231 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676259485 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671272625 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.888862817 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.6719279 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670978959 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.670498665 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.672404904 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.674190748 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812641096 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.674572837 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793780968 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674800396 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154310363 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.675737151 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671714135 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.449150899 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.675896344 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.263911744 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.675468502 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.674748767 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672499922 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672947239 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.678542545 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.430372485 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898572946 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.675098711 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.675379433 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.686738558 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.67356055 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.86111572 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673552185 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.14524293 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.731530333 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.793686288 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800737112 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672617523 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739358248 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766149803 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.673298992 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.672504784 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673580231 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672185346 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.752776954 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672997908 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.839522252 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681246414 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674787937 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727002066 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.741506665 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.673378965 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.528589916 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.675414082 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672234412 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956478943 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738953925 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.673111582 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673098768 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.817638511 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797908205 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399999244 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.676835399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.603530515 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.824486448 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675687478 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.833771766 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.677510492 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756356515 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679019876 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675729686 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707397195 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674800581 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.734037871 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.67383274 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.046348501 seconds)
  done (took 391.388660662 seconds)
done (took 762.571659619 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.266428009 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.232880652 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.338160281 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.25075811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.225657387 seconds)
  done (took 12.917916513 seconds)
done (took 14.524573449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.764648872 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.767222254 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698456858 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.764446165 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.69596784 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.763157663 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.746829486 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699248306 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.731998665 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.699743784 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.73454046 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.699848546 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686676573 seconds)
  done (took 24.057280726 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911736941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.905972849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746833798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907130445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.7240931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907156054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83633452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822415935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823663581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692188739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.688134416 seconds)
  done (took 21.572512139 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904376682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911391453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75286673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.905231827 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.725499561 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.919135682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838459931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829021057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.83946218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697060972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689096836 seconds)
  done (took 21.617864788 seconds)
done (took 68.853605469 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.683582536 seconds)
  done (took 3.289772868 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.708379528 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.867814178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.691550173 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.686696809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.686394675 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.68560149 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.686346266 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.684897046 seconds)
  done (took 15.305368941 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.680838095 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.683243185 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.683772389 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.686549544 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.683490951 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.681657252 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.683183526 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.684482725 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681351144 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.682409281 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.68554611 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.682014557 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.685070312 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.682173203 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.681625974 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.68540118 seconds)
  done (took 28.539554859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.684072883 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.68185283 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.681917294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.68421678 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.684690894 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.681788592 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.684354653 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.683375503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.682423389 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.683088695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.68507551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.68391445 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.684586258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.68393364 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.684315037 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.684625472 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.683540739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.684480824 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.688132439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683708955 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683315022 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.684431961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.686876048 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.683571178 seconds)
  done (took 42.026799457 seconds)
done (took 90.769652849 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.439405695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.441216416 seconds)
  done (took 9.490598508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.686853503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.685936221 seconds)
  done (took 4.985382544 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.68571046 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.686342525 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.686401893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.686695009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.686242626 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.689716586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.686719634 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.685978643 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.685526106 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.685789064 seconds)
  done (took 18.474415893 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685795793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.686443383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.684105689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.686613172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.687173184 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.684281254 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.687097213 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.686559641 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.686273751 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.684356003 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.688041453 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.685170538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.687649168 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.68457376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.687406114 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.6848959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.685692465 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.684132744 seconds)
  done (took 31.956848614 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.68632602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687335977 seconds)
  done (took 4.985241861 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.684593548 seconds)
    (2/7) benchmarking "second"...
    done (took 1.685048889 seconds)
    (3/7) benchmarking "month"...
    done (took 1.685103418 seconds)
    (4/7) benchmarking "year"...
    done (took 1.684912885 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.684281389 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685468263 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.684819291 seconds)
  done (took 13.404797333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.690260134 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.830249601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.88996087 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.279467989 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.688988789 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.691739945 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.601669755 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.691480034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.693225693 seconds)
  done (took 18.667278921 seconds)
done (took 103.575503741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.535657757 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.687087792 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.90951607 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.822215564 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.703396145 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.981956839 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.694447479 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.969414827 seconds)
done (took 41.916446137 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.779795777 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.402862357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.420701784 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.711455766 seconds)
  done (took 15.147001235 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.668304486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.001767722 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.691983062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.549503112 seconds)
  done (took 21.526451992 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.057853657 seconds)
    (2/2) benchmarking "read"...
    done (took 2.027407611 seconds)
  done (took 5.70335356 seconds)
done (took 50.773209276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689214997 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.690263809 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.689317078 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.690772658 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.688884296 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.687057445 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.690064645 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.690406907 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.689678961 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.690970012 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.689970619 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689415279 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.687662652 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687876549 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687549288 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.687870075 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690053008 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.687183707 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687709086 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687455091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689905395 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.687693732 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.69013538 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.691096086 seconds)
  done (took 42.151078895 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.690063768 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.689220843 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.690921535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.691441132 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.688358777 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.69077072 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.6907737 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.688539497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.690508226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.691593622 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.689558289 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.689268311 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.691867403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.689349527 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692246395 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.690091049 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.6931324 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690017636 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692079783 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.689252208 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.692847489 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690076752 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.690302422 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692593946 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.690244845 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689719751 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.694593304 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.690717015 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.692892488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.690449568 seconds)
  done (took 52.337688023 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.697633292 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.702416792 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.693867237 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.692396109 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.693779525 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.694205739 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.693114489 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.693178832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.693034652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.693355306 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.693383014 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.692905213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.6929206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692608858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.693211476 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.69448221 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.693791501 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.694586594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.693480729 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.694057918 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.694294316 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.69443009 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.693647218 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.69411972 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.694116776 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.694312003 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.693616981 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.693452382 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.694025597 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.693976301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.693624599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.69411402 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.693549573 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.69396193 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.694640341 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.693990017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.698703002 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.702659952 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.695310239 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.69428107 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.694470638 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.694645949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.694430261 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.694105355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.694246312 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.695500958 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.694759997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.695371123 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.694526886 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.694417912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.695461522 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.694874037 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.694512931 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.694834089 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.695422439 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.696653685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.695197346 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.695468635 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.696913401 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.696013732 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.695381063 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.695867531 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.695310719 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.696116136 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.69591089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.695135757 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.69641481 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.695513777 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.696166031 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.696506457 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.695670083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.695856882 seconds)
  done (took 123.646328896 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.697219451 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.69414014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.693934391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.694768714 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694219901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.6963399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.694729305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69742179 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694701543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.695643134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695210597 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692610207 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691959969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.694233591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694149625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.691734039 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.695107909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694774928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.696002986 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.696961484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695692376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.694297716 seconds)
  done (took 38.906176824 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695675148 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695964866 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693248474 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69593186 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694297852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695429429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696150523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696716967 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695720665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693478167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694339228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696094298 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.694499432 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693401808 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693679967 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.693561772 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696951765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694258746 seconds)
  done (took 32.128283059 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.693962495 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.694112508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.696170509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.694282667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.694921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.69627018 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694323031 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.697665145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.697323721 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.694198646 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.697530607 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698667459 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.697700491 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696012635 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697142937 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.695009483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.698100812 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695606266 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697229116 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.695864451 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.695868169 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697579726 seconds)
  done (took 38.935480263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69797018 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.69794769 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695681709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.695854955 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.69541839 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.697565632 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.697786578 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.695332596 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.697707231 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.697611163 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695541517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.697716786 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.695639587 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.696688226 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.695905948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695621817 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.698649073 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697006221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698808135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.696438458 seconds)
  done (took 35.557892741 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699430016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699752654 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.700235215 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699309184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699649516 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.700685018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699660869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.700727969 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700188674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.700669747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.699903819 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.699915416 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700167855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.700246057 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.701150512 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.700095805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.700173607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700116865 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.701050723 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.701029591 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.701926003 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.701431991 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700848833 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.700862575 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.701062064 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70157566 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.700584298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.700893939 seconds)
  done (took 49.2355333 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700736984 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.699618885 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.698055458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.698452493 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.697872292 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.698141628 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.698979334 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.697507403 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700055391 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698994107 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.700387122 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.700898477 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700118499 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.699928909 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700517807 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.700548161 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700939517 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.698425487 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698583546 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69812373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.700700864 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70005378 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.701187247 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.698196149 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698474799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.701581867 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702315987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.700306715 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701528583 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.698217235 seconds)
  done (took 52.613655284 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.718698113 seconds)
    (2/2) benchmarking "in"...
    done (took 1.721461644 seconds)
  done (took 5.063752741 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.699321308 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701655175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.701976774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.700652228 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.700806899 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.702880588 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.702362003 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700071181 seconds)
  done (took 15.235076034 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.70049468 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.704474044 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.70311328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.702658439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.701629794 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.702239569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708066976 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.701878592 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.703138469 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.703912258 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.709364739 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.710114838 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.7049464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.702999295 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.701888438 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70497963 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.702271385 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.703625071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.702972713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.70642333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.702916296 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703809829 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.70495683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.700674135 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.705056004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.713320658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.706725931 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.702852679 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.702329411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.706194493 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.703098347 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.700086323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.704340003 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.704166374 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.704105298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.70461251 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71359682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705093979 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.708317929 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705428409 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703762744 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.70083092 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.704389622 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.704158997 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704997454 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.703851072 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.704296296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.701048358 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.703731391 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.706596196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.710492162 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70326207 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.702188803 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707073445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.707932782 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712817187 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.705628026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.707424092 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.713200925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.714041041 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.717218563 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.711454126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705479505 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.705248833 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714035729 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.728491014 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71128176 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.702314351 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.703076318 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.705843691 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.712328789 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717841061 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.717405269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.706304089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705705401 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.7058485 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705756353 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706643064 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712701534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.707608969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.706442924 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.706779478 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715445183 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72876596 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.704995673 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.707433433 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.706558445 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.706694598 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.707228662 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718525786 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.70827205 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.705872615 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.705010449 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.705285205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.707119829 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.706617313 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.705386267 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707365331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.704390245 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.706390341 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706499713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710151337 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.716115761 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.707341536 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.706516837 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.712198882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.706906727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.708630423 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.712782552 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.707206103 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706719127 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.707085914 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.713130124 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.704699882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.711181054 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.715355907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.70766788 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707598528 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.707755117 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.708079006 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71786565 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.734028511 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.707981194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.708525126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.713804395 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.723784191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708761707 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.710985477 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.708849809 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.705951194 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.706195431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.709627416 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.710007238 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.709414521 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709097211 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709214749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.706244416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.708418033 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.709602281 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.709465496 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.709672711 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.708170039 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.711424092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.710537522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.708634602 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.709538517 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.714721452 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.708898681 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.710359234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.70984057 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.706463254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708748666 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.71066389 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.710812835 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.709332482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710603964 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.708402881 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.709444927 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708918862 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.709350432 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.712258636 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.709810764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712696369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.710657458 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.71161188 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.708306578 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.707436766 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.710334955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.710171753 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.709942466 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.711139948 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.708486484 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.712923315 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.718738289 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.710709345 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.709820662 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.712077004 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.71073611 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.710745105 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710942031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713288709 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.718059047 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.70963994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.715953598 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710944943 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71165094 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.710193414 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.711202405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710459918 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710969898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.714657853 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.719715559 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72386533 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.719549713 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.71243721 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.7174516 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.712319796 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.716223501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.714772377 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.712130121 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.711585027 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.713756441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710444568 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712218129 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.713515522 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.711611009 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.711084009 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.711363557 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.710800482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.712081927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711758842 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711886255 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713696406 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.710384559 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712022399 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712832709 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711574488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.709399679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.711173138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.71144865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.712974002 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.712974135 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.71864788 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.710900855 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711928498 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712702008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.712292915 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.710548607 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.71283786 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.713925318 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.712875209 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718599722 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713355619 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.713454532 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.72056446 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.712753523 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.711549485 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.715105054 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.713129416 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.710883561 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.715533619 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.721634565 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.715073924 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.715293747 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.714442464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713053828 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714273543 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.721756966 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.711942063 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.713597077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.71443317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.71528069 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.711034194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.715712809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714310844 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.715004272 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715518154 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.715333103 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.713848327 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.714808998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.71503102 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.715286751 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.714254834 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716950931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.722742484 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.71922576 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714239057 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.715532319 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.715540129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.719204452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.715173548 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.715086114 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.713473924 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727434524 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.724531882 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719987664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.716032096 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.715552084 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720354814 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.716144842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719582954 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714657431 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717805859 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.716446052 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.71763743 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.714348161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715694677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.71586341 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715974073 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716832905 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.720158917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.716115984 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.715053369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.715669308 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.716098641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.71576615 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.71524561 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.716156279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.716726869 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.716084808 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.716959705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.716369692 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721120753 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716174998 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.716674629 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.716357151 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.716450409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.716711805 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.717408432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.717607528 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.719934752 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.725268584 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.719586096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.724945875 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.717949677 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72544776 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.716892397 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.721529459 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.72664721 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.714417662 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.715807757 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.717070485 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.717667954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72345127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.717976255 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.71866875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.72311549 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.717192376 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.718978295 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.717570681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.717869488 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717340263 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.718465978 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725259158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719068708 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.72278837 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719316974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.714614918 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.718166649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.718195686 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.717005673 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721289877 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.718713307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717981937 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.717157955 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.718884179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.717556495 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.718392822 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.718149263 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.715761852 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.718023043 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724900898 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.719969558 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723050066 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.719204265 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.724932209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.718906035 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724404621 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.71984374 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719134909 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.719505264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.719697208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.719767123 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.718870895 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720027716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.719664619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.719605276 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.72336224 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.719965874 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.721992207 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.72142446 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.72104462 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.718906162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728724761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.745416942 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.72154897 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725104465 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.717754827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.721602173 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.724748516 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.72032395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.718487138 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.722444231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730786951 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728225162 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.720598069 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.720544084 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721026253 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720117773 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.720362436 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.72063255 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.719892049 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.720940585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.720697612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.720469724 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.722817108 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.720534085 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.72103891 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721248308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.721311495 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.731052114 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.720833517 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.721295909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721180631 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.721478994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.721385066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.721143133 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.721450714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721911277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721245119 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.722060905 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.72817304 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.727741986 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.723206692 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.720858951 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.721650981 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.720991635 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.722012093 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722461603 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.721317504 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72268573 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.722742791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.724847825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.726166297 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.720748537 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.722941007 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.723156548 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722521683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725557848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.729633879 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722290449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.720027169 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.723532749 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722346108 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.72108681 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.72289964 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.729687534 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726101423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.733034802 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.731382694 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.731934179 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.722827974 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725407529 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.730396991 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.721501492 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.723284576 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.72380594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.724336326 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.723890071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.726638686 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723435169 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729275078 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.72286295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.722878476 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.730621834 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.724565442 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723682646 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.726587175 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.729245163 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.725068519 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.721178928 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.72424625 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.724122682 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730900661 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.725512021 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724105122 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725137224 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.721260043 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.724370403 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729102911 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724127261 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.724586697 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.721708521 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.724289374 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725746461 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729420118 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.722684503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.723924648 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.724436855 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.72863039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.731445943 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.723591598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726392421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.725642996 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.726458811 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726518009 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725712585 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.723065485 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.722699645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.724608704 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725602227 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.725403348 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.731174415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.724485551 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.726255721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.728087189 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725863029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72840561 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.736649324 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.73368185 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.72296166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.72465462 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.726908603 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.727233581 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.72566293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.726107839 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725981816 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.727604541 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.726052275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728512046 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.730167689 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.728950548 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741697074 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.726860537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726556279 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.726841571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729084985 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.726825528 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.723608346 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.726523498 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.72777887 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.729584761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.736117096 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.727517067 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733250998 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726310167 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.727882989 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.733319622 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.729888987 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734588789 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.730038778 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727484241 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.727634919 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.730631983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.742658935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727316178 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736518584 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757070335 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.727818735 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.727653726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.727133178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726606459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.728115525 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.729459634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731264482 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.729035795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728744077 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.728299274 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.729444589 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734317503 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.729667279 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.727825845 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.727929927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.727217693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.730370482 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.725016722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.727719192 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.727738701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.729382239 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.728074388 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.729172349 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.729107596 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744671759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.738647711 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.72904333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.729203148 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.725910975 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.731089878 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.731923498 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739878337 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.737383201 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.729001816 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.729248909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.730055381 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729273603 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.72611505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729385554 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.728137495 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.728896978 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.729281625 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.741376706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738515258 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.733244118 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.728948294 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730215496 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.729201783 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730927009 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730510906 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730383194 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.73124035 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.730740061 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.73470345 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.729420127 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.730179767 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.732357991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.739427438 seconds)
  done (took 1025.569379987 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729383207 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728805102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728519772 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.727675937 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728315654 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728873448 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727726196 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727981549 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729061933 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729477206 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.728710098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728879185 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7286367 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.728358981 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728589976 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729445978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729381003 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72865662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728219149 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72870263 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727190386 seconds)
  done (took 37.954307397 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.730995567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.728913504 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.728854801 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731172211 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728918588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.731465712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.729101372 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731511877 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.731526739 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728804377 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.731295714 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731119755 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.729013046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.729126022 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72935862 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732111802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.732265144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729240224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.732272238 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730340002 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730836862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730079625 seconds)
  done (took 39.721429215 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.732585345 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.733084824 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.731305494 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.729817882 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.73224234 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.729726967 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.733293015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.735314302 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.733347417 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.732858466 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.731669114 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.733411615 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.740638054 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.738016961 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.734559875 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.733200664 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.877213031 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.734231064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.734218944 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.734748541 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.730672426 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.737805193 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.731322811 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.731320906 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.734300117 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.733797111 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.734438131 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.733487863 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.733681152 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.734876188 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.73802588 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.733837801 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.732892952 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.734707529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.732840401 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.734583737 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.737946784 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.735153281 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.731577108 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.734149321 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743550607 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.756191712 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.735243364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.740045773 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.733908937 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.734017591 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.737204944 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.742469073 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.731375024 seconds)
  done (took 86.8061327 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.734300497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.734193749 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.731919037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.735245735 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.73494722 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.735762363 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.735453537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.733862354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.733922594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.734080091 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.736090052 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.73260731 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.732387038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.734627402 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.734990023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.732996078 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732807965 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.73248675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.733262018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732457783 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.732970118 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.73555474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.736395506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.733789454 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.735953714 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734020581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.735660655 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.736468885 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.733648928 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.734053864 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.736074531 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.736089474 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.737250242 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.734677166 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734040612 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.736153146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.736737522 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.733886207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.736861433 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.733897159 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.737272018 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.736706603 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.736243324 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.736478902 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734073206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.733975467 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.734078456 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.732462018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.733516175 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.735583882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.735243247 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.734881234 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.73564939 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.732207987 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.735340347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.735195939 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.732099369 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.733062554 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.735119653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.73427262 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.73353845 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.735478576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.733523833 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.736505173 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.736480226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.734669169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.733418364 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.736096959 seconds)
  done (took 119.613181646 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.737417183 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.737850894 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73760599 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737912138 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737038933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.739271302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735872548 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.735306606 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.737092456 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736515738 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.73584785 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.736203013 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.736232236 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.736031381 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.735059788 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73611355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.73682831 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737567932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736714241 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736109211 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.736374165 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.736766946 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.736713951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.737359349 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.735369958 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.736074473 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.738738025 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.73623557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736865337 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.736034694 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.735966571 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.73595804 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.735928354 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.735868361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.736982531 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.728822144 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727572641 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729075373 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.728226352 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.728592856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730060086 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727332771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.727475877 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.727698786 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728553517 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.727188997 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.727677025 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.724297423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724369647 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.723925303 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.724357129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724440116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724626277 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.722837313 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.723530437 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.722693961 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72304487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723469431 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723159577 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.722946263 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723101408 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.724353519 seconds)
  done (took 109.03448606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723069457 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.722983317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.720326841 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.721191678 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724209413 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.721182403 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722562466 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.722793631 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.725500821 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.723727205 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723409703 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72020835 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722823624 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723420476 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720284881 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722847609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721894424 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.721204558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723263358 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.72158132 seconds)
  done (took 36.093090097 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.719899052 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722324905 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.719433741 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719884658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.72233773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.720601708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.722985708 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722681849 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721400406 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721855071 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722003742 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722941451 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721952592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.719720236 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.723765681 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.719275786 seconds)
  done (took 29.187683072 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.71991034 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.722536435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.722770466 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724441003 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.719503751 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.719873001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.722977109 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.7203513 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.720527302 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.724612463 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.722571512 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722904426 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.72323754 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.728255341 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.720346979 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.723680972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.721099419 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.720678228 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.723213367 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.723689806 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.721984739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.720884221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.723731335 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.723629631 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.720801021 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.721938314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.721637344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.72119667 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.720925372 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.72324003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.725135925 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.724995318 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.721984891 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.720203486 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.724980853 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.720702803 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.724155163 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.723667502 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.724894786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.722395442 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.723321544 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.72102572 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.723194791 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.723392149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.721351875 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.721799615 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.718981196 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.721215126 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.72384083 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.720605516 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.721189045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.722389304 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.721710083 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.722576572 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.721313096 seconds)
  done (took 96.373850462 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723082641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722922023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.719872036 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.723333755 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722904285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.722042248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72242063 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.719718343 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720267338 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.726937065 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.72140211 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.722707359 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720788372 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722485568 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72087184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723376075 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.719924814 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.720722873 seconds)
  done (took 32.640127168 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720512902 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.720504924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.723468967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720743633 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.720843778 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.723045084 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720148082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.723573807 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725131264 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.721703215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720754245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.723723846 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723747192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.723500215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.721517482 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721294643 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.722499302 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723830658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.721404299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720498788 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.723487931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723237127 seconds)
  done (took 39.534257653 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.723025523 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.72292599 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.742166862 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.743548417 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.745538844 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.756225237 seconds)
  done (took 12.078041902 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720068506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722556049 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.719986761 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722883582 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722347988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720738831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720364908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720550013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723200861 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720871285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720403562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722051167 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723574681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721886435 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72420982 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721893651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719853231 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71896989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719640051 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722642131 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722029155 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720234229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717623907 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716758757 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717279576 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716329213 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720708578 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716123526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716044803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717955232 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722784608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715878347 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719140664 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715749851 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718375156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71736004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716022871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718997105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719193273 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7156219 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717614885 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719281262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719191832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717224802 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718446288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715648118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715498409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716966362 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718101295 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719108818 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718560047 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715539643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717448249 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717893511 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717209817 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717809943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713502831 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713129345 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715872683 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713331837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712807787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716677342 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71272288 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713072463 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715622472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717035538 seconds)
  done (took 115.060407376 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712022724 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710806046 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712536736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711869843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712066504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712050841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712278401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71084538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711928725 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711490958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713476025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712902728 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711548008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712238794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711772167 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712337098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715124867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712169529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710918295 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714302028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711593494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711741889 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712265806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711988897 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712125565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714218641 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71224581 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711866621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711754377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713278486 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711626006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710885278 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711859267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.714034363 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712339599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711719209 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712326238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711314279 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711731654 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71333222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711442366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713590408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711518662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711534625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711209671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711366327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711894511 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710210718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710617474 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710228581 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710452832 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716331822 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712180414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71016984 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710572581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710436294 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710042869 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710554594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71172233 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712637425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710121052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710707449 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712761878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710538547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711600471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709912494 seconds)
  done (took 114.621634998 seconds)
done (took 2381.716971998 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.725696564 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.810674844 seconds)
  done (took 15.170967913 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.871573747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.826459552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.709578238 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.726166299 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.70945409 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.712183464 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.725082894 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.709662054 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.70991043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.708955469 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.709124944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.894648228 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.761956292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.708980322 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.709686936 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.803356567 seconds)
  done (took 49.636457452 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.712499189 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.714011547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.72435459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.715015206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.713121873 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.726263457 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.746281567 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.71537733 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.746605366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.727194402 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.782156911 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.724667099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.711319259 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.761592547 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.72744191 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.730080885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.804315193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.789620448 seconds)
  done (took 32.907588424 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79114692 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.714427258 seconds)
  done (took 10.145710654 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.711414784 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.730689117 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.759985862 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.719585834 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.736720893 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.74213985 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.730434982 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.730157685 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.721343378 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.750521462 seconds)
  done (took 68.967989015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.716962894 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.711365124 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.711371795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.708966463 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.704476817 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.707643672 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.708341471 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.705110232 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.372159513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.746106301 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.716945405 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.716655962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.710790509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.711126526 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.707694453 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.734804043 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.821613926 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.707319794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.708220876 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.714187775 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.710888181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.778653139 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.722565312 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.710989132 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.741120671 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.371836973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.717051824 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.715214518 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.809711347 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.710664303 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.709707921 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.710682871 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.712748254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.109523413 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978729445 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.711915246 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.724865682 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.719633475 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.708412252 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.849857874 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.71091644 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.717332609 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.441765935 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.957331216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.81562389 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.750149496 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.039114744 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.72658983 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.711885847 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.738714436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.712961002 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.71319512 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.723768284 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201750581 seconds)
  done (took 123.565405133 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.705167518 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.055966601 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87595812 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707300291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992334438 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916500426 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.709239091 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75558323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.71126647 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942767964 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962601991 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813912276 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.710541925 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.705352133 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.70837611 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.70617608 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.862427354 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.780685075 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.709243563 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.704518815 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737125148 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953852485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.833479858 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.71090568 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.737937719 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919911167 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.832099733 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812576399 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.494460876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.705971509 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77350539 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.709374673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.708768872 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708141281 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.866329808 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.803967877 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795186234 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.709098084 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706532102 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70606063 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.459704411 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909422009 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805764824 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.840197185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963662408 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915375577 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49129218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.707710503 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.453157712 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.87387036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.938264006 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.944794056 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.830800237 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710798426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.048072715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.706989445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705833808 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960944226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931230796 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807461327 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709543669 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.707575255 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708831004 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999977292 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.710041056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80779228 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711909332 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.708374369 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810200603 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808257268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.942464831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924427458 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.74044337 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.051686364 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.211417443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957697045 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.776579424 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962030667 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.710304242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.709103879 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788751816 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.554271212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964081253 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994089118 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955477977 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746149386 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43716049 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.706661941 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.9395055 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935316008 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.971034686 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.956506677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95021873 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.027526098 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.709079239 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.709932247 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.953331853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.839033953 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.712930108 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.061581251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941988383 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.239881886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738383188 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015222092 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.842977574 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.714024537 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.353922929 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709382139 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940800999 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751854247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.710393186 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709078147 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.93208677 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.702239482 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712359023 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.610209958 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.773914959 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.711203572 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945830728 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711527972 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98467065 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713305694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945355416 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.187576274 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744098484 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.886607158 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.95848119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.713726765 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.95221941 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956090367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.826368201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98574392 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.614147832 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.710572498 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997772071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712677985 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708752791 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.882992641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711662648 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.855273386 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.715355766 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.006134624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735547871 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944516121 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715539253 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972702795 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746686238 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763121411 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.71355481 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.845793052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.712111494 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.549661505 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.285366972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71866132 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.711508847 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.264327071 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.710703859 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863259978 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.93983185 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735938393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786476925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383084185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710803135 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800583272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736952835 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104001623 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.71191146 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965247961 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.715197108 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.711667173 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.713607695 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.001479627 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950940894 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713836312 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712217043 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.620038402 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.710748986 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712184668 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896751532 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.078607323 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715826915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916917651 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.714095328 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841490388 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.715643228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794029087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.050113778 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711932628 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.712042832 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.713041091 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.713647782 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.713201495 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923512631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.741099132 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.209452628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.854156165 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988712038 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.026812091 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957210459 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758436671 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714380477 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.970707278 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.716599902 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.779058339 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.715738883 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.735886773 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942780132 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715977323 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92631078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988559668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.724714407 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764261275 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.717090455 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712493817 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.713433557 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.859818159 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799652226 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716454311 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.714032697 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.830603482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837999692 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927108888 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.714429783 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.781802736 seconds)
  done (took 868.485521729 seconds)
done (took 1170.517250619 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.714761649 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.717619511 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.706306683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.719817746 seconds)
  done (took 28.501144763 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.725770298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.723547126 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.727161732 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.723125601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.725230368 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.723305337 seconds)
  done (took 11.99371193 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.740903516 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.717411074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721027223 seconds)
  done (took 20.826502736 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.790864478 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.107303721 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.827205708 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.143313697 seconds)
  done (took 9.514927661 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726060194 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.726793709 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.725520596 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.726793812 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.72679329 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.72752891 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.726495992 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.72763915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.727342526 seconds)
  done (took 17.188902129 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.721565421 seconds)
done (took 93.390213001 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.877960878 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.753433931 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.401202252 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.743231619 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.796295776 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.728973962 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.746050156 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.728591723 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.869364376 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.059154574 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.073919608 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.043222917 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.76235835 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.728782122 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.900742364 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.090905336 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.754420162 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.137753452 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.748826296 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.729991423 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.823120403 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.519244703 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.048954317 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.922305766 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.877206451 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.755347029 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.67136178 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.75249182 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.59067789 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.829949949 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.277620898 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.910158635 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.291642915 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.238440254 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.029364563 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.760420487 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.829059172 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.843188965 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.657774417 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.764104412 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.827670478 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.882908237 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.822390697 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903874135 seconds)
    (45/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.888420345 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.718031597 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.925969944 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.843000465 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.100502618 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.853707773 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.230787706 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.128499283 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.720349494 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.464843127 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.752049896 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.952181043 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.005467413 seconds)
    (58/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.815902051 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 5.481489378 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.35207177 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.059117878 seconds)
    (62/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.050458518 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.971647368 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.138189122 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.435761687 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.737388014 seconds)
    (67/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.142424011 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.829383276 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.992403587 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.117539669 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.311644496 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.871514036 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.894012938 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.758601866 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.631046372 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.744564872 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.84656895 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.023593047 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.689758798 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.9788855 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740414037 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.752920994 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.873839447 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.869748718 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 6.733722695 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.737345415 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.89243999 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.247990508 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.053466449 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.74134759 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.911972323 seconds)
    (92/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.734430418 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.840963423 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.769410011 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737352771 seconds)
    (96/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.350339414 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.410569063 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.928991224 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.624342036 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.872512995 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.975381244 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.663572743 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.937452782 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.015358512 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.140855029 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.742465874 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.75688558 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.079346478 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.976605927 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.742057475 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.757023522 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.086356507 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.866502997 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.760323675 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.721783816 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.223652913 seconds)
    (117/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.866671232 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.727688134 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.852716233 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.742933734 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.726721956 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.95109968 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.016802204 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.739597479 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.86869985 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.969962018 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.739302871 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.982842724 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.729409837 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.729404746 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.879318524 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.055271385 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.772271934 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.771916198 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.092924002 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.765841995 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.766500782 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.722682369 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.069528895 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.868691421 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.139557952 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.737730703 seconds)
    (143/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.837617887 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.806088736 seconds)
    (145/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.848184292 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.003248224 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.840995359 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.835383828 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.615553861 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.0294653 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.072935621 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.827640925 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.760205601 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.909817263 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.743378806 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.305904222 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.749160809 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.770611415 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.738718613 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.962479794 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.754665289 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.067687227 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.726826946 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.409152759 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.936893703 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.835376174 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.022657974 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.056695296 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973490436 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.369420804 seconds)
    (171/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.934066536 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.043519057 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.989899115 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742267587 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.898349286 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.740527776 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.769423951 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.838921313 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946060842 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.745973786 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.737355293 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.741513904 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.613517903 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.872505644 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.142127088 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.742474124 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.906517219 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 4.642583322 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.813276803 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.986910232 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.763859252 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.723883817 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.687401671 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.085723674 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.823918943 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.97870789 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.865185607 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.843028892 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.031791415 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.153385658 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.763325492 seconds)
    (202/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.819255484 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.744729555 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.927915202 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.733024305 seconds)
    (206/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.87551268 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.821180502 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.871753482 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.801433594 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031788865 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.83703607 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.809623976 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.239534519 seconds)
    (214/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.809806989 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.7451819 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.15650683 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.002222712 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.740837856 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.361905263 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.16988155 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.91004013 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.728917029 seconds)
    (223/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.29264447 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.602505108 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.944496953 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.421508389 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862142579 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.739648876 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.012220813 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.771522702 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.726239344 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.016082113 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.975646796 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.065146976 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.269458784 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.776274293 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.001731232 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.070865249 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.130874074 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.743208079 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.533452241 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.222149279 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.947847477 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.741395518 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.948787104 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.811494246 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.018349725 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.076698449 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.978840583 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.694746644 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.0652517 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.316835053 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.922731571 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.863811239 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147086171 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.883282334 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.727963471 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.959399693 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.639201455 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.967418621 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.846346847 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.881872992 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.978301286 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.7705882 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.833268563 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.927516772 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.772044505 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.846162026 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.088605122 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.897624507 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.082750836 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.765801289 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.756807355 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.115146529 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.541639768 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.554873195 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.747786433 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.064781215 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.760625065 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.371236823 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.86363131 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.85481829 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.855852011 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.440379937 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.65282799 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.937877502 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.191041196 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.894409881 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.510244001 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.806289327 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.879305522 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.814274165 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 5.497925745 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.749308422 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.967937695 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.775325261 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.930808081 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.736104217 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.163204019 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.135193571 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.748601376 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.264420977 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122265762 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.23363505 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.930186591 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.989455716 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.732992425 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.129158188 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.887397627 seconds)
  done (took 967.904035082 seconds)
done (took 969.841231764 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.778419235 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770264255 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.75317399 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.776249095 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.867802123 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783311761 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.764111018 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.755697465 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.801602668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.803927061 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.750876286 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.781375061 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.756744198 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.757214647 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.753770802 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768498916 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.069904117 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.789922843 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.77145776 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.763488234 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.771583013 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.752018652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.80406341 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.781975968 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.757819409 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.756633252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.757938259 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.773220855 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.86691974 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.758650221 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.759579912 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.765622661 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.069315893 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.787812972 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.7517149 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.77407252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.767754785 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.764257106 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.759296031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.786548014 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.152819154 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.797415592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75693579 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.756081075 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.755442834 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.75955119 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.757877417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.765673252 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769180996 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770204934 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.144842807 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.816573168 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.758288568 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.756844597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.766875154 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.757020865 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.75897271 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771236664 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.775297525 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.771910394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.052695577 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.794675034 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.759428872 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.777066146 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.766864639 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.181463762 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.796437376 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.761965102 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.154686235 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.805266638 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.181828087 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.810350722 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.7585728 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.771605881 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.78915695 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.069325143 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.786171056 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.755543534 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.766218399 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.758468291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.769798117 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770633162 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.762116136 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.758100504 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.771181396 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.785892076 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.768181762 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.758399711 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.766603607 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.779105429 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.765162189 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.769343046 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.761716465 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.754486713 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.769240673 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.762553537 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.762866717 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.762694576 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.764416968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.769232949 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.153159296 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816690655 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.755939135 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.755414148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.757567282 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.772656916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.153296965 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.802737078 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.779467357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.806699491 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.759777391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.052386627 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.795478408 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.779114183 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.768351673 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.762201176 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.755244639 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.056221922 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.183123468 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817117734 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.761501048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.756703503 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.776160877 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.760592531 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.756064449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.072975182 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.794162814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.773593698 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.882686193 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.772135258 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.791158675 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.757621329 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.763669869 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.792524895 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.776794644 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.792212581 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.762661134 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775862106 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.778745243 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.757455456 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.771036556 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.770757324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.76231528 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.769434188 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.754950465 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.792390467 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.776166428 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.773636032 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.781426651 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.88210596 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.759025738 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.055104996 seconds)
done (took 276.802094981 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.831526134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.754958144 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.855186411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.75697046 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.840115202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.84313948 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.759241243 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.754425727 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.755289761 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.128108796 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.756317929 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.755634985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.759129109 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.754356835 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.840000948 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.756975625 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.755180219 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.092701104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.761038516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.828814465 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.75636018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.757168156 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.758112934 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.130305995 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.759616026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.75149558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.829413111 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.757895041 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.096291856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.760009653 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.754161052 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.095088045 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.851491087 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.776930241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.768040825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.765692154 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840172249 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.764295471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.839002424 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.845854503 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.857215216 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.799729136 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.759795562 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.759116463 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.761856103 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.760559453 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.755389704 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.787345376 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.756458624 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.757613585 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.134325748 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.769747839 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.757806799 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.757284802 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.756853854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.790801285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.756916297 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.7643824 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.849345754 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.760406661 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.821370004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.13047015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.131859481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.760985132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.759983263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.757406614 seconds)
  done (took 176.889317044 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.82520481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.837934471 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.824834283 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.764046407 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.809533233 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.827463964 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.765660458 seconds)
  done (took 14.332847713 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.765615769 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.761440007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.811229008 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812927018 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.761273092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.914461399 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.761277385 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.771279968 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758616436 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.786326187 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.760959051 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.760629437 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.768449897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.756335623 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.80985267 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.772512763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.877215828 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.762839444 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.762417281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.911059627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75975217 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.768180979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.785271694 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.771112115 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.761731948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.766852829 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.33260523 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.762831887 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759187292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.761292456 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758788702 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.804417411 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.76128203 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.757005926 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759849467 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875846215 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.761922311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.758977741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.761251208 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.759457502 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.761132744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.7616124 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.76297064 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.760987025 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.762580802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.785724953 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.762165109 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.761877881 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.761922269 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.762109079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.786380465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.762443483 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.759540129 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760507786 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.804902913 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770299393 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.763167039 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.759496748 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.763728736 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760089946 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.914437702 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813580748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.763318914 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.812261344 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.763564683 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764410937 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.761592778 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.762143753 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859108296 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.762693127 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.813169399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.760805621 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.922849863 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.785112761 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.763847956 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.766245654 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.765657758 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.763731143 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.7600286 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.770822338 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.760471146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.764937369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.769818529 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762335123 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760919966 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877134025 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901583715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.762675026 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.776578967 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.770853409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.76181443 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.807633679 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.765719926 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.762849773 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819972654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880017149 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.791231141 seconds)
  done (took 195.196136889 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769575608 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.772179006 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.764613828 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.783288005 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.764435372 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.763760247 seconds)
  done (took 12.301129611 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.76780238 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.766506664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.765785919 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.764913633 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.767221834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.765786539 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.764515401 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765660185 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.769324507 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.763802985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.76549268 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.765294705 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.765960041 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.765094039 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.766120883 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.76487472 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.766841655 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.76265278 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.765613167 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766423979 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.922008566 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.768118854 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765810773 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.766850202 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.771143982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.764972638 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774073661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.765763276 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765811055 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.774652524 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.770924084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.767067253 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.766441024 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.771483556 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.770972318 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.766721144 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770690332 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766628445 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.764452059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.767275139 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.767160325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.768571392 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.765365334 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.766767301 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.767775668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.770818099 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.770696828 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.776456256 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.767254158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.76745298 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.767978727 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.765722024 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.768454319 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.76767182 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.768350052 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774779542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.771615005 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.766178137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.767654347 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.767465478 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.767756288 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.767486257 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768075742 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.771336387 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.764961184 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.768076843 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.768644764 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.771620178 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767078685 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.768059729 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.769518362 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.764989657 seconds)
  done (took 130.115940845 seconds)
done (took 530.531726583 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.947897481 seconds)
  done (took 8.634137969 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.79211707 seconds)
  done (took 8.523524348 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.231109418 seconds)
  done (took 9.924305151 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.782237235 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.817079177 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.778373186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.769133983 seconds)
  done (took 28.862774853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.858985951 seconds)
  done (took 8.549647309 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.790400181 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.765696715 seconds)
  done (took 15.285830727 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.928061719 seconds)
  done (took 8.619593991 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.826477938 seconds)
  done (took 8.529254632 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.780196118 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.797273474 seconds)
  done (took 15.28274592 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.754011238 seconds)
  done (took 8.443170651 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.404502213 seconds)
  done (took 11.196041583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.789577677 seconds)
  done (took 8.5885658 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.823659953 seconds)
  done (took 8.514437792 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.806578749 seconds)
  done (took 8.496275714 seconds)
done (took 159.139958404 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770196229 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.768955126 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.77229019 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.766565373 seconds)
  done (took 28.768584023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.824008201 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.804913305 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.807962736 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.814618145 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.809355403 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.804508277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.797670183 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.797527057 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.816708569 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.808179099 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.810128199 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.808893887 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.805280103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.799733648 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.807940984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.807905238 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.816737527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.80739745 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.79934826 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.812047484 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.773806147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.817350307 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.808954512 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.776426802 seconds)
  done (took 45.027590152 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.969087241 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.843691889 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.928608188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.823866026 seconds)
  done (took 9.257970855 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.824843617 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.82634986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.838020024 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.876948314 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.90907636 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.836411122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.799225018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.795255232 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.781164723 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.825531699 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.902393588 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.822941268 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.910981861 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.775816389 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.979385584 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.771643615 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.77429757 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.825739283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.875781499 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.893810893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.773984461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.825163068 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.829500193 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.820957858 seconds)
  done (took 45.786683105 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.771386673 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.781810466 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.779864065 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.774311801 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.775093167 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.776647665 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.780454171 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.774849869 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.793531202 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.774578357 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.77197862 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.772903972 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.773708076 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.774612962 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.774942143 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.786550122 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.788091196 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.774820424 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.779147405 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.781584947 seconds)
  done (took 37.255297248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.768857635 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.622896451 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.119750816 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.025161003 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.768880324 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.772463895 seconds)
  done (took 30.772164062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.790279571 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.783312551 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.772927972 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.832897957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.916576197 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.781740092 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.774081548 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.786277574 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.822309556 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843429019 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.794287277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.804106852 seconds)
  done (took 23.396171075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.77051216 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.779366751 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.772595545 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.793689997 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.785533437 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.780566718 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.780026099 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.766879806 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.78746368 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.794181539 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.781941969 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.786521277 seconds)
  done (took 43.077999945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859516725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657764497 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41500707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499667209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305742843 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980950193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298682352 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937590289 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.773628526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042038322 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396368627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010560103 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021532739 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770832663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842826889 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.250945557 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071366059 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005447854 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802365723 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51886865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897004622 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269901825 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.596181264 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905336096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979331197 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.901649925 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.033385416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.731530311 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909369757 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808941473 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781816353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771238791 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04450139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989561944 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860001793 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786702805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427609427 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.491601544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.762694533 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.526078248 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.504760094 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915230824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779654044 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7717271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704040211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267722911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946527459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.77660548 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.474124839 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771819047 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78122618 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858165132 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.775737836 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.585458385 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724798875 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048912268 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.770390203 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778163742 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323532995 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884162798 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397256929 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.713550235 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.866435291 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531254982 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259223564 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.932700808 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.776927075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776899657 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70734054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.486718237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905063507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917468621 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.791581256 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420896847 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073425833 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.469749263 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865486121 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073544862 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.557932936 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.713862423 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001769384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730308848 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706318129 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.612321163 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710064889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058350776 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816289637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.431614303 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81990294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93966588 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784311333 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793659901 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78100995 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995825377 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.660235907 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774928678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.354517343 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06860738 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79652913 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941993054 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707501713 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.779036494 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028829958 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.985595284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.997844824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.264855734 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945934344 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776082945 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.867916879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.682201894 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792394687 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.057943061 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843716041 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888304074 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913475161 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.732529466 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091154312 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809799141 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.953781907 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.413714265 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052719636 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.116705303 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033766513 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859364828 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782671465 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77853735 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.556014662 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409023015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00083452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781742793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.257892696 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791639128 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.779019795 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710172055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.4374225 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427828365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.900422368 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998571138 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.723588838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05704182 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711457794 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922600793 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.767009129 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.998532626 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.4404708 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.867124725 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037661224 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249304468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.997659356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792669377 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796146015 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859046343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800220917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.189209198 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038042814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.782073286 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.784318991 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.548681651 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.860753016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784687583 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.783521659 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579767623 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066515356 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814873123 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778198776 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668255143 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.793934546 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863439575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785350837 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786466872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.306050281 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.533752198 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.791628705 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.446935331 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011473088 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789263762 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.544108307 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971587327 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.863472496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061654386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851684686 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.713826256 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.483941545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.484267001 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783380865 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714280706 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.77913386 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786731853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789962401 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.973606334 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065739593 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837101889 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.564253686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.905021028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790940908 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.783393363 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780418536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.302613592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91057265 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394120066 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.793249019 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919083189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.792853383 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712001955 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.782987691 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784955079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781380009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.735560571 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833949459 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.543295302 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119851839 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04260631 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.431198107 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797275048 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.52814789 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.919811381 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.803364771 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.363522358 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848184686 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.796283797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852520972 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.791619208 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.501936165 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571573672 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334454984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092082239 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112952772 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239456358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.13867732 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122025103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948144702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0156959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309726018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844339836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95461453 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724682718 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87291279 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.446177998 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146252851 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800130531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014999864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174507082 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.4370183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956180161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992191666 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816124841 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.572924493 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811755824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.309923027 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943710986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.417255741 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017748817 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950175583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380069057 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.897751939 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.784741513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256319726 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872622769 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.49410674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142597499 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295382112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.455910075 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165418463 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.793241344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.230724428 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148453011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.092493219 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88183446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718218788 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79346888 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796416094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.785035289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.760411613 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.699043164 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.067421045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795627056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01748402 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.0396984 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063763574 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.697994088 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.790319755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785384189 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098759784 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516624271 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022834128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.103995594 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360583685 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792338305 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71704432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717750769 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.492553613 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.793425633 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758828326 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016760165 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.900203985 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737809859 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.15611138 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09450037 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039612285 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.800789494 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068299761 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068704962 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521801164 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817818292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.888252883 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.370878442 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.52683473 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010625204 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020691072 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589275883 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01463867 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442754931 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.77122758 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.786333612 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003225354 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009806581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.441201313 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052611085 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.515036784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.80585651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152526404 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857172945 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.44604469 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016484237 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.881373849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799376353 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871356172 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798077577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.798992236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79912721 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83305424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.431040976 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938976341 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.801902521 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879440552 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91072108 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.383574446 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.797434917 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07499632 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159809205 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138333363 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860433256 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789601095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791836456 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724192578 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926370491 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.235464635 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06304774 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.918425549 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.928721247 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814912955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.385923758 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.051396913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099571219 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065633273 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.682857836 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791737091 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.879899906 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.012656102 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800145482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.000881072 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028061108 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124509373 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26623867 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.887318518 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058408862 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062748769 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162425154 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.791551962 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380384023 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.799711162 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.319473275 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.838631542 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.448990054 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089494799 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800714424 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013095937 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81507934 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.010856917 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.243398511 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564780396 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161635868 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.792482743 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.855000395 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077092357 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204286959 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115052949 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87518265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801747846 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490829069 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931943554 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.737641974 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.058929085 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.795262545 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001159039 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.504395481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800743626 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079394889 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111270662 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.794568584 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774653418 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851791641 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.801642447 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015555655 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07878342 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049526043 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800816699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.801936832 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.605212793 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078924335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85770916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725462754 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.796412933 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888044334 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040020611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81109332 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30780559 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.495614518 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108714253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.717262937 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81441297 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173894072 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243542027 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139232587 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.325014376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031973215 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.364811302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.62612132 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167451248 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.798102231 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.164760962 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166131895 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.796656978 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.272699948 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900100801 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076373814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1220853 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.812448888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582885182 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.843150518 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013496068 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39304711 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732862715 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794252438 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.856526037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.792714603 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.802619137 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804255726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.796605223 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650166471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.627001959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283670464 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.796888871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.80869857 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.359980551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329830155 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896382166 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952878683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801068308 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.502427721 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.086229154 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049124609 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.270929027 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.864515437 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.797307615 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793567368 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718983311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994301578 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.986260265 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09987287 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.110323153 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.899819348 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7976737 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.007450621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004466976 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.391480495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960790906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.158568447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902565592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.723569934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.506342478 seconds)
  done (took 1637.007697286 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.797921249 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.817070239 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.80105787 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.846456688 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81344238 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.815679515 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.82531258 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801192952 seconds)
  done (took 56.236758818 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.794880108 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.974592734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.802861111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.795956116 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.819368072 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.795754257 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.987492373 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.808385716 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.812979435 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.805751808 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.796581644 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812060802 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.542892786 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.825385296 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.797245864 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.810897828 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.81444059 seconds)
  done (took 73.525625519 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.800240789 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.16176559 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.837412314 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.810024911 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.697865467 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.799396836 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.845385432 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.811445627 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.800582691 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.91374267 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.4187073 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.809137053 seconds)
  done (took 89.427756643 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.815654537 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.804052935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.804615132 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.804304232 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.804198197 seconds)
  done (took 10.762436503 seconds)
done (took 2132.015077515 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.031703985 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.99044498 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.024744721 seconds)
  done (took 5.737759144 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.945383556 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.993757879 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.112643762 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.119356624 seconds)
  done (took 9.898094059 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.082454179 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.192646799 seconds)
  done (took 5.997217169 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.128866207 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.820878479 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.219743001 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.799378769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.802760129 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.801570963 seconds)
  done (took 22.130529551 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.80278621 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.80546935 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.80270677 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.805338711 seconds)
  done (took 8.939609899 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.785396195 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.494935805 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.785369345 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.799321914 seconds)
  done (took 20.588181364 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.953559361 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.919241167 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.946703938 seconds)
  done (took 7.54234725 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.294438374 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.013396692 seconds)
  done (took 9.030692312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.962937275 seconds)
  done (took 3.685996196 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.83049965 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.07340709 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.292859811 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.325141064 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.388251078 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.63265597 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.143280108 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.034644336 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.247983157 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.274084249 seconds)
  done (took 23.966206376 seconds)
done (took 132.441838982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.152041997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.83173611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004185098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.161869367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044029316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.006172123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.022223566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.153165479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.844616133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.832935279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.164356785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.036009746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968056015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.818578692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973853111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820411138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.032689135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.16930312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.84670173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.082728385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.031657706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.809547798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.999606152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.825866906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.037970539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957423138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.353931232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825268462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.984249809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.367264843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961879012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.225912474 seconds)
  done (took 166.07132724 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.802574305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802213792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.802207064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80151503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.354040563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.803943398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.802580971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.801375511 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.292999345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.286348045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.80302924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.342878972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.802093047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.805289384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803210599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802262002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.436641053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.802649748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.803012365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.801780999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80221619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192446971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802569092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.206591284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.434178048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.804289973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.803214634 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.803178226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.802362257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.801956841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.804267759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.802501268 seconds)
  done (took 207.540186887 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.71398125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.804671671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.80560581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803421702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.805683383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.805617737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807135015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.803146485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.427798271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410587618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.805193873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.804875167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.805933776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.803260664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803938794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.805470929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.802879037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.763817764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.805808525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.809709568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815963975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.59434581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.816955488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.575228728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.808893049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811554672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.805427356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.811068544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811705413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.812893331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.814546485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.803339291 seconds)
  done (took 218.207079594 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057128222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.811548533 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.809439048 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.718022956 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.809673829 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.808697841 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.80154723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056971943 seconds)
  done (took 18.613682649 seconds)
done (took 612.167438116 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.286979977 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.133913658 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.999448921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.83494025 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.071649822 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.872098824 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.830080356 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.895519371 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.465854206 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.902107624 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.489259308 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.854601142 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.577774636 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.861206695 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.959199278 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.889487136 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.37253589 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469586926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.006970534 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886314889 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.010766199 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.771917591 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.911424029 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.484338064 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.591127475 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.827710532 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.931100757 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384148626 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.843325582 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.992479247 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.573030173 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.165886685 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.849213735 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.829175509 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.881883077 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.864505126 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.146748626 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.847014061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.95839192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.567864774 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.8979903 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.369270007 seconds)
  done (took 100.090536624 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.801074462 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.800460555 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.798171559 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.800255234 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.79923625 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800491477 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.799865291 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.799481926 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.800070703 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.799974952 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.800693631 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.799444077 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.80038954 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.800012057 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.798920363 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.799783854 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.800548241 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.801716923 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.799463795 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.799879899 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.800969433 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.798251521 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.812875697 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.799942302 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.801134487 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.801155318 seconds)
  done (took 48.552760876 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.812873047 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.968085976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.052854949 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.834066737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.812455826 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.815484299 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.831840203 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.817958923 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.814530909 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.814317742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.905325763 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.81970193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.831599427 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.048749263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.830588036 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.813530136 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.816049938 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.812894474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.975925123 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830596425 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.8330961 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.81833051 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.833061475 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.82740531 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.815999055 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813795538 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.817023544 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.283872643 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.823984554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905437533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.861239561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.840526109 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.25805008 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.062045243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.872189424 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.824678656 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.814736516 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908585525 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.821201404 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.814736613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.832383571 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.82161265 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.051380478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.319358237 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.831268521 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.816254426 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.294895631 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.919939281 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.856985246 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.827374789 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054533068 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.833545114 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.816173146 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.8156371 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.851174985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.821919348 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.814941975 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.169962174 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.828093154 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.833283843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.820631673 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.815929288 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977444879 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.826075386 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.967805004 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.826038447 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.822581993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.816902083 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.054265747 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.834003432 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.321519855 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.834781291 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.819128557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.911130262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.976368136 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.323063787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.833615709 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982439469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.277873481 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.847362111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.827380128 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.278037094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.849605495 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.827323671 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.822778526 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.822328725 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.82331002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.86532792 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.83765099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.260435513 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.333893226 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.194466765 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.848709013 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.83606397 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.822351299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.176933883 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.830877525 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.821288053 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.050107753 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.33888279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.835692965 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.829149147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.312056144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.838405122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.840175882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.830071633 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.059521471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.838583224 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.865156332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.822560064 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.826704591 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.82381794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.840190116 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.828388279 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.821164269 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.30530501 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.931842421 seconds)
  done (took 226.060592903 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.816890172 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.81743484 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.81316093 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.827176191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.810307419 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.81602208 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.811786454 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.810361693 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.814673121 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.810579681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.809844437 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.808886918 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.810330747 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.814700578 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.832793237 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.816770055 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.414711745 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.811608652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.815169844 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.819365798 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.466244475 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.81899789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.812353929 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.81130245 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.811212405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.811049336 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.81758129 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.812737358 seconds)
  done (took 165.804999723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.815467243 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928497982 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.83429029 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.842184852 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.822737351 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.812042549 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.83682387 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.829684757 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.820300235 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.812309243 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.812835523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.87531306 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.827931814 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.913180375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.846452711 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.847436877 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920484722 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.823811743 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.812376071 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.812445692 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.843263376 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.811164081 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.874872689 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.942605887 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.835909545 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930466882 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.823141108 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.816610083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.813925665 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.93334404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.835420302 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.874674985 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.850346709 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.832042617 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9358988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935380482 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.920463659 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.843957055 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.820133257 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.81677653 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.8129484 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.80259551 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929685353 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.838148025 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.814769592 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918686211 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.835979614 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.815216856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.82818124 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.812478534 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.828575445 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.832659635 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.882544101 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.947044088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.85174865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.840083655 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.839249203 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.102658884 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.824628459 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.915308668 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.807940061 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933216881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.838635141 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.802308739 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.817980005 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.819071669 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.844658626 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.846952782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.92428745 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.820741537 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.913425325 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.849129894 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.820706939 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.815510752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.812950303 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.928243634 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.933815407 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.846381249 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.850461784 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.843471561 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.811091383 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.813817324 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.799949191 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.829412443 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.815294403 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927151425 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.933831678 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.818935623 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.81312215 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.813918384 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.814220619 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.838885105 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937970022 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.851222423 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.907203031 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.878649085 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.890626185 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.830349865 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.825353822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.816543327 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.875709587 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.829572149 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.823497908 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.146914961 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.884739406 seconds)
  done (took 196.748106289 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.306281527 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.869018795 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.870035017 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.121898311 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.178223542 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826819544 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.867756802 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.859791182 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.87963365 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.050813068 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.924373628 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.877566224 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.847136091 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.831282333 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.861118461 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.876067596 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.866317266 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.174620063 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.970366183 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.982435213 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.839117378 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.136589267 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.130857741 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.238704862 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.89420782 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.180803724 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.532841067 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.996381574 seconds)
  done (took 59.731064776 seconds)
done (took 798.718930656 seconds)
SAVING RESULT...
DONE!
