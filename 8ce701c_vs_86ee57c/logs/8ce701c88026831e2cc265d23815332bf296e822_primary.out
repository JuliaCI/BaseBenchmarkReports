cset: moving following pidspec: 26020
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289255563 seconds)
loading group "string"... done (took 0.608982541 seconds)
loading group "linalg"... done (took 7.55411025 seconds)
loading group "parallel"... done (took 0.153729219 seconds)
loading group "find"... done (took 1.19461062 seconds)
loading group "tuple"... done (took 1.779736513 seconds)
loading group "dates"... done (took 1.236628174 seconds)
loading group "micro"... done (took 0.215458476 seconds)
loading group "io"... done (took 0.914220042 seconds)
loading group "scalar"... done (took 36.922817479 seconds)
loading group "sparse"... done (took 11.663361498 seconds)
loading group "broadcast"... done (took 0.94550025 seconds)
loading group "union"... done (took 13.134624621 seconds)
loading group "simd"... done (took 4.676747426 seconds)
loading group "random"... done (took 8.952877151 seconds)
loading group "problem"... done (took 1.655907586 seconds)
loading group "array"... done (took 20.42336069 seconds)
loading group "misc"... done (took 1.613867468 seconds)
loading group "sort"... done (took 3.059208707 seconds)
loading group "collection"... done (took 16.838536168 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528333527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131745175 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137114289 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125713932 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151587591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120591467 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128988743 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089493505 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.864548161 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155998713 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11811569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411425368 seconds)
done (took 5.311224245 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175485951 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086199162 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086841743 seconds)
  done (took 1.20693352 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069542228 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130567096 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074908925 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070942318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070939861 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071412236 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070936201 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070660228 seconds)
  done (took 1.596325922 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076499838 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072797799 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0699889 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071940338 seconds)
  done (took 1.327905982 seconds)
done (took 5.421053324 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775046065 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209874462 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187637906 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393643259 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132231266 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177453046 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638926214 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323008532 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190117506 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080947188 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111011589 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348323647 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127018047 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649457371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078199873 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093206198 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140390361 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433405808 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070945991 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087156755 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09266061 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131940675 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08794234 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077446634 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150581029 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071147561 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137130806 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08363133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069892893 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215180126 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176223392 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667452184 seconds)
  done (took 10.276844248 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10259252 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101651741 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072824694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128469889 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102300965 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074096322 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079612071 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072334777 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096194227 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132523324 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095029785 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109523319 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070391264 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072798183 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086693205 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212086208 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083841105 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085013151 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074029891 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081891324 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111201544 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08147747 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083567768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083793313 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131944659 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184908401 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103845059 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103622837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072847701 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085220944 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118503608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13084511 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070077326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069616779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128327906 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098291083 seconds)
  done (took 4.662770936 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.984049345 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143902198 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091502039 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135081629 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07034144 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114271099 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073661186 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083535041 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209946892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.356371451 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591808873 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132689606 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114445332 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069480546 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106172416 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071515626 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072214677 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070774545 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.473868524 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104779514 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108281395 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082965471 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074175712 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071513977 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067870999 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070050594 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067600234 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071183264 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115763084 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077192422 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.316695884 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126628999 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072826157 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943900865 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168674326 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069398728 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24155031 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169040639 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093504392 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142643885 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072875292 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06981206 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161410597 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06913228 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073774694 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095141038 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070121747 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087949682 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106722146 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123465257 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069552993 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070485947 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170691893 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072238813 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082428856 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0679601 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.164317852 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158420145 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069955999 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292575861 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093769038 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074082547 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069394317 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193813212 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123228369 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071711102 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071352803 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071973031 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072452578 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363291487 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069435584 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.236806714 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071954421 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079729458 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07283918 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072385023 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075800409 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076337751 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091962646 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069287304 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080000086 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06941943 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069799512 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069845925 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067973185 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086809212 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.483503085 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071478431 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071646106 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069498552 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.0945706 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099024113 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070435109 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069251458 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102980953 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071559101 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069859493 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069704178 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086850829 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073727258 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116492954 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069708981 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114499957 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099047003 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072698814 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101554348 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082219638 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071080881 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.435664621 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069372803 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071190008 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069237447 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071663536 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070444806 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083861799 seconds)
  done (took 22.241945545 seconds)
done (took 39.201407014 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239533464 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07373012 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073969176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074297367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074652519 seconds)
  done (took 1.657643671 seconds)
done (took 2.768678315 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122074966 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101375453 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069336058 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102261764 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072910323 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106001826 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105116461 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082428332 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104287147 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069497206 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0998959 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068224526 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068230026 seconds)
  done (took 2.290284208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086748782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089549008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076139889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088334775 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068955009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088552588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087462718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094860303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087486615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077691865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067624549 seconds)
  done (took 2.011706608 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086178818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087350622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073438316 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085348866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070318985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085484407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085749915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089055262 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085441464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077978888 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067641752 seconds)
  done (took 1.989494974 seconds)
done (took 7.385646246 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078919476 seconds)
  done (took 1.166173999 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52781195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.648112176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082637506 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104934125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189549608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111378821 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23591212 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085057079 seconds)
  done (took 8.230407874 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103778577 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075466502 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072296701 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072029453 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072955344 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07328576 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073487141 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074035678 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075702453 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07514544 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074731015 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072152698 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073188294 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074515981 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075555666 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075117898 seconds)
  done (took 2.378202913 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094190249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093398701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077387553 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077968599 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075805826 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075058715 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077796267 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077113471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074509464 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075688281 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078830969 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076584876 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074946963 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067230021 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077245473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079745934 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074264803 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07708073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077628076 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079009207 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078281325 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067673503 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075046686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077530691 seconds)
  done (took 3.041386411 seconds)
done (took 15.913028805 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108712753 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070906084 seconds)
  done (took 1.274770013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082875184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083247359 seconds)
  done (took 1.26980029 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083145595 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068049206 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090192625 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07972994 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068767627 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068417199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088434722 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068809988 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068765273 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068652521 seconds)
  done (took 1.858001789 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070636861 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078531606 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072885407 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082906295 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075944348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06890729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076402781 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072134414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079120133 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066313794 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07380782 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086319078 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073605302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087839222 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074116346 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07133076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073665524 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070276162 seconds)
  done (took 2.458060618 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068644962 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068758353 seconds)
  done (took 1.243013699 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069732446 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06672805 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069679965 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069362235 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066870402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065974848 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06728431 seconds)
  done (took 1.57811721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384028842 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118645394 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304456378 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077336492 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08704252 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256726937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070423143 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076808313 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076176959 seconds)
  done (took 2.592026999 seconds)
done (took 13.384356951 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083675347 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091047857 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098555569 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380673469 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096040533 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07071597 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117072423 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181625807 seconds)
done (took 2.236515763 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21467714 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.764077746 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.480734689 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207117551 seconds)
  done (took 2.560394984 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339854719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091988886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.177354424 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07102691 seconds)
  done (took 1.797684482 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070042425 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072948479 seconds)
  done (took 1.257039923 seconds)
done (took 6.945757695 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070141321 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089273484 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06958292 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067854042 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070359664 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067829723 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068102326 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070374477 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069673728 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069986099 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069566744 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069663735 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067694255 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067466245 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069378232 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067557823 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06765019 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067845831 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069288599 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06834639 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069405339 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071571907 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069586477 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06964419 seconds)
  done (took 2.820023556 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085760525 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070125618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07345726 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073392488 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071522516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073936212 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074191536 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069806726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076896209 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073661679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073164315 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072360993 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072269687 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072343208 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072376822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071876954 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074305044 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069833798 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072665713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071969207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073645478 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069811758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071801505 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073873451 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071791 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071944255 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071910391 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06996118 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074415555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072163091 seconds)
  done (took 3.311275897 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073269605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065891501 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066942714 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074315508 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066990007 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066971106 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065731105 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066336978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067366636 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066562114 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067491827 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066426832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066497224 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067523503 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066706617 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070802558 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083338824 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066679475 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066998992 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069184811 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075315939 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068333025 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068686048 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068329263 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06865859 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06799559 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068967413 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068607537 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069123175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068625278 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072115896 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072368489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068248846 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07617529 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072709207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06843072 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073223141 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068005929 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068833827 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068671012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068411428 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068799561 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068581468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076382126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068833393 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069658907 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06822146 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069963595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068564641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070412044 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06820728 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068167217 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070405806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070105973 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07327565 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068753552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069280444 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06784409 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069357529 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0685834 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067723167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068241343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072146722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069373882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085469542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07700161 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067973652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068572232 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06717963 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069774594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069217466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084103335 seconds)
  done (took 6.156340198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090203264 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089906908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069638326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069082168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064761421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067229677 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072905918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067464154 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069085879 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086800844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067750259 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071055855 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07140868 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073247569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069405009 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07143447 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078095056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067049567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068781575 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07343074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069495705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075194503 seconds)
  done (took 2.743869385 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150870595 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073178122 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107789155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077697832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075175465 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080288382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075322143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075477558 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075642977 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073615706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072386531 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073510826 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073482097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071713126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071658488 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071533729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073324013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071378642 seconds)
  done (took 2.57459241 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08033008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070135301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091335669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069587244 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070080367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07216293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0740412 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077429176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071833112 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070084357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077423662 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072432743 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0720812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070262331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072294158 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07015178 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072174023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070089954 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077996771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073860119 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074046894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077601543 seconds)
  done (took 2.758807674 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083909179 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071768615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085363965 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071200644 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065212849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069520303 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075267184 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071502585 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075828343 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073439525 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071525524 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069376607 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07429416 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071580989 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074161112 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071825142 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07380794 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071419958 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073467421 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066694998 seconds)
  done (took 2.594695098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087019099 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070470192 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070328862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077547871 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070824101 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070778627 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076888398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070299199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070478595 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091169204 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070646727 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070920878 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076779919 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077855794 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070363861 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077116178 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077051796 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077297115 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070685231 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071092996 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091149143 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07055681 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076928384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07038713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071049784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070655959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070756048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074747518 seconds)
  done (took 3.228277574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070484515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070067785 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067077363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067388728 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067172248 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067771225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067715855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067679091 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069894863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068144829 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070199789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069574808 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070149585 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069652694 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069653125 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069932138 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069773722 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067480838 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067602668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067788606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069989497 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069651558 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07005417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068049556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067690461 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069753031 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067328269 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067418859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069681302 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067957016 seconds)
  done (took 3.202361238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077892036 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076597426 seconds)
  done (took 1.295482797 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065556898 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084361005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066991546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075297879 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072812019 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070693191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076174786 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073083622 seconds)
  done (took 1.721106325 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084714229 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078782536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069585784 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078569641 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07781565 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086198821 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126083966 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069570382 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076353666 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068341935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082478398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069321849 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076324841 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07025591 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07619708 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076798854 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067468789 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073861327 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070596973 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067224875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070427316 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078569841 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073867466 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065399525 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07157132 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092505392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080348014 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068665288 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073454279 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077012789 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076473312 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065870189 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071123751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07150709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069352479 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080160756 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086585977 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074856212 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079852017 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070115837 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077523466 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065233357 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074239376 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076563433 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081169699 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069524134 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070056486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065667564 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069732096 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074514231 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065789501 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071004694 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064396838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077041787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074079909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080194718 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0681175 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071597323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073344087 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073284956 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077356746 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073535256 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074960986 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071173567 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083010074 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077307017 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080007848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066940853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066094501 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069861395 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081801801 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095479811 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078155698 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071523289 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071953182 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068945456 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075245428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070520115 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075296562 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076661072 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068744354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073696217 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076539746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070543406 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072169794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074768959 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066728752 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070348223 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067234547 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084246415 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0696305 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0664738 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067536099 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07870472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073040267 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067831137 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067353731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076412889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063061716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068245055 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068427664 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070359863 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078851267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073641834 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074161102 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079260009 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076749063 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070974698 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073304533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067262205 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195922343 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071058851 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079728675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065760111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076408581 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07398583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069888953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0794662 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070139412 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071159917 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080651997 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078418167 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070335583 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068724679 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075761381 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071113508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072480409 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080429168 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070886601 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066224729 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067037009 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075325214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070911601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075395882 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074458244 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074235416 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064976233 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067379235 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073275839 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077762612 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070315885 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071420759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07613005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071788069 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070619464 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078081359 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073888919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071237328 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076928133 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07301961 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066141269 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073349255 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07445732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068059714 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074189871 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071947816 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071867312 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06984696 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067450202 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075176438 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069346945 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070065319 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071425813 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069392733 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082536633 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074437287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066354875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067207997 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076083638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068907092 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068366193 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069414341 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072209625 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069592503 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067800647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068931857 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071974699 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076825543 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072033205 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06983476 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075153451 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082368309 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068567105 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072641839 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070212037 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072092431 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071258563 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080572053 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077845864 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074622224 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074588516 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067968982 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076581397 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079954392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071262101 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068748593 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071374912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07429058 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077264419 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074376874 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07069767 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068703701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072048238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07278322 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073762391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069722209 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07046626 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074954582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068342451 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075696775 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070376619 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081400884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074408485 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065581396 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072183167 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068833571 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077775255 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065851151 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069613124 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070669587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070507601 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069185177 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073178743 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062702052 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204328035 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079890616 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072890329 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070676262 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069773431 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078081583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072509473 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073799355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075564032 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076408708 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080617434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069671434 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076873293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080808919 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069962685 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064377258 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075905209 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067991258 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068209481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068501124 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067647775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073849316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076148905 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075572755 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064133266 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072415318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067530976 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070099992 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065055594 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074473071 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073491267 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071220175 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077287909 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070056925 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068829431 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074025209 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069366049 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071094672 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071804499 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074866724 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071177184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074070834 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072049567 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075135729 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070598491 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068730341 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074015581 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070893299 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071834069 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076729004 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070550659 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071377241 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07239161 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069751225 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072493375 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072771874 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071573425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075373499 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073510777 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072044929 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073148251 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065416166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077963334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068867513 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078549828 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071056698 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066615194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075135901 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073103776 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074055551 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069665941 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069815869 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071540232 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068631712 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072799983 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077503433 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068653811 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080425425 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076472237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072317441 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074374194 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072170537 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073467148 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07106925 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073751968 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071502493 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072442541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070945411 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075783997 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072203111 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07040457 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072554233 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069996186 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072018115 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071649686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065703514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070988786 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071238144 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070283001 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07970916 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070607294 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071514488 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069723575 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070700626 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069355277 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067448401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076577955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077344125 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070327871 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077146786 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070408628 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073053853 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08104536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064870952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068885814 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.199481474 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070710701 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079380925 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070679562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08099037 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072207645 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071316544 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067631478 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070842517 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068244816 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064908685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067798809 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073840598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069922259 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069052726 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070470304 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073024754 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069838219 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07879233 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06863954 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071075705 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069666113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06664641 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070034947 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069874574 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072931458 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069294446 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069029816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066824046 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069180286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072849029 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073118608 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07194748 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073420696 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079388432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070758331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074827206 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073092147 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066200251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075115585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070764399 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071188632 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070962312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078427994 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075629973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071720282 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07966217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068480583 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071124128 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070194534 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067266835 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068619531 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068958983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06884973 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069710361 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071147101 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080850536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069575157 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075595267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072450774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073202249 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078398917 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072318556 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074123817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075707359 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071100489 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072600282 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080512047 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075532408 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075375663 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072601665 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07371184 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078234717 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071561347 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078915099 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072871483 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072082784 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.074018877 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070694693 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071045076 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071137868 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070066929 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077974709 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071375146 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071475483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071177106 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068985873 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071258323 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07153874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078231659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072264634 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073213267 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064766049 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066984674 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069451605 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068412657 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072296418 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072274936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075507713 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0721482 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06978861 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067278198 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077871798 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075301716 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072996057 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067806603 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073139636 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068655097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071267904 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071029938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069620973 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069042742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072380941 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070877684 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068464979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074637453 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072134128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199115523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073880042 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074884661 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076014709 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068490032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07287496 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076091056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078037746 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075777717 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07236094 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0838004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070691536 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07323254 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073758784 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070816535 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07702684 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.067103094 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074000402 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071809583 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072168915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066630839 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071806813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07065765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07239074 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07033082 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064915721 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080297447 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079678266 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073297155 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068177378 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068791796 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065517811 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064912033 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069436263 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070161698 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071841961 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079956528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069841384 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07142092 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066653799 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071723401 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075101357 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075500882 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068749555 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066757545 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071769584 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075180328 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078018855 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06973167 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070569291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075557125 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073969984 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069744319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073344733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068720411 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075442724 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084674515 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070703209 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072919249 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07720224 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07856889 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069768466 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065346029 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069592143 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073630693 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071374064 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070393294 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070667937 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085089386 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073722188 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069990501 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068861038 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075699424 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069899035 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078414355 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0699662 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070048595 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074967418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072029733 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077825816 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075288898 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079498962 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07517414 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075118156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07052936 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073091233 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069339346 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071529308 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072109474 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071868688 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075354298 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077779746 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07155853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081191477 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078746189 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071697986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066550689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06938373 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06941039 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064510132 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069515113 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066899327 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067104008 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067144809 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067592031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070626147 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074012542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070691447 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068910731 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069588788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064869147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074066891 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07307549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07217716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066432298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068234965 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.199664558 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076878537 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073264688 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069795998 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073259618 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07412009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072635802 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065903997 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07766343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069020652 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07277875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070168739 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069789503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070168769 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073720404 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073018146 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070741567 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072897677 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073979574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071869334 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067244006 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067528886 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076340468 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067599912 seconds)
  done (took 45.036197639 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103696875 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066265646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064877388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065327867 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075998214 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066458839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06520207 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066375421 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066767894 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06864514 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065575207 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065407512 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073095761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080071205 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075764097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069718374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065821291 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066509094 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065763433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066365246 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073465103 seconds)
  done (took 2.707574274 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076667671 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08052075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077890906 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08485703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074351667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073412352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077994307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073061795 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081098327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075359267 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08109636 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072656004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076005662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07546474 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0754797 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07330649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081153723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075982029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0735891 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078968138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075181954 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080564148 seconds)
  done (took 2.916768552 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068871633 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068301351 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071634363 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064561524 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06846301 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064441653 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.079085185 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066506913 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071619608 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068605398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069095102 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069179107 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071215605 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065015939 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069839526 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06720144 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109673622 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071691494 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068876537 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069756957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064765542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071179787 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065150583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065417152 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069249285 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07176272 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069548481 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067293444 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068647609 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069716101 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069034125 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067576761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072550598 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070449725 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069127998 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069330338 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071876176 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06867101 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065138199 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067619104 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07114851 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065554537 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069436683 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071015998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067512995 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067261333 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071777861 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068793399 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065245841 seconds)
  done (took 4.640205078 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080596546 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110277465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071282395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090211283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082018142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075032746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073970773 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091931042 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066781348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067620355 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083801783 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081628973 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068922365 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072670399 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075399395 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068323387 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069347068 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067952114 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072084733 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068372268 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07196153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075495542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082292138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080514105 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072722988 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067993161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068286002 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073435651 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079996638 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072402329 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073097529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073567602 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083327383 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07340715 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068312702 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071487942 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086183092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.071190151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073257794 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067995971 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071157271 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074709926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077906686 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084164096 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069511668 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073935279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070682903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068876786 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083122444 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073117211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077765207 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083360715 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072613069 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068666699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072973712 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083166829 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068945243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067524857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071025806 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079560968 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066953108 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072469811 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081280183 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070485515 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075269913 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081083644 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073643066 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072410677 seconds)
  done (took 6.454668863 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078834034 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098981084 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084606389 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085111604 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078544657 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079445884 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079096097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078733865 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087337289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082943749 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07932253 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118467761 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074989548 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080895153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078662617 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078949996 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079034398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079181595 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079400295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078403637 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079309773 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085928373 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079148385 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085337238 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081798763 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075048479 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078977834 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079191569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08550804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079027203 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082300201 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079676341 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078770519 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085542377 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082188484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078732815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06910492 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079137269 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0791388 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079413155 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074602816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085514597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079271859 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075246285 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079919117 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079448921 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085435215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082375037 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081579512 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083109398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079628045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08551593 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079107995 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079490067 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086153801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090995038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088061087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088282974 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080992464 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086471369 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085521313 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088202056 seconds)
  done (took 6.339703675 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083757674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0762942 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087864403 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0654844 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067584252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075568296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068712132 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069478777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078907546 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078808934 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080815729 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077339111 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079903158 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079252076 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077343109 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079541265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078675424 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078027872 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078756196 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078412088 seconds)
  done (took 2.79116059 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078830348 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088035057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070693589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075512985 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072654101 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075300092 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072569472 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074025573 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072035203 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072796993 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078468773 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079009073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07079805 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075140081 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078748723 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074817168 seconds)
  done (took 2.448963373 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085585788 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076245599 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081556755 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071276713 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072297417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068072645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070878953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066597385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06762241 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084406752 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071434094 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082637235 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071959854 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070559818 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068187754 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07707336 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067950087 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068961574 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071077532 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083431305 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07328047 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067926405 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073018466 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069831811 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073348549 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076473144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070929719 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07335769 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068259558 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069281506 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073145318 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073463095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066578234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067435122 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068574375 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067375691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069420582 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069599784 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075676104 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084146595 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068370672 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073521053 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070601309 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072051215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067563355 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071112725 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067448043 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074300692 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068843278 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073999728 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070265013 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071055364 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069469469 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075883559 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071867949 seconds)
  done (took 5.214670614 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083591075 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072531226 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06504483 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067797975 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073597397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07243117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07528726 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072860504 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073151254 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068998944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072991106 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072660958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071142549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073635143 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07114817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073109461 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065160372 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0707687 seconds)
  done (took 2.564597559 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075664767 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069576002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077208682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069517821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070247463 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073270437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067643085 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069612 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069847072 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071541262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072046508 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07228429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068118538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072171878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070448473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070715916 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072329689 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067944702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070229628 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066459507 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074112722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06961335 seconds)
  done (took 2.817712522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096529448 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08723742 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145122877 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084938359 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092495831 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077735886 seconds)
  done (took 1.844572933 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095628974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103592813 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069722813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074473532 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080548131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075345898 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075593701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07572002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083354973 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081533673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077950064 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082319607 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082307174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082302275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078760605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079129551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073852885 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07555624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072718189 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088009262 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076281035 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083148562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074297302 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073752283 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074028376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08069849 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080982887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07859686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074328659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080914596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079295521 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073856734 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08120402 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078717756 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0728507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08129304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074889625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085947451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079009232 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080402892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072714054 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079329766 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080557201 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077993684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081313207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073977533 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078188165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074041967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073939333 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087039342 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079015016 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080370916 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078929966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081184849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081182498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087320129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079303695 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080090812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078819251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079051466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080343922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078173382 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08053355 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078699476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078958807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08005867 seconds)
  done (took 6.498003968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10753468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070724157 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073855545 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078962639 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081314415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076414099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076089916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075957183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076222864 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072811829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113051782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076524622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083119977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082581633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074020972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073712306 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074062201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080753902 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07118495 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087651161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076033414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082600593 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082580739 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082881111 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081297115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079871349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073832645 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073942368 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074750859 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074812251 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079697536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076361037 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082623724 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072811347 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082907332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076236813 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076268313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079963349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075768771 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08104063 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082711632 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088242893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075993803 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075773385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081302651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076205798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075747044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073360006 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075984192 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07081458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07894118 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078641289 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078812234 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080226991 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073776478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074055809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073922782 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073810203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074117799 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078929825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080359925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073959761 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087533567 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074022322 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074028751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080173264 seconds)
  done (took 6.467331253 seconds)
done (took 132.266058028 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199978826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17765213 seconds)
  done (took 1.629438283 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072044578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099592249 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079376728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132259378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070354678 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103921373 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103224557 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080441711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06948329 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070132341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06954026 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072043777 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134415771 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069699396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069843229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072193997 seconds)
  done (took 2.637815254 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100641155 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159106317 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106308907 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069462322 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100999784 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077079225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073069968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0803478 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075568016 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069047955 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075416756 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073952259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068769851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07371779 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074119847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075000804 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069193049 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075496826 seconds)
  done (took 2.770952479 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099402428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092851255 seconds)
  done (took 1.465625425 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159547027 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135701065 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202896637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338329556 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155795057 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145720462 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145038845 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144294523 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115242909 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139785076 seconds)
  done (took 2.951117796 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102821264 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151065205 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278522254 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123451567 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077947316 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093790036 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121404297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081865483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082913312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082374476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082169679 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079279573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102307319 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076717359 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078572944 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078837965 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105948992 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077580785 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078736295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078684194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104114054 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070597418 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076918489 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077426131 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079794299 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080649618 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070332947 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072480094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081468039 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.081171516 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082378828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096220394 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082655189 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107357946 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077065644 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107733692 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080112109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078825019 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.081020472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079239072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082208983 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08062079 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077760611 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081853029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071926955 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082145661 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072560908 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072001906 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083204648 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073541989 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083821722 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081133674 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10491692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071126207 seconds)
  done (took 6.118280299 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109898386 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109215779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073503569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115478373 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106698978 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072847146 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108146629 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100932068 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109661405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073968516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072310101 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073937856 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082501997 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083688262 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117666754 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109997103 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075517428 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072931929 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110679815 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109745174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072443722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104325385 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100309755 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108623934 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071370603 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073218327 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07181835 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07375733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078662773 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080301062 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072361814 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081567924 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086088553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079635657 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070932177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072186329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071980742 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080951327 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081984827 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0814569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079185343 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071337328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071736006 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072801064 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072486324 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071027 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079929444 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081369674 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0805771 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072014713 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073394288 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07188611 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072813408 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081296278 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07889547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081896567 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081495851 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071983622 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071827927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074476513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082244005 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081850134 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080817707 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07570028 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081343946 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072041744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082813406 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084857174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07230961 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072736989 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072717451 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073410737 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073556608 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078611823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078396606 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072829794 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071334957 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072033345 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081240874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079200609 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071645209 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078078725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070393995 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071602469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072517771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072815858 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078449179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079677257 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072171115 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070875107 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070850385 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070180105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069727068 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077103458 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078943264 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079110562 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077971203 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071718284 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078540058 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078407233 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204843693 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08223641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073555144 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075148855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074205099 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080423841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080641036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081559016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07280198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072963812 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079776905 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082328582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072861902 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079982147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081169624 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080007713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071341488 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082162059 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072197974 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081329431 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072211084 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081962665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071759144 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081218349 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071861284 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071703122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071664259 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080773774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073056718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071662002 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072697651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072246212 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079558311 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083578996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073398561 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079644575 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079347731 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073034624 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079403914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072241926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08028769 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071790041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072931864 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070608845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082571974 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072246228 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071803706 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072175234 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081393568 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071779986 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08164157 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078964365 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071200302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082923247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081675314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079345003 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081852212 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073534916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071983346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071785359 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071655361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078997469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080340971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073448523 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072171536 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079134297 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081165391 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071124807 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079261872 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079391556 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080165159 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072232245 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071747762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081768129 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081098813 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078739814 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079467243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079793615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071874135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078472721 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079451806 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071620161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085466529 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07177641 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083161247 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079517069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077976461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079490473 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080740614 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079940862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080904853 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082713758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06983984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070476233 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078300053 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070490822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070426559 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077206212 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071978177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07257858 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082354567 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071259249 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214647047 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072766979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08209999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0721981 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074169536 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08514434 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072781053 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076309799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080471598 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072343792 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079455548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082018927 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079674489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0728764 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073050009 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081281959 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081199046 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072226264 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072049173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073296852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079693037 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07928835 seconds)
  done (took 19.122790626 seconds)
done (took 37.982467072 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195939384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148573212 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161611194 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116263171 seconds)
  done (took 1.984725488 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111845492 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100645605 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092254348 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068934404 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098322157 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069204267 seconds)
  done (took 1.850822912 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276923148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193010114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17694284 seconds)
  done (took 1.954023436 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200798496 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185888839 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.434821975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265157864 seconds)
  done (took 2.490286474 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140379452 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088344972 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071097293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086819552 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127863799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155507192 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099149285 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123846088 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081013264 seconds)
  done (took 2.330673976 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147503156 seconds)
done (took 12.075648516 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255670605 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105144003 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.213850197 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07607853 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220820222 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072467966 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209921517 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.210977451 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079674234 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079751776 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098034319 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150845346 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.195608539 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080532924 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17980153 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115473278 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.35218689 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092623886 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104681934 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216412613 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177257236 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112808407 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078103917 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178347728 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081169849 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078284461 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.241889591 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162998278 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083422922 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201792473 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078966374 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123268334 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059134598 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181102207 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077114345 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109976936 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115684912 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105822718 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.118066514 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076498631 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186464105 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079715441 seconds)
    (43/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121742715 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070458352 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090910057 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091151067 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.189689598 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056814642 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.153851597 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069382921 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06910112 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.14729074 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069057437 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100566584 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13189061 seconds)
    (56/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.16092524 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091580169 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.181488477 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.069949498 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068399721 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056710522 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090146124 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.204525932 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079938188 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075984893 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131626394 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119525343 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069422781 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077354646 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077331798 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089800908 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078806588 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16121827 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067214787 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055653458 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06778817 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151500429 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077226947 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091683494 seconds)
    (80/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.108608621 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088576336 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.227739792 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081243231 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081022924 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102007044 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080207689 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.172780872 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073460843 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077517129 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18641139 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081371253 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190656552 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.118480861 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069978117 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090140445 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114588818 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071657427 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058060403 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069077609 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1585903 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070110647 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060063773 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058898808 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07592879 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081506136 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.229665518 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076860817 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108179656 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070264559 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109642142 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161317396 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084042767 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056498621 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056069458 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078497269 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076805919 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080100485 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078035721 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056689014 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159906777 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056747398 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.133212239 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139913124 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057297496 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077959354 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099779843 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076565167 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083582059 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13037861 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.135885179 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056768547 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078765413 seconds)
    (133/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070952585 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076411051 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172940754 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076931536 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086563563 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070195757 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175141017 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076627423 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074107906 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077801829 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075563578 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073632989 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077904731 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098091103 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077572802 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056647527 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159898534 seconds)
    (150/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.106739668 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.057714684 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056303612 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073178858 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079815101 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067610212 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088645733 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094770155 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158910363 seconds)
    (159/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05643902 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081832268 seconds)
    (161/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068292727 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148555073 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.056883198 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.146823379 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098971063 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075703926 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069887156 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069836298 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069329148 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071786758 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069972184 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07129981 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070582073 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068679489 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068737496 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0755187 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091780724 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185444789 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090125779 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082761791 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055989159 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057262216 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.057119934 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169586833 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070808421 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05545782 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067486204 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172997931 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068357898 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.311884066 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073725335 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060240047 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132104181 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179962511 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057664543 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143405965 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069702831 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077289327 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095136 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116829909 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070048618 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177455959 seconds)
    (203/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.057737039 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078309541 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076691604 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093251866 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092230651 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092200403 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079834726 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077452305 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071558984 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095211593 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078658878 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14568274 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08181535 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079765915 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073845495 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085853792 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.119047173 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072947092 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070203688 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077307351 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129463824 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080532975 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072454224 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075903266 seconds)
    (227/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164527347 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069902314 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120036339 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069627407 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057709301 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059660714 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058343073 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059754038 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155174759 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186702563 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085431988 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082734709 seconds)
    (239/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083385767 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173395102 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059475519 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058194094 seconds)
    (243/309) benchmarking ("sort", Float64, false)...
    done (took 0.134868766 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08182341 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068557097 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057748534 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069685544 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074852884 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057703252 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120311513 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070355915 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095477195 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057262591 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056721338 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092022246 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056489816 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066333351 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069725928 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082853987 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056765382 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05697579 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13966382 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.056560301 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077978849 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070719759 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155241658 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057708683 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 0.147973881 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069222892 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067492485 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075197875 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070139737 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067949135 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069213762 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056727095 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055803316 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090828887 seconds)
    (278/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056721332 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077100559 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071710654 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093322986 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.111358697 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068979537 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076877791 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069300594 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09433755 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056081323 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093525705 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068309573 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07574317 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056544881 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076733484 seconds)
    (293/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068533918 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149649629 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076461627 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057459149 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180050152 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068007816 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075256376 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076991884 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058989535 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06876412 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058125129 seconds)
    (304/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076625022 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056713452 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068197305 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.267683348 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078631777 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080530441 seconds)
  done (took 32.206605867 seconds)
done (took 33.529291825 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08744844 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098046139 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081144173 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098218598 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086359367 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083763129 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078906815 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08430469 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086285316 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087943629 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084565246 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062176584 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080701393 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082010739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081620235 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097084265 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085061491 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079035972 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079014843 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070578148 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07872207 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071341417 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074866126 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063406718 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084871112 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077046919 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079264447 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079404447 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070637945 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070324718 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075352399 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079239709 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070272209 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084570942 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078744695 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078760576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079362112 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081756243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071615709 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07012877 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079799732 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070164471 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077489928 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078179626 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076893389 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076725413 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079370559 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081882757 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094279097 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07194339 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079887915 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080116245 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081636479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07750123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074779913 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077643774 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075746343 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094505774 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078615324 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072147087 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079169081 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078696721 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075838476 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077961878 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077876204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080575513 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081751918 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076221686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080111171 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076376141 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069648298 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078382864 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074139271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072338006 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080975423 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082202536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068667061 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076358151 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077946187 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078700997 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069849803 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072124681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071438342 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076251583 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072087356 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060148137 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074441584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076858811 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06851301 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077984464 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07665927 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077727431 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07088774 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081370977 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06922813 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074862605 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069362109 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070015313 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071083185 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074354676 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068667552 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071798839 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079655249 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071164034 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076126349 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082221603 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070065589 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076392497 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068263202 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068732989 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083068897 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079000557 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069013433 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071234257 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068237185 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076272903 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068479496 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068278728 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068410184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068918373 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07475498 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068823496 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070429421 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076054714 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224033859 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07129449 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075462902 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073466033 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070561942 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076772325 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070710472 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06993995 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071776277 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068074431 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071797307 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07043663 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077116962 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071797553 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077923712 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070832266 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078821924 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074979043 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076095473 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075710557 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068109829 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065419366 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072244435 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072587532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071967868 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07013764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070808785 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069211678 seconds)
done (took 13.10056761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070276741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135353126 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096120714 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096721727 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087294514 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070467157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078206398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097948456 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072033082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100625365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090828423 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088947797 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11188602 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068595431 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069698653 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074207473 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071434361 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083280245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098531891 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090223855 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114934384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06964141 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093422096 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090683348 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089159719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09541906 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070918481 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073889707 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073937927 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102752662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092347523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07579433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070531888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098212076 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093961317 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085462212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070302066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084694465 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070423365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069836732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071217228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098181638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08252875 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082652573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073917503 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080044447 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071386557 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084915594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090737565 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081785418 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087424022 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101291719 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072362011 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086217734 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068983947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087265225 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078879732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072621137 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070535018 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077851918 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071144192 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073391036 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083378371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082249928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07423194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086467195 seconds)
  done (took 6.910690791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087424969 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098170958 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086401248 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089123174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071619813 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0724984 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072844106 seconds)
  done (took 2.003358985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070646311 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090145221 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090725052 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090992478 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083955498 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092272635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079134261 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070535945 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094566995 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069362038 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090318999 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099948281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073884568 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083779588 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09435564 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070629869 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092772978 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070378134 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072810123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092375926 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074332357 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096253605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081151024 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070773193 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083955287 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070723247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11445716 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079995953 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071641645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073793587 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071511238 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109286754 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082825689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08224396 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071146419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083385242 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084784736 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072837764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081248267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080213894 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083745033 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073362617 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072017702 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071317322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074680111 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080635416 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072096704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073347832 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073361629 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089593339 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070086739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083056373 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073296542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075950054 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075841642 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0749746 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081130235 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071973145 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089674399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070809939 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086511303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085021015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083194517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084878847 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073367604 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083075616 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083965063 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073061333 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072522107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074256005 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085156401 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073062984 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072652774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080716374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07260238 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092477871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092487578 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072260435 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084319205 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071558811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071430812 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071682115 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092397285 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075822174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070898088 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075068027 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072896881 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072993335 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070001667 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074693799 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071377118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075751497 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073644831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073835974 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072925082 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085001836 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070357791 seconds)
  done (took 9.120412551 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073874955 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072457064 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073736896 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071939507 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07205064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072182921 seconds)
  done (took 1.886280059 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093048624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072449416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083020096 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075029866 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105602355 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088599048 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089290208 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080528057 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085933533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.0816302 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088714087 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089695253 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092916336 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075567645 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088765644 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07489739 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089286033 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077708532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081698705 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076006071 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088475064 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076013121 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076028063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084039618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078367298 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075062072 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08187178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082428976 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081532649 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080292131 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075692742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079047442 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073582185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079921406 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088818721 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07382225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077018572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079768996 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075663487 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078707391 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089690029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075605395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077441077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079524769 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080329403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073981706 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079415196 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082295081 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088683666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079391407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079800903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074741711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078374176 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080997681 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073898814 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080408101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079883644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089259432 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076103098 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073954189 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072664608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078556045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08016993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079173134 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080498801 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079944137 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074047748 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075551397 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076110911 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074968709 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080334256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072314888 seconds)
  done (took 7.213636152 seconds)
done (took 28.541791461 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541223033 seconds)
  done (took 1.945133076 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607237243 seconds)
  done (took 2.037284302 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.963897103 seconds)
  done (took 8.390863424 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.371777658 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48311285 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717556275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137110368 seconds)
  done (took 3.176798367 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723696384 seconds)
  done (took 2.160281795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238313682 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228925672 seconds)
  done (took 1.914837769 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.353040602 seconds)
  done (took 1.782964863 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114797794 seconds)
  done (took 2.542902649 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233623093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163931946 seconds)
  done (took 1.83196818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.436982394 seconds)
  done (took 1.869491649 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844549689 seconds)
  done (took 6.280491757 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222375299 seconds)
  done (took 1.700857244 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238068711 seconds)
  done (took 1.675529395 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746476719 seconds)
  done (took 3.181174103 seconds)
done (took 41.933929125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087620942 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089571726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089641839 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084991735 seconds)
  done (took 1.770004669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079978103 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076771023 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079842921 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076712621 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080012494 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076779257 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078096774 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079363753 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076743894 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07751264 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07678707 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076812874 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079419919 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078260018 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075168778 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079390855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07973856 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076746245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079595945 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076984718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074830127 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07911735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078995485 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076462316 seconds)
  done (took 3.308433742 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08237463 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076692256 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079574165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075574946 seconds)
  done (took 1.758868338 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082531345 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093251334 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091541367 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082796641 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093822736 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089664784 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073389272 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073179642 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074418188 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081942372 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072761769 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098400824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091234347 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082303924 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084276833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069153481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071421644 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090664242 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083027735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083197851 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07467205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08297289 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072497483 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092833158 seconds)
  done (took 3.42710167 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084346896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104979692 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084190194 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094602349 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098953125 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072000658 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086331431 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100148956 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133990568 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072831506 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076609748 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069922876 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078889185 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072766924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084214125 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112249972 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11612379 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073505878 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102079903 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069980419 seconds)
  done (took 3.238698944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076221404 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073670288 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074692615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069730248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081239253 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07688561 seconds)
  done (took 1.902006318 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071976835 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072033069 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071461954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070979431 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076752267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071197963 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070025723 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071810778 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071853743 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071582044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071365731 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070265394 seconds)
  done (took 2.307088023 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185738833 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072828416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07398095 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070552107 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074460293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070685192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085105771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071770021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095548694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070877604 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070794445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073730409 seconds)
  done (took 2.463283318 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197221399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079003014 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227188053 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15221237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109558304 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114143514 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113489166 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113192211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13798823 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101060693 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161382537 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163408075 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108357544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137193018 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092740156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105432919 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150988013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165186875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11113712 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162248423 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142508955 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127399036 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145432491 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103057686 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106344817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119643585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075552733 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082371789 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165154057 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130496982 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146302511 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111688843 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092699867 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17102615 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165326737 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137679004 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148453899 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087085207 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10651792 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134663489 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200151811 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090365732 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301299535 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11378465 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084188254 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13395861 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119588251 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12090571 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106717444 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092943563 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144039115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178433301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132848204 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089432918 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123428971 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113234458 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113017853 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115361152 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170955306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155699798 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127810749 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075564836 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109036391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148919049 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135342075 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10947078 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123664339 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094373759 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132078236 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152539936 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12262571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140124388 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116126066 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09111582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123599509 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136715039 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127528375 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157846939 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124078109 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076655263 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121264753 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10038285 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083696248 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146984461 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078550954 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170304454 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101839524 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108564279 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123531395 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108540689 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108937124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150589574 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285262201 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107435817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073241139 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108577844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119732966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142498584 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091006762 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110301188 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116736142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081647807 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133546236 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079839548 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123979349 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082620712 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124226743 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130041449 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081890891 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123450583 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105072797 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103926302 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130294825 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155543832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090713764 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084353301 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162424377 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122782555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104886503 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141423224 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154780221 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105958238 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101477087 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145404875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166309456 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092370912 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160464016 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106593527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086711172 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092596457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123930374 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111634989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124037261 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084299249 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118176829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160923696 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078720266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098136431 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135645278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082236745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083863855 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106349838 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105470245 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099246295 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100457914 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103415431 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133643517 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27484258 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109699277 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12776402 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102701147 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169099915 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094355543 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107091311 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107599138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0768616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131761744 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152609082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083806826 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160228229 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122249768 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118399104 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123699912 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090037173 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137791131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084657864 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075591327 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141041317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112812186 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110602173 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147479604 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11660327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123466517 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118794658 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130927797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129401676 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129107959 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109341817 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09209959 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114550626 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127458418 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077778214 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093480885 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083779876 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106609026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098161792 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087117957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138801335 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122221971 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108824052 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112921661 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098289099 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144802107 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081382348 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125089136 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119817082 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097714076 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148145359 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147846635 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131199483 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099608421 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283151882 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076658594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07977142 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090859329 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122870599 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088125684 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087499217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114882133 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144552291 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127547693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133987425 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124321795 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119413043 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15180436 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075622103 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123340003 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145144418 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123049106 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107607852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094030143 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101054813 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139708526 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106477973 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171896957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115339893 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125466595 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155041972 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105496261 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083555419 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10541997 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131946221 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104748791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143103045 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101287299 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091065723 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109788085 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079648081 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100148164 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126711251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117639554 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135140253 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113546649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131597463 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081099436 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114050741 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12245778 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120604835 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069406102 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118272998 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161734244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097444906 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116739119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297431988 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083295399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139053756 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168440457 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142749605 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088258495 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108412435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121341738 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12521054 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119847359 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136342749 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106705898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136895745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11151604 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089185377 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089877956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098318762 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105713605 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097556802 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104333868 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114246694 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099307182 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130073877 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105464918 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113921394 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123599671 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106306111 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099541297 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102735048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171999202 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12024887 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166191549 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103456382 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140107083 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157890181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079346239 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083478205 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082279656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136261534 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088260391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129926323 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112005202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116840277 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123205992 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136662443 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097409862 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072815369 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109503494 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131569799 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123778068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099603478 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103360072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155566821 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100776813 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080763939 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260859882 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119315824 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10648301 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164433193 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068736323 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108990269 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081355755 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083445441 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125458452 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146955847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084366443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102802884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121203955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11304902 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12517271 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100003937 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109716259 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124327283 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144291815 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12673931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092557638 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111476914 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128683914 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151001309 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10422761 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101283059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168171595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149257205 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155739168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089156406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115866277 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11599609 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110886114 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136429072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086871589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157781943 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085895983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13470287 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103250105 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090093492 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126646707 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11177268 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090698133 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142327866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117332386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086056094 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08194845 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117546269 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119249586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104669106 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078124241 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284992658 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080801941 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134522461 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157255145 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084617006 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107487603 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098688852 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084567405 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10575439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103959658 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089368574 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103237073 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165541036 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088351365 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144589303 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132429731 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112428551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133228274 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104344263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643092605 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081179371 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147434093 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115169896 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166909068 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102135767 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119347284 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112391666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121140212 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14146028 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104738807 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180750046 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131207178 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117555816 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082550108 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103704001 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105789027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090011893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10917017 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115205697 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116513926 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094826519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116201338 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122619181 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085350072 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098067131 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151261145 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115186652 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140471096 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134922554 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087466189 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134195364 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134007373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232972085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120593094 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149056639 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108082962 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101933079 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085205931 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101387452 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155936244 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077619798 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154215247 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123912684 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111927465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114681255 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110518525 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130079938 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105594855 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122756338 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094854991 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109041442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114689987 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084597435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080802563 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107093946 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111411833 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101697056 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098876702 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103043221 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149271482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077055311 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100935429 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117232554 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141803961 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167171708 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092313942 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087538382 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121919631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11724617 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113665263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122333613 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082990645 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085147419 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083507913 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086759058 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109201678 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114271944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114442917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110794262 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156123051 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087261685 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228358704 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096950483 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105511708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074375541 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080937443 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0972846 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097648096 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255383975 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110724879 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157382508 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100100821 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093999054 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094369562 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079905884 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087131322 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125855695 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112207705 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118724544 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103282177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068979569 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108191626 seconds)
  done (took 59.230465532 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111934352 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087193996 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100558929 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146198942 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125023528 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203735905 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153872084 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193351197 seconds)
  done (took 2.677762601 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073391265 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097930651 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107464646 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08828391 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07048206 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074115034 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226560847 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08749816 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070936908 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096302412 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083237046 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074849855 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410560733 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071428556 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073003027 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068544962 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071511759 seconds)
  done (took 3.39256368 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395536737 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621271874 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375533233 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082970422 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.971730593 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101981487 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.339805292 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142409581 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083954558 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528649357 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700432459 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13576198 seconds)
  done (took 19.036137611 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086369669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080356124 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093183151 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093289506 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082749355 seconds)
  done (took 1.989712791 seconds)
done (took 107.991615439 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087384634 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428584971 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059780893 seconds)
  done (took 2.070940322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091683606 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08973861 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089150962 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087043119 seconds)
  done (took 1.919362342 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078868544 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081378852 seconds)
  done (took 1.715910036 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23017209 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17214577 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100518232 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086583578 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083913306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084503633 seconds)
  done (took 1.814074705 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076451918 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078914635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076714298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080546458 seconds)
  done (took 1.867448325 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080246785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057322151 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060164414 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0625866 seconds)
  done (took 1.815729042 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091300434 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087925859 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082809883 seconds)
  done (took 1.82138459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103853407 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091481891 seconds)
  done (took 1.754154987 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085124412 seconds)
  done (took 1.643487612 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092567661 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102484717 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135506418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116737153 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141176646 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117773705 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088093109 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089287529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083171211 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090038459 seconds)
  done (took 2.615749147 seconds)
done (took 21.181891935 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082279421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371548825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364375146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092783838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674287981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361155584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999299052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096977562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144532831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072256421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088759264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653736451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990947373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333862329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978785509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334883471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653973649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073852058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073228834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073174881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985780145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073330542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072901114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074084779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65275546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378311093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073587579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351859295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072955209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075312839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360492253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073238466 seconds)
  done (took 16.299343887 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074484524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12312074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077211422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088558372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074545224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074801964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076539356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07419094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125722275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073441796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089673589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072877597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076826633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073807718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092674003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076421877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074644215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073507594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073435134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074185499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091913895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073221632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073457431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074558369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073443103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085530783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073709984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073381278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074651752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075292258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076275262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074370717 seconds)
  done (took 4.131505784 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121134016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127947566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078652097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10898857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11612676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075172658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149020441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098181362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132055296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072960098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090296839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073680412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106714742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074629251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093189087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073821077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074477548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073689195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073612838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07415149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09236722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07329348 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073762562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073963116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073916447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087460312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073677718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073922808 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073587931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075744462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077615561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074463326 seconds)
  done (took 4.385163171 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076932092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078962792 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08668129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087486383 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073451671 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076647554 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07803615 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074224323 seconds)
  done (took 2.207497318 seconds)
done (took 28.588598368 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083829502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074247217 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077734903 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094000402 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079574391 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081925376 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071516552 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080979912 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078906982 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07953221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080213827 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072231543 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077460364 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071817114 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07933222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073140946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083173244 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077359196 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082973966 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08400568 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075723969 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078449228 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080917061 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08357578 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083013631 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082790783 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081805128 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078226857 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073232856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075788215 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081755088 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088496892 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072410715 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082521654 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072223354 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073207441 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076753423 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072334278 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082945357 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081301055 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074938712 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081850331 seconds)
  done (took 4.867979361 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09218193 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096755699 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089220655 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067195499 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072316164 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070620505 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094349397 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065763508 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066625145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093504697 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062330963 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065798003 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068890521 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060104179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066012634 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063736527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067504144 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061370815 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066114569 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065483524 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094132843 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060566989 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082637355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068853238 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062200695 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067661448 seconds)
  done (took 3.473890841 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079702725 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087123318 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0949981 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14654351 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115143067 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082455178 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083058203 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096232459 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098810816 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071879626 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075353026 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098303302 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091884694 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078662102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072246985 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08910192 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089585437 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073745161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077309009 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098983293 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090065351 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09004424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095768681 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085703706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07153107 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074893293 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076180523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084756689 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074637875 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081318484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075009821 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075150115 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07376 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08344864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074334462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073883719 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097722241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082223354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083520813 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072994597 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079477795 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073189156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095041038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128460351 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070860461 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077801075 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075362712 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082058381 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071223046 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098718538 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082909805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071797783 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075212356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072014661 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071444315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075138369 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073589872 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074226563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08058441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077321904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095864997 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077156157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087611199 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071710578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080498133 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072808307 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073215228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07124661 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096827516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073731045 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111454534 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073247227 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073129056 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081430456 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080435012 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078329104 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072410505 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087990009 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081818674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075169156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081112295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07508655 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074268415 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101383922 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074952004 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074242243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073576994 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077461215 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075024719 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073830679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085080613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071718156 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074183406 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08808624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07175009 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072981582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077074423 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075620914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071832505 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082170501 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075677021 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072426125 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081537428 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071896353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074157993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083996602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078039942 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070290623 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075365035 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076555242 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072294115 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072844236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073076232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073797806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080584954 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078834615 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075598442 seconds)
  done (took 11.061580192 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169438935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158882633 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075833964 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150899144 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082257789 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083370368 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151813995 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097623417 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072425872 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073394451 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072863462 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111857533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108139792 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118630486 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082667166 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07244174 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094953932 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116200202 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153259375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149310304 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095829936 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080773993 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074767419 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074169546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074363573 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081972149 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0890127 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081174488 seconds)
  done (took 4.468223466 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083707107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106886336 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079433039 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094143219 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094214804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073207273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074579304 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074288011 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08944988 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082315255 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072472198 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076380699 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078597049 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075070521 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07330308 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079653526 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078378895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073672586 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076126948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079970005 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082701864 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09643851 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074955085 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071822995 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077185902 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071488664 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068220724 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087372958 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072733568 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09717872 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070513999 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0767406 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08572756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073391187 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072559988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072440295 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072310514 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07252615 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074496806 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071244604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07125648 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063396937 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071475889 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08253726 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085703223 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061705025 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076838497 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077880226 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077813075 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070248047 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075576335 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075679701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074835538 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08037413 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076010407 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078339128 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073327045 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081261526 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080877174 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072253846 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069657332 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070840155 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076889299 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070097351 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087810824 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077831697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071355862 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073029975 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07375519 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085918633 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072427359 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077630965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070059619 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074584855 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077451604 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074268888 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073489751 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071464097 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072382694 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07326913 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060805775 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072553071 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058755724 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074457761 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071193034 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071078295 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072179512 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077159701 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083348529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074274482 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078390826 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073681178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071643928 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074682445 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065041326 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074379674 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08226154 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085945162 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072288266 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069629257 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084217735 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076744495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071381836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062293217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075474926 seconds)
  done (took 9.597954286 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096981295 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075420667 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086366012 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093393038 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091128732 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078745873 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081954956 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073990926 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088368901 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079326022 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082081174 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073789135 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082859684 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082242712 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074605559 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083301811 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076777207 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087456309 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087035437 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072706818 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081258875 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084784227 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094027537 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085358043 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083696783 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085219023 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093941064 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081554309 seconds)
  done (took 3.961806845 seconds)
done (took 39.002854183 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.668467929 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.838034549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.653693218 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.960119646 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.891121036 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.672700273 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.842589862 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.648875121 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.924084625 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.693091206 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.929215932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.753406766 seconds)
done (took 64.183600312 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.737733284 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.791034323 seconds)
    (2/2) benchmarking "String"...
    done (took 1.879606853 seconds)
  done (took 5.249631557 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.908732229 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.37756084 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.89117251 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.649424598 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.656244063 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.923553398 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.460601245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.183602272 seconds)
  done (took 29.723308733 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.800710471 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.881625653 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.357883111 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.39078584 seconds)
  done (took 15.063286912 seconds)
done (took 61.356977249 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.643932639 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.683977534 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.69281664 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.637174209 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.709009214 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.659900189 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.906895618 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.701799157 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.650875331 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.638947664 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.652312 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.077784434 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.654936038 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.858686779 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.650243184 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.658870727 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.686414919 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.123034298 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.80827224 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.666514014 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.661187224 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.703445359 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.652179179 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.659557263 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.651147771 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.654305544 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.039681765 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.656975358 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.279036769 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.655238064 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.682431337 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.084850942 seconds)
  done (took 199.723384924 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.651192592 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.688168961 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.741080386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.681283782 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.970790172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.837242395 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.760486937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.141727092 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.658403987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.659639132 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.828248774 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.652365156 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.871732053 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.598489553 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.679757223 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.735175246 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.812157847 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.874980227 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.682849448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.821186771 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.652327012 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.705890746 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.667029392 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.806457617 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.693074766 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.75786817 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.816623682 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.65783498 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.845027624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.771945654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.656836324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.687603322 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.874982573 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.525350622 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.665287341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.672076513 seconds)
  done (took 165.386279041 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.845813404 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.654495432 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.652823511 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.652825201 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.665363918 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.653679291 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784086186 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7778759 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.292238723 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.974239644 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707755055 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.654532887 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457627267 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.653943818 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.653836038 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720329974 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.665698428 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.653622025 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.669969481 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.680501428 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.653036523 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.653267606 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779068466 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.666505504 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.654578934 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.662054666 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.654144226 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.660413157 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.027458591 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.654543725 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.817435539 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.6543428 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.659787143 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.912233433 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.655871585 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.654970519 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503374327 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.330256934 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736618572 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.656481534 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.660083678 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.654667183 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.872516594 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.656576183 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.65422281 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.655453473 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.654513045 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.658283096 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.792600843 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.655660374 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785138387 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654796771 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.137919705 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.655884902 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.655531677 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.65541457 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.570395201 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.242078106 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.655369892 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.658395119 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.65514027 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.654353786 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.661207996 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.446888519 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.730108074 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.657019075 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.659606084 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.661161709 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.656672184 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.714573634 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.65650043 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.311619126 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.715790785 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.775101655 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778951382 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658596544 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722522336 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749807962 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.65566987 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.65613392 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.656124522 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.656090006 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.737121703 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.656656365 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.656856739 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.786195697 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.665719906 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.658414757 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708203033 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.725730559 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.658640074 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502188973 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.659731645 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.657177861 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927017203 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722221869 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.658345838 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.65685792 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.787335275 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779022815 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.371570657 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.660934013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.442088118 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.802701283 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659362418 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.803454897 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.65941717 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738878947 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662840099 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.660348553 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690106589 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.658658352 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.709710269 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.658460198 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.032996518 seconds)
  done (took 388.765462055 seconds)
done (took 757.361030104 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.258451032 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.224966088 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.321167646 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.241131862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.216741926 seconds)
  done (took 12.850287407 seconds)
done (took 14.437928479 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.744524361 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.750115647 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.682549353 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.749653442 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.6789547 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.746132075 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.730739621 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.682614214 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.714152954 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.683099514 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.716710693 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.683266545 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670050736 seconds)
  done (took 23.821012321 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.892145546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.887212162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.729631019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.885171872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.70503688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.887117986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.818127452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808966567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808585646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675851019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.672164393 seconds)
  done (took 21.361204017 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.889831776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.893484734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.736392105 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.886890122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709959575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.8992651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824304793 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812895711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810203821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.677298221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.67271524 seconds)
  done (took 21.402755186 seconds)
done (took 68.173629845 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.666819452 seconds)
  done (took 3.255918447 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.693145527 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.849957873 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.675239169 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.66879024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.667514538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.667582577 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.669862733 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.666766517 seconds)
  done (took 15.149467047 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666873997 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.667465709 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.664740945 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.665095188 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.665495641 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.6648966 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.66586921 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.66483662 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.668643582 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.667531859 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.667307042 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.664674563 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.66505505 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.667499993 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.668516978 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.668167595 seconds)
  done (took 28.253509395 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.667158471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.666417148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.665901609 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.666378401 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.664937749 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.666157728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.666251952 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.665504478 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.665924897 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.664871326 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.666716019 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667573724 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.666270458 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.667859836 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.666757439 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.667415363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.666656971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.6700185 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.671142751 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.667740581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.667607225 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.6669861 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.667775713 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.668840125 seconds)
  done (took 41.605306256 seconds)
done (took 89.854418117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.427793001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.407344935 seconds)
  done (took 9.428709851 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.669969338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.670154261 seconds)
  done (took 4.936375194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.672419957 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.670843141 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.669450248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.670592436 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.669922352 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.670970501 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.670003612 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.671105353 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.670265956 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.669864944 seconds)
  done (took 18.298912507 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.67038109 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.670863289 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.667681481 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.670363152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.670474298 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.667691513 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.670594959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.673056946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.671170734 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.668166139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.670705684 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.668781522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.671030316 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.668427757 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.670996428 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.668676359 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.66850822 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.668498196 seconds)
  done (took 31.649724503 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.672306259 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.671467776 seconds)
  done (took 4.938065462 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.668751017 seconds)
    (2/7) benchmarking "second"...
    done (took 1.669781574 seconds)
    (3/7) benchmarking "month"...
    done (took 1.668904373 seconds)
    (4/7) benchmarking "year"...
    done (took 1.671494499 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.670710079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.669544016 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.670180887 seconds)
  done (took 13.284215492 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.673358738 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.81819658 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882452329 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.267522532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.674048075 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.675496148 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.595887569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.675109301 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.676361227 seconds)
  done (took 18.533978289 seconds)
done (took 102.66380242 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.500278347 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.672339817 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.89660614 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.721730367 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.690368387 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.964291067 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.706465879 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.948302225 seconds)
done (took 41.695381137 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.726704302 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.321844819 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.322306658 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.695832157 seconds)
  done (took 14.935482419 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.654867243 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.065085138 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.680712604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.596081859 seconds)
  done (took 21.771901665 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.04304971 seconds)
    (2/2) benchmarking "read"...
    done (took 2.018418875 seconds)
  done (took 5.663167341 seconds)
done (took 50.694745392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.676435499 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.673656363 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.673032451 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.670947493 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.673978246 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.670716307 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.671725707 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672533502 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.674290188 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.674680486 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.673921911 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67405598 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.672041885 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671092148 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673585304 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.671138233 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.671788166 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.671197421 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.676218969 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67196748 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.672246184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675527344 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.672020046 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.672026818 seconds)
  done (took 41.747882804 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.67513976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.673418348 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.675262964 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.674336231 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.671834543 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.674683203 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.674834307 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.673363941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.674317757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.67450785 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.671809581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.67409844 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.675485909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.672961842 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675189565 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.672870434 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.675671858 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672145556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676445067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.673768655 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.67542575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673064373 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.672850846 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.675046649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.673345709 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.67314109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.67785035 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.673675734 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.676110185 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.676188547 seconds)
  done (took 51.826985646 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.681498515 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.683459976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.676401551 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.677331485 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.675759408 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.676308143 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.675418974 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.676348986 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.676373088 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.676867931 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.67622809 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.675542807 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.676376622 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.675712392 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.677176954 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.677426164 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.678226799 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.675951348 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.676044985 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.677120878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676190444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.67688252 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.676531231 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.676567865 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.677258866 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.676552612 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.676558171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.677466348 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.676933406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676529967 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.676812325 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.677633669 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.675825848 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.676823912 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.676429259 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.677040485 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.681900954 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.686148479 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.676814542 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.677556864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.677570452 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.677588362 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.677710846 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677349357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.676975499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.67779379 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.676761325 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.677052997 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.678028831 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.676850042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.677714598 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.67812643 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.6802561 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.678558502 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.678397124 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.678872278 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.679447644 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.678024273 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.679268149 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.67879854 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.679075951 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.677821441 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.679834297 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.678846705 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.679427801 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.678336227 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.679282646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678414391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.678174242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.678720412 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.68151408 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.67937691 seconds)
  done (took 122.403218931 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.678442462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.677725286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.676846025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.677692995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.676255596 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.679297469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.677277585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6790147 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677555377 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.67981251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679624484 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.677621162 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677300668 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.679879519 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.679444 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.679788539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.679957102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.677576745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.680433591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.68080144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.679633221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.677900782 seconds)
  done (took 38.532410818 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.679498467 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680230351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.678327697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.680674609 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.677728164 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.680724095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.681139511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.680490304 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680226356 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.677954082 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678512734 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680078301 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.678462323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678419601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.678681802 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.678647521 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680802215 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.678439823 seconds)
  done (took 31.832136949 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.678572427 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.679112276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.681729971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.678942732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.679548383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.681357434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.678776672 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.681590752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.682769223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.680685239 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.681549467 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.682901798 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.681357291 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679971618 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682298828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.681029526 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.68186276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680255466 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682015711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.68054563 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680075574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68183381 seconds)
  done (took 38.582949251 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681048647 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.682526622 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.679316073 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.680427225 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.680604195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.682271101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.682093379 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.680347901 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.682634092 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.682468702 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680343149 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.682886788 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.680388562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.68082206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.680522585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680536211 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.682296448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.681078858 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682500534 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680027349 seconds)
  done (took 35.230382608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.684744467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.684484234 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.684518207 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683976912 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.684137236 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.684988517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683350487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.683490224 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.683549094 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.68411939 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.683873813 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683509633 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683885612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.684538575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.684860843 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.68433853 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.683598543 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684424558 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.685952235 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684651081 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.685906192 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.684797141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.684628936 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.684743708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.685088195 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.685411121 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.685441172 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.685080265 seconds)
  done (took 48.773199197 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.684454604 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.684660774 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.68166545 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.682332479 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.683381759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.681852836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.683169208 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.683842059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.684211934 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.682344737 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.684684644 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.683919044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.684271061 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.685371984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.685140329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.684968771 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684984019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.682737098 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.682979452 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683094789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.685229124 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684789947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.686204374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.68177262 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682667063 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.68721552 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683017435 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.682835448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68612962 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.682948672 seconds)
  done (took 52.125452833 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.704147904 seconds)
    (2/2) benchmarking "in"...
    done (took 1.704422868 seconds)
  done (took 5.016382624 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.683160474 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685228112 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.685817573 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.683365561 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683410643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684943986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686711398 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684389158 seconds)
  done (took 15.08579148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.688006911 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.687056186 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.686676042 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.686079457 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.686736212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.687186237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694080744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.686821596 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.688010788 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.687398415 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.693946464 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.694987707 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.690172478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.687093704 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.686314951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.688065864 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.687355528 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687817114 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.689766084 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.687917954 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.688145402 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.689707678 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688092208 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.685456159 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.688776187 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.69804878 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.691599428 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.687065933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.688287864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.691051058 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.687370761 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.685038745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.688001391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.687844468 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.687921627 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.688737108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697519906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.68886767 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.694338132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.688363313 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.68793545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.68551154 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.688913777 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.689774686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.689695999 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.688719118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.688638488 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.685482913 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.688008093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.692463185 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.693970009 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.688485421 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.686214331 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692504029 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.690724653 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.696714579 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.690243754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.692227982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.69801058 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.700155797 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.702201149 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.698635435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.691575626 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.690835908 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.698925231 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.713151131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696422512 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.687611137 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.686906569 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.690244284 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696876536 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.703993787 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.700480821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.690769993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69057643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.691004722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.690389871 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.690522773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69798384 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.693404723 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.690237859 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691990052 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.700257368 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713425169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.689847788 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.690637104 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.691883013 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.690838032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.691744207 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.702937766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.69156776 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.691450952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.691147182 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.690870395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.691977187 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.691591488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.689750709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691582095 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.688480874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.691584106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691401443 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694352654 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.700884203 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692735154 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.691529631 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.69720282 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.69157506 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.694090976 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.697557124 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.691373638 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692365879 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.692522505 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.69734738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.689361413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694268715 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.699827816 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.692805634 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.69370781 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.692704402 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.691771247 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701749505 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.71947025 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.692189966 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.692346509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.698706597 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.708355022 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693205535 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.695393178 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.692412689 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.689369288 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.690649415 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.694479243 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.693101239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694211415 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692758045 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695328711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.689836184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.693137804 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.693085975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.693254609 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.694284144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.692978542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.694892643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.695034588 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.693925705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.694645362 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.699353758 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.693770578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.694008728 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.693891461 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.690925661 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693769655 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.694616711 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.694520525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.694037415 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.694367015 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.692765029 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.694155019 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.694854945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.69395092 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.697442442 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.695520262 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.698469837 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.695520734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.69715542 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.694060959 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.691869677 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.694051048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.693393911 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.693652088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.694968636 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.693512415 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.698241184 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.703075889 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.694049527 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.69539925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.6977306 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695354563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.696450865 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695110471 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.698415518 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.703548596 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.695766561 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.701482949 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.696212875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.696048211 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.695445127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.696151215 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.694838154 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.696970683 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.69926307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.704485176 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.708801572 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704884717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.697641983 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.701525855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.700160319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.700288437 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.69953906 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.697599216 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.695612726 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696712665 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695852701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.696796154 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.697240208 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.69626298 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.695720768 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.695746799 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.696047635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.695878335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696632484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.696768192 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.697612681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.697293406 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.69625492 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696995151 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.696113983 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.693431522 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.696011089 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.696656079 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.697082871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.697542597 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.704506659 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.694535324 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697753341 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697566412 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.697577451 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.696014042 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.696686611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699696929 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.696381562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707965083 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.697610315 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.69807636 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704804727 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.697379338 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.69710212 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.699692238 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.697980306 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.694794524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.701201295 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.706694815 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.698240965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.699202344 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.698893283 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698600937 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.699048784 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.703801722 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.69865687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.700695504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.699672356 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.699358998 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.695937067 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.700703881 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.699651708 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.699998903 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700534644 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.69853673 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.699357238 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.699833719 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.698303718 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.699124505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.699380553 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701374132 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.707403568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.703507273 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.701754524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.700926968 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.699594738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.70323058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.699355663 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.699207118 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.698915315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.711596437 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.708940685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.70572104 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.701268162 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.699565491 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705536999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.701831471 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.703541851 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.700672878 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700698467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.699145588 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.701804195 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.697720676 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700216538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.700092434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.700766592 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.701254678 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.704443224 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.70020449 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.699981097 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.700736141 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.700241148 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.700802201 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.699471461 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.70039723 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.702725437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702259385 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.701288107 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.702486545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708009046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.701546096 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.7013167 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.700356643 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.700159975 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.70071679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.701924218 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.702106529 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.705220225 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.709875738 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.705626966 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.710594464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.702330068 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710615902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.702348843 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.705456084 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.711168593 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.70213275 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.701205021 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.702274877 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.702166674 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708635576 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.702650514 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.701850465 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.706833929 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701985915 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.702418616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.702287682 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.702165717 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.701832747 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.702748969 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.710737123 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.703346564 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.706191502 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70413628 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.701492331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.702258051 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.70205321 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.701618249 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705403422 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.703028318 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.702816168 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.703049124 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.702367477 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.702713325 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.703475517 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.703353999 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.700018252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.703256321 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.709550527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.703417182 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.707533116 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.70442402 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.712700593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703531482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710433622 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.704449924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.704126055 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.703984127 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.703818332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.705747854 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.703981661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.705182526 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.704576083 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.704958079 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.709302445 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.705632842 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.705970349 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.70477036 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.704756795 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.707276025 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.713881047 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72970814 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.707419806 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710182167 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.702726403 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.706993212 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.710958385 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.705190767 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.703226231 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.707958648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716083542 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713561244 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.706452521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.704786397 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706347783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705266495 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.70649906 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.707288021 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.705076098 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.704521118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.70524724 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.70540597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708450836 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.70660259 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.706853619 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706490642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.707943025 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.716326002 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.706281548 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.706653248 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.70720467 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.704134085 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.705396581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.705369364 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.705407656 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.706011518 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705540013 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.707599199 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713926552 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.714301201 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.708810451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.704811579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.707495085 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.706975476 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.707086682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.706600304 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.706288051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.70783969 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.707486714 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.707391611 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.707287294 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.705936523 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.708134474 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.706787685 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706561663 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709917982 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.714573824 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707762739 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.703857688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.706971104 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.706806717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.706434214 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.707982969 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.71568509 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712144684 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.719387234 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.71706016 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.712487418 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.707490917 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71293634 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.715902036 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.70619721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.707585641 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.707496553 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.707863499 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.708139136 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.710988605 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.707545011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.71494484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.707652447 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.708726515 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71579273 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.709686016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708709356 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.710076227 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.713015892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.707876362 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.706778397 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.70881425 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.707448175 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715960359 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.709594412 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708490071 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.710078754 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.706920416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.710072454 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.713563751 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708927298 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.70940973 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.705693032 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.70986662 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709399323 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712151345 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.705955234 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.709428723 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.708751299 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.713388632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.716979359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.706616388 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711801625 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.709741018 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.711455833 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711194669 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710657587 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.708313367 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.70811024 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.709392223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709950192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.710701572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.71280233 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.708634764 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.71128411 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.714372894 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711199653 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714400557 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.721093305 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.718650288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.707117818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.71026511 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.710856289 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.71276008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710701008 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.710842968 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.710121992 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.711257447 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.710419569 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710169387 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.710843819 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.713759829 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727501175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.712816083 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710214225 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.711269978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.714078841 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.711301659 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.708368148 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.711784055 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713084627 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.714033764 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.720217548 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.711200844 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717644984 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710717965 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.713569152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.715027364 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.716332482 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.720494102 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.714776205 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711988745 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.711423119 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.716658187 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.729211179 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.71242128 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.722160036 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742854596 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.71393125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.712371933 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.713362304 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711215208 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.712691649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.715133236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.713648266 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.712230503 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712120951 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.712634094 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.713701355 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718826648 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.714022244 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.712397716 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.712209631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.712293157 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.713399547 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.710782428 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.712669856 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.712988971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.713236833 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.712850471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.713094725 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.712858807 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.726312348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.723805007 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.712872283 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.714085143 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.710186525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.716949177 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.718234731 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724604263 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.721177935 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.71435796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.714317364 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.715483662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714982901 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.710872858 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.71377172 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.71384745 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713478205 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.711285021 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.726917783 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723412836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.718901653 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.714228652 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715297755 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.713829722 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71589589 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.713679775 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714137831 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.715834666 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.715380016 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.714387437 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.714324359 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.717615869 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.723298213 seconds)
  done (took 1016.448177027 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712958351 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712232193 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.712234395 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.713710157 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712153339 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713407293 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712905388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713360946 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.712636901 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713333812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.712982226 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713927422 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713059718 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.713808395 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712522271 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713522231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713671853 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713661917 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713269217 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713219685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712553622 seconds)
  done (took 37.612448022 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.716258569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.713997044 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713788602 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716085851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71308912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.717044538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.713957738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7153378 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716378575 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713891667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716206648 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716036462 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.714059502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.713681511 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71441271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716941316 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.717272599 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714149218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.716952987 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714665709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717041453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714349522 seconds)
  done (took 39.375067271 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.716992067 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.717966542 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.716222056 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.714130809 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.717410194 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.714223348 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.717756116 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.718037411 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.717652588 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.717592083 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.716843136 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.720498446 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.725931104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.723887846 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.719877664 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.717678554 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.862246012 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.717985466 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.71917609 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.717343118 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.715128295 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.724750421 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.716473655 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.716036574 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.716747348 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.71897576 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.718044272 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.719145554 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.719864595 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.720252904 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.723756716 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.718490076 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.717615886 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.719876171 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.718189673 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.718349815 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.722934468 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.719941414 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.715862245 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.718011528 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.728187415 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.739868146 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719930269 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.725320458 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.719331194 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.718803954 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.722793357 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.727788536 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.716827085 seconds)
  done (took 86.046990345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.71885959 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.718368777 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.716995365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.718351152 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.719378917 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.718833927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.719993306 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.720382371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.716934592 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.716503327 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.719580766 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.717399227 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.716577459 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.720349595 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.720191318 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.716644218 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717322754 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718006274 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.718136028 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717412015 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.718256893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.720098874 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.71956753 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.717228839 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.719096726 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718300798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717559688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.720067965 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.717898593 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.718220777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.71978441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.722016813 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.720573937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.718631648 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.718328285 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.721489552 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.721241896 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.718869662 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.721431612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.71935588 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.720581471 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.720531098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.721948019 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.720405581 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.718649284 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.719023523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.720071763 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.718433382 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.720637676 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.725217626 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.721212158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.719338174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.721698652 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.71863555 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.721827996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.721772555 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.719332667 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.718206776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.721292345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.718943187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.719389716 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.721795097 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.719342632 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722381921 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.721661278 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.720449349 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.721610146 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.72197975 seconds)
  done (took 118.573864287 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72311641 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.722561043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723135759 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722910017 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723559066 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.722591278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.722590025 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723745078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.724119526 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.723063445 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.722977936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.722895799 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.724361476 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.723388006 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.725273575 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.723642992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.723294426 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.72492719 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724249421 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725001487 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.723580347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.723818597 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.724634867 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724730117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.723624763 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724014577 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724267159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724414091 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725106123 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724184439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724719638 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.7246275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.726250753 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.723970426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.724127127 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.723952537 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.723902765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725436031 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.723855542 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.724324257 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724408862 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724980073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723999455 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.72525377 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724624761 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.72439493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725122027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.725475462 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724365356 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727517144 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.724828898 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72518077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725348202 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724266846 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725103184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.724944165 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724909467 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72505755 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726024133 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.725662625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725712819 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.725647976 seconds)
  done (took 108.557299425 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725363399 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725559806 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.723573217 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.723334125 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726788231 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723355629 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726175829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.725249765 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.728633097 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.726346358 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725498063 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723787528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724240523 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725480776 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723097494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724939554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723023398 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72365302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725189519 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723310256 seconds)
  done (took 36.143257911 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.724938941 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.726483919 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.723450173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724708357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.725963991 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.724536951 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.727066206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726032 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723788677 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726450791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727001593 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.726232663 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723856484 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724128851 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.727427041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.72426722 seconds)
  done (took 29.254446542 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.725032783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.728467359 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.726810819 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.726666655 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.723854114 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.724563282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.726536905 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.723987687 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.723863603 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.727355218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.726988595 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.727755263 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.726973792 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.727918056 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.724476115 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.727406733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.725715625 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.725159131 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.730780649 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.728227388 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.725191469 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.724312226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.727425793 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.727356536 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.725312017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.725889424 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.725544527 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.726174393 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.725436335 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.727980699 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.725851535 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.727106216 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.726015878 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.726497455 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.728753695 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.726912365 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.728453855 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.728392793 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.728874179 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.72898178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.728483981 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.726229907 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.729521135 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.728857819 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.72631035 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.729648946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.727431978 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.726757099 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.725936725 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.727094339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.730084494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.729270514 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.729427188 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.730406705 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.728521354 seconds)
  done (took 96.638794431 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728786038 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.728851527 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.728081998 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.729930152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.729361782 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.727163055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.729773629 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.727309841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727191749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729722297 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727089815 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.729923579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727743797 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.729509126 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.728686264 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73163946 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.727221686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.72765418 seconds)
  done (took 32.765747424 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.727672669 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727973264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.72999225 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.727809988 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.727795622 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.730269527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72838918 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.730308236 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729989958 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.72795802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728880188 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.731259635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730440825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.732573468 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.729592382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728889038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.7310856 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73193749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.728479384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727863842 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732299407 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731000468 seconds)
  done (took 39.704175724 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.729821179 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.73010094 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.747510134 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.752104431 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.753437363 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.767894717 seconds)
  done (took 12.133101795 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730551275 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731141607 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730129435 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732205977 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731468712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729011234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730186779 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728681334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73203532 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729683129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729613339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732545588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731861402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729783039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731941035 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73251868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729624258 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729766972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730299262 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732455232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729385721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731233594 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728322904 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727976914 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728034266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729182 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730889077 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728817331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728976486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730346693 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73144773 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729911574 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731672531 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728573148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731652181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731900055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729247514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73087455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731211528 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728837739 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.731796865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731912059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73222843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729450205 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732003256 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729749784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729563732 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729604864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729761746 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732677971 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731820711 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729760418 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733242042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731697941 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732328772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732858794 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730700882 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730130491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732728273 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729648879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729681904 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732182387 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730284003 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730581017 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732656638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730198044 seconds)
  done (took 115.877013709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729818753 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.73053777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730732844 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731572426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730895663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730231989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730612561 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730742526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730465872 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730668608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73305209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732031826 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731417231 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730703439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73078751 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730490013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731211575 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731118537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730852628 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734308346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731433541 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731600406 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731714301 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732316168 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731934028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734053306 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731329798 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731595178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732684588 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732248584 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731834184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731199378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732838809 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.731906449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732785176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732045628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732515726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732314265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733434138 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734599777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733440223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73488117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73316647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733140012 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732328175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73238196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733815184 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733191671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733869789 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733337108 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732562456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733169261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732941682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733409395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73285853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735254044 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732917515 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733340483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733771238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735742885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732825256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733357717 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735980331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733201551 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733274247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733799251 seconds)
  done (took 115.996795038 seconds)
done (took 2367.884303181 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.79026427 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.75305696 seconds)
  done (took 15.199078555 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.896205281 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.848749864 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.733673099 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.753531549 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.733335557 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.732315395 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.747353807 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.734000155 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.733369422 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.73261157 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.73324221 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.92507574 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.737507259 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.733653139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.733633291 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.82660313 seconds)
  done (took 49.995130364 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.735583384 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.736269663 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.745776268 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.738988459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.735677581 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.747690655 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.768143624 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.739032601 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.770244852 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.752895056 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.807338575 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.74585189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.730295347 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.781091202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.746298032 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.746483871 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.823007649 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.80789298 seconds)
  done (took 33.314368507 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.809873625 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.734706369 seconds)
  done (took 10.203888686 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.729974266 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.769691988 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.790788987 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.74882669 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.721736199 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.753754201 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.726317308 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.742543517 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.726279489 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.76340322 seconds)
  done (took 69.125249132 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.732354802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.728103121 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.727442058 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.726034548 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.719250858 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.725393371 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.725297251 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.719280435 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.400007957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.762147544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.738482532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.731941359 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.726260645 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.728668377 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.72676482 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.751687674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.837086897 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.7252751 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.723870698 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.732254609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.726476274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.795172206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.740713299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.730300696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.7568891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.404304191 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.734858813 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.732840444 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.826441561 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.723742151 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.727224773 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.729677947 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.72884678 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.126220114 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.99037169 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.727451276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.738568096 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.729895231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.720447517 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.859144496 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.722804576 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.731523988 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.464639601 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.967249755 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.832156997 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.765356534 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.055016307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.741579801 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.722545192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.749306694 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.724705015 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.723617398 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.734007773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.214434363 seconds)
  done (took 124.439984013 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.71952265 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.069463781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.887742663 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.717013003 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004385308 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928747331 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717839266 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766638665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.720626133 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952471802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97549486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829945758 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719476188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.717363402 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.715009422 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.715997264 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.874480047 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.794608522 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.719073835 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.715023904 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747350987 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962312601 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.844060154 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.719130322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.74605441 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932609914 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.84011904 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.822989765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.503367903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.715041743 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780815997 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71721702 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.715993536 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.711245916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.873257406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.810284873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799877978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.715189689 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710298662 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709731671 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458637061 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.912984868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810879133 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.84554207 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96774364 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.916997986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49211929 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.707727488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.455541065 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.87352051 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.938621904 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.945292004 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.832729041 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710467657 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.052945837 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704801306 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705720036 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959940969 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930414699 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.808762585 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713205948 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.704702887 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704857191 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001320816 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.712306832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805081296 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712508362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70648898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80463047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810856909 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94382786 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92255363 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.741720416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.049415951 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.211358811 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95547715 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.774203299 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963786776 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711028474 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.7033836 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7849586 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.556761737 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959715007 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.989463795 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957440683 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742916172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.433715722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.701382112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.933443984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933005073 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.966749325 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.953332033 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.942447371 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029408756 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.701941693 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.701181619 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.941267445 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.829979632 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.704556173 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055366993 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935749314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.241731402 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.732535411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.008004737 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.835802983 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.703593678 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.336958453 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70125847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.932587377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.743345878 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.701688079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.699113077 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.924204822 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.701948817 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70092444 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.60251211 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.76533172 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.702623405 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937361004 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.707570559 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97091407 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704426287 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938447242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.197758097 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.733567189 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.878403939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949023662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.702772042 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.943728813 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947202802 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.821133838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9758607 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.607795074 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.699855908 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986611235 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.70277426 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.6997202 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.876357447 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.699015472 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.844694532 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700259316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993362811 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7239933 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93470927 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70290953 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967264921 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738310144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.753588607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.702451165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.832816477 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.700852212 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.963965667 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861639925 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703559915 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.698564727 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.273247443 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.700048883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851633847 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.928853429 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727204399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774603553 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.369245541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.700724835 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788422276 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.728117587 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.091176195 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.701232908 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.953082037 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.702439106 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.698821632 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.699589453 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.989700531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.940616105 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.703192181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700763248 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.611437058 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.699657967 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.699389005 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883917939 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.077261403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.699849246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.904890228 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703726923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.831038438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.703464545 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.787963214 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.038425186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.701394993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.700389249 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.700054688 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.701191368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.70199025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912845715 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.729388526 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.20247468 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.843344564 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976098103 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.015424082 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.945047717 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.748032681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.707621597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959610188 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.703388314 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766591819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.704637208 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.724279707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931790256 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70675285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913389459 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978178695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716227879 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.753262217 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.704206299 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70424314 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.700875779 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.847911117 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786460423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.703491575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.701951784 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.82145538 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.826615169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915081081 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.703864898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.762800012 seconds)
  done (took 867.553977047 seconds)
done (took 1171.489135864 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.701091803 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.702764529 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.694352001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706253965 seconds)
  done (took 28.433291475 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.711105152 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.705793587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.709274114 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.706111264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.708892041 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.706854492 seconds)
  done (took 11.875829034 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.727849264 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.705161726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.70502673 seconds)
  done (took 20.768885103 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.775862585 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.092983942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.811592212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.131325304 seconds)
  done (took 9.439973202 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.708985622 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.709767143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.707887315 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.709976818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.710768894 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.711785799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.709881803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.709919694 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.711676725 seconds)
  done (took 17.023820396 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.697859597 seconds)
done (took 92.868805632 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.002118234 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.864662322 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.568661828 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.775409124 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.690592122 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.895924904 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.111099965 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.936687386 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.733242749 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.720902448 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.319114922 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.81295187 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.839888401 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.794134333 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.690710994 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512383569 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.71670845 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820668914 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.760788069 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.195135791 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.800293394 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.200323304 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.87754588 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.799486497 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.709469312 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.845580612 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.164892339 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.779958629 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.844617579 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.704888215 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.797704937 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.694932786 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.261957368 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010604888 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.944628652 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.801392749 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.696013266 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.802398861 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.888042908 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.089921741 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.908581914 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.879999015 seconds)
    (43/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.825370201 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.819738159 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.021280007 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.111917918 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.890284772 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.952087475 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.984447452 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.092239853 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.968976058 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.930201175 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.379393402 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.650680883 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.73510393 seconds)
    (56/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.011043664 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.053040212 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.892517274 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.437470354 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.695996489 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.888544553 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.061663149 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.696047005 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.335225066 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.058116654 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.743127358 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.819244132 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.864809278 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.728607623 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.051217617 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.683097642 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.871930647 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.693446187 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.299947978 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.07069789 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.002781056 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.71094445 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.792259762 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.628432762 seconds)
    (80/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.711149213 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.063911058 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.710433794 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.33284235 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.729367103 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.141525537 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.864884754 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.202072499 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.777665926 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.87445341 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.890873551 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.851410949 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 6.708636174 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.833277753 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.034354109 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.826941688 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.712739156 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.856997133 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.235706715 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.847492215 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.939296236 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.928141931 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.698092189 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.273075836 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.732238731 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.724677863 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.573847249 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.987236312 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.806014313 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.115034924 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.802643837 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.812488063 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.847607051 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.064082476 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.948186297 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.739430767 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.907699121 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.86755044 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.733410347 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.576587843 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.949269162 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.810529926 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.714577876 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.710414036 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.695768997 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.836430996 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.682336481 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.855626318 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.281775859 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.829792302 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.414518528 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.084253799 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.747390705 seconds)
    (133/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.803071917 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.033866894 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.712999225 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.967689429 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.520750778 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.608159003 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.10243798 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.969185574 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.727621596 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.709086801 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.377154276 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.815409209 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.725832969 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.751460091 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.734987233 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.894087201 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.282785138 seconds)
    (150/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.77979814 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.101489141 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.869749737 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.77936537 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.730835926 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.728623846 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.602780639 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.332562957 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.703692693 seconds)
    (159/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.823341149 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.714692819 seconds)
    (161/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.341238095 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.725316996 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.89130296 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.711608078 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.925011285 seconds)
    (166/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.172508636 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.730799917 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.805716697 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.487550457 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.785907152 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.803563244 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.762702678 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.003625902 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.127994051 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.817874568 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.711416692 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.773459374 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.043914327 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.761145413 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.567580258 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.90930019 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.058320271 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.007710812 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.723378239 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.900355976 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.084333924 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.923754571 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.728428216 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.723925847 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.811599989 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.724598585 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.673410688 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.903859428 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.919251654 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.008632466 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.727117185 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.709070355 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.169263324 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.543050388 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.232580137 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.132831007 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.109361687 seconds)
    (203/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.794118527 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.723768006 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.074172179 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.740417957 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.85550949 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.635720268 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.502617807 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.920071286 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.721482501 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.297406342 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.742532796 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.722623328 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.87098022 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.802239666 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.805823329 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.216922708 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.860501597 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.794017029 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06381778 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.7510553 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836773396 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.72510496 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950302766 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.85748968 seconds)
    (227/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.855864748 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.022492892 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.727144808 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.326788927 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.036517031 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.065781931 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.017469886 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.17882802 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.747073049 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.726241261 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.736345117 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.401690638 seconds)
    (239/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.626443404 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.891734941 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.915206008 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.72574041 seconds)
    (243/309) benchmarking ("sort", Float64, false)...
    done (took 5.475741202 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.42265498 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.871123913 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.71107599 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.280253241 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.810579962 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.710473192 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.979456086 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.727593287 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.857474236 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.711047442 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063558492 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.74092251 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.273633464 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.225056695 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.142519389 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.7403285 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.036419947 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.8970347 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.878748102 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.754075844 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.072088205 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.724624188 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.088431952 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.040187863 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 4.627343053 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.729794018 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.975563465 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.753125149 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.733744882 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.826590649 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065813908 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.799052456 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.914906952 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.677380881 seconds)
    (278/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.809988008 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.755730327 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.826597643 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.729560806 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004523535 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.916336546 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.762113442 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.080925849 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.355327996 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.299329457 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.52838293 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.989919054 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.758022163 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.829870433 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.75751697 seconds)
    (293/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.959907517 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.734012506 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.490063556 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.209262288 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.734789132 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.255498459 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.763065576 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.736781348 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.930708811 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.819956696 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.874358691 seconds)
    (304/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.139615725 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.130891364 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.953987359 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.85454537 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.74384237 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.75522552 seconds)
  done (took 959.945288436 seconds)
done (took 961.638485987 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.761148597 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.755417327 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.739759334 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.760983255 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.851265668 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.768994084 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.750043289 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.741757303 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.787011831 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.789333279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.735890402 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.766738757 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.740044693 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.739393848 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.739856575 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753207733 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.054993247 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.772966441 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.756562869 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.749693325 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.757213789 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.736312217 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.792732336 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.766380962 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.743698721 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.742894686 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.742309929 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.759356788 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.852067934 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.74237763 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.742691517 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.750707522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.054032908 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.771523224 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.735187312 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.759604076 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.752624519 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.749035867 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.743833914 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.774021963 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138249557 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.780368069 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.742158465 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.741880183 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.740810598 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.745479865 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.74197961 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.747603831 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754768411 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75502924 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.132075896 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.798220221 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.743669879 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.74217883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.752063995 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.743504864 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.744682587 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756712055 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.761118338 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755911643 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.037951525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.776428961 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.743255917 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.758910362 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.748942288 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.167301534 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.778851463 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.745289024 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.138641955 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.786563757 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.16652671 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.790242239 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.745478682 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.756456937 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.774122908 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.055156702 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.770730828 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.742735806 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.750616903 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.739589503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.753553789 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.755913218 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.747294851 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.742841277 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756132248 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.770773167 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.752951771 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.743239209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.750949968 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.762931639 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.750081462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.754152302 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.746568794 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.738653871 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.753286619 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.746283917 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.745653346 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.745093855 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.74921194 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.753873643 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.140463096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.799273211 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.740847831 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.740278 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.742461615 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.757517147 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.138761586 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.783723457 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.765476585 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.790620102 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.745746769 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.039708195 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.777711129 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759238017 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.752258414 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.747025085 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.741064454 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.039288961 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.16647415 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.800299987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.745609355 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.741462299 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762214337 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.746190891 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.740892758 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.057797342 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.777911697 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757759575 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.867180521 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.755197363 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.776012355 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.740746268 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.748618804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.777308037 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761487185 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.777329222 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.748978613 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760831463 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.761053473 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.743189063 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.755349165 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.755642064 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.7464551 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.751242302 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.740592858 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.776845716 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758721799 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758362973 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.766659665 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.867270497 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.743784949 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.039698635 seconds)
done (took 274.434039704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.815670528 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.739897608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841144863 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.743161695 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.824502152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.829910351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.740316905 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.741467476 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.740771696 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.11441761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.74167768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.741967051 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.744189658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.743524799 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.825094324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.742943868 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.740021373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.077633462 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.743876916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.814978 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.740628627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.741471024 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.743623375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.116197814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.739697557 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.741079539 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.816534317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.744424508 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.081889618 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.747119813 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.737924222 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.080134129 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.83801204 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.761997597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.753812885 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.750536595 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.826331592 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.749571152 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.825292937 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.826546462 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.842307374 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.784701198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.744141371 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.740251394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.747589907 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.746319367 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.742069591 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.773354612 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.746652584 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.743051743 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.078890449 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.754638759 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.743201235 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.742341678 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.743097493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.776230782 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.743235545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.748890953 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.83968285 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.747052382 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.807105276 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.117273549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.116463143 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.745597599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.74335382 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.743178382 seconds)
  done (took 175.87450866 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.812598554 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.823300791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.811760871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.751482659 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.799728193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.812821205 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750710446 seconds)
  done (took 14.226986248 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.751255387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.746544022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.797243619 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.796626708 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.746894217 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.900149534 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747553373 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.756670102 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.744002199 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.772849712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.746506189 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.746216283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.753314401 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.750487438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.796562211 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.757092056 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863475922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.747603595 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.747323785 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.8952128 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.744997361 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.754775195 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.770782262 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.757769674 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.747503731 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.752857834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.339870468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.74817651 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744566943 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.747145413 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74427981 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.788092491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.747861085 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.747656204 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744860663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862760868 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.748095436 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745506996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.748433597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.742998974 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.748010601 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.748082571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.749609736 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.74557993 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.747857408 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.771155326 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.747408109 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.747831566 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.747518978 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.748326153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.772559525 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.74857532 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.745939317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.74558416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.790386436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757470427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.751797773 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.74577713 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.748578857 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745289278 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.897261453 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.798449429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.748221014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.798695816 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.748579474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.749506461 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.748412049 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.748619398 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.845435689 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.749271679 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800188494 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.748096336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.907596464 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.771709434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751911034 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.752317174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.752543471 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.751248893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.743482411 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.755911242 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.748771746 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.750800339 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.755904357 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.748552683 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74745943 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861637114 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887911927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.750322551 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.762872535 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.757423554 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.747369339 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.793584216 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.749865858 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.748279379 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.806025485 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.86637844 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.777061056 seconds)
  done (took 193.841791513 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.75623264 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.758790617 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.751890465 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.766986735 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.750405617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.751530733 seconds)
  done (took 12.205371963 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.753100449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.752211965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.751128553 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.750796513 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.752240392 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.751702887 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.750701283 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.753293468 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.755740204 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.75096565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.751355588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.752678665 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.751690897 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.752414719 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.751066817 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.752791338 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.753038583 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.748632245 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.75116456 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752364257 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.905353664 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.751596588 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.752334541 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.752912642 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.756457162 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.752203375 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.761030888 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.752174548 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.751607338 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.757844108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.756729026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.752804338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.755283944 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.758148789 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.756608788 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.754703137 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.757067361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.754516453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.750434687 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.75400718 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.753600178 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.754629726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.754197165 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.754375672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.756021777 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.759802122 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.759321181 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.761407731 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.754254419 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.756603613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.75561739 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.75401956 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.754166391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.753650544 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.756113128 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759533935 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.758138226 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.753903133 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.753734488 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.754756557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.754774906 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.754131896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.75510568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.758041953 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.752802072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.755192778 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.75592367 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.760509031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755283049 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.754164232 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.755594758 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.75230613 seconds)
  done (took 129.140431553 seconds)
done (took 526.969119663 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.929502528 seconds)
  done (took 8.602618923 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.916402156 seconds)
  done (took 8.63477575 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.208854872 seconds)
  done (took 9.884711572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.776025879 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.769080478 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.762868048 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.758099801 seconds)
  done (took 28.764126404 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.886335714 seconds)
  done (took 8.558650125 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.772540186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.749485655 seconds)
  done (took 15.233014215 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.866564677 seconds)
  done (took 8.541212042 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.804421725 seconds)
  done (took 8.490556229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.765353989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.78065467 seconds)
  done (took 15.234838519 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.735262851 seconds)
  done (took 8.408066802 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.500589932 seconds)
  done (took 11.281971821 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.770540347 seconds)
  done (took 8.556220823 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.749953619 seconds)
  done (took 8.423751413 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.838077879 seconds)
  done (took 8.510855837 seconds)
done (took 158.799464662 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.753867746 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.75347346 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.753528453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.752867896 seconds)
  done (took 28.687249148 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.78848658 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.788163511 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.789470064 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.799301768 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.791460503 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.789127539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.782270837 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.780512046 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.799794788 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.791074114 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.791129808 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.790035631 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.788152103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780344061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.790778974 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.790196491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.800092892 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.790276889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.78095577 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.791911967 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.756283804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.800575123 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.79299025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.756309988 seconds)
  done (took 44.574355434 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953191222 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.830039113 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.910714918 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.808933225 seconds)
  done (took 9.177329853 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.809362242 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.809266461 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.821758809 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.859582977 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.883088128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.81884343 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.780829372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.777992219 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.764430558 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.810590651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88534258 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.804276707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.895913499 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.756617313 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.942786619 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.756414045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.756921803 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.808540598 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.859867031 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.874023152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.757731955 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.808463628 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.81193508 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.804989161 seconds)
  done (took 45.334844622 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.755740594 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.763956286 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.763779754 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.756214519 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.759778717 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.75771563 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.762850475 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.75875814 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.778121407 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.757955049 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.756408422 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.757355516 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.756071679 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.757510076 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.756585621 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.770529325 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.770379313 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.757451704 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.760922567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.762900773 seconds)
  done (took 36.897223139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.752156572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605261146 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.103439577 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.008239395 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.753595169 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.755988553 seconds)
  done (took 30.655534124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.771053881 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.765150859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.758292233 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.816735291 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.90128315 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.765787018 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.75913216 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.769955339 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.806093682 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825025677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.782025332 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.787981661 seconds)
  done (took 23.184861055 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.756058361 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.766909163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.755913144 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.78424971 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.769822279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.76694627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.765852025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.752547605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.771726739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.779798265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.766697186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.770806262 seconds)
  done (took 42.888521045 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842570581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640945226 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405578489 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483111744 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288992275 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963125029 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284642003 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922272858 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.75678978 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027333309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.409479362 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998757961 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00945336 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755453903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.827993069 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.231949432 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058238534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997617491 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790436784 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487315411 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88624664 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310301685 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.555640613 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891967567 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964255327 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.887085891 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.014499147 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.713073274 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894246354 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793388617 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764286798 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.755937356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029927798 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973843911 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844421556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765004633 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.412449504 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.471666411 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.760583528 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.537058171 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.52568231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902727372 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762763455 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756661291 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.689352947 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288789725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932534798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.761108973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.459032875 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.75622769 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766764403 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842092979 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.758642662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.570700905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721685298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.034480593 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.754176745 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763572551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320003667 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92620746 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404869477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.696743627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.847673028 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.505991993 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251262247 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.915063953 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.760961258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760753553 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689620664 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.540622367 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890799902 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89396068 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.775986042 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413630909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073234375 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.508383052 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853012119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060228038 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.655339167 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.699606195 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984660828 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713152358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690533519 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.62620608 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69018748 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074243903 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798265928 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.425492684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806735188 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923789918 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76779858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776826598 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765823833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981010271 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.641416263 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761157172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.378863945 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049015584 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780281578 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926610616 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691147885 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.762661721 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012424125 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.968290064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.009784178 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.243794367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9306822 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759744896 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.845255479 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.689762399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.775317322 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049236845 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826233519 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910744666 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901083215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.721483635 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075185683 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792209573 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.931937402 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.450511205 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038790522 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.097456837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017885742 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845476541 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.76118289 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.759763985 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557199131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3928785 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.988302953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.76210421 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265085195 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.775070155 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.761097479 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693511345 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.389940879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.45366482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.892947448 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983507254 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.752569504 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039821664 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693053003 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897835047 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747997438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.983306221 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.431483161 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.849523292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019270192 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261531259 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.01229748 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777834339 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78030403 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842984935 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783934524 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.213542381 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020131352 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.765477295 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.765779405 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.598720614 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84694439 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764245857 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.767013223 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563661596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055136944 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.791535625 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.767549519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649679183 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.775116655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844625046 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76761077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770752771 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.28947566 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.515948966 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.772602358 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.452302075 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001818549 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771477434 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.551094604 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957533578 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.848684843 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048384641 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832348356 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.695846235 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.46510355 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.467359148 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764429789 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697447556 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.763454807 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770487052 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773700458 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.95676427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058597477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818338379 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.546565869 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.889821356 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773633219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.767860542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764571037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.286337133 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937213623 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420118913 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.775548673 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901166423 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.777886058 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69625309 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.766942321 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768999636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.765136135 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.717889005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81684441 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.55721577 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105560819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022032887 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.412687588 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780636201 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.562842539 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.904239177 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.783857315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.393403528 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881301731 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.774203663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827336076 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.774058795 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.527225877 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.563772517 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327563563 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093804256 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098608574 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227351422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.160218312 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.108382369 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934545531 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998509113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292150897 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824758604 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936507041 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709044607 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856088095 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.435847056 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129093376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779669985 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992375206 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164515439 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.454269528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939718239 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975739683 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799720525 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.575368722 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798300576 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.292152135 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92385907 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.426249256 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0029698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934173202 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.402786564 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.89101868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.765274622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241069041 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855514617 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.478102461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126000091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307516235 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.458657859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152575134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773753094 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.211203793 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137539613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.107022391 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.863713644 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701802272 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777927405 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777229212 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.767876073 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.748829431 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.711791036 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.052995404 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778433479 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00070993 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.048081167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057619732 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.680742772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.772875721 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769036058 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079593991 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529075095 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010017591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.122282111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.343885392 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779750978 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700466964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702568095 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.471658809 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775549124 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736004268 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008224937 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.880608239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735117274 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.162065428 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081861568 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022042281 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.782154155 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05486847 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05679534 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503007448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796879105 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.869325153 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.397596922 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.488903717 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.993984348 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008666926 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597279351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997753216 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423114131 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.756070259 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.768936996 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98245776 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993866002 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.459858284 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038166031 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.495949074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.78797122 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143593802 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837107292 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.458812419 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002499923 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.87379144 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78062272 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851793381 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779196644 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.780071743 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782674391 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815490178 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.447558125 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920994057 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.787147143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861189116 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916574566 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359858167 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.78028547 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061667028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161069791 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120300218 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839607668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771503757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778868031 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70330283 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908307701 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.215110944 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04611839 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.892248488 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.910401663 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796864973 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.425472087 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.059539709 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084693292 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047018006 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.666777275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774237448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859441451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.998333715 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781745953 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.982017123 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011150098 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110130224 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247066063 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.893590165 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043166977 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046590056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146291863 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773164264 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365169802 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.778626539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296842876 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.82057599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457168778 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076185297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78190781 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991459425 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800794555 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.969134234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.225548885 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519598999 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149579229 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.77837022 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.840090704 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063751463 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189887512 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095948999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855207673 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784252135 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.470964874 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913922173 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.753279489 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.045302612 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.776232803 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98355467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.486318753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782888673 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071425973 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095730067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.772856405 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.786036327 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833885613 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.785277017 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996190979 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06060761 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029588422 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783590642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783234475 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.590058671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067396345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8445919 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707654927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.779835584 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871331539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022204931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793775657 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.29127489 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.477779396 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088599398 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.700268313 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796524362 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.166451769 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233356645 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129774327 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.308604208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016384763 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.336670165 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.630687271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148619745 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.782554037 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.157330311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152549595 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.779448607 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259330736 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886239371 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059714831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107105672 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.78379547 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642506604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.827265915 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999935665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372927361 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717421447 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778663378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843096117 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779421012 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.769933442 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788049633 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.785738969 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.631631536 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.615849985 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276230168 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.782838791 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.839597366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.370168506 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324873122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883474483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937562822 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782732648 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.501054096 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.070306574 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030681477 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.263284298 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.848808597 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.781192426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779325101 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.704681062 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975625782 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.971782893 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088869393 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.10114894 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.886216423 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782265306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.992226377 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989140394 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.430362628 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947113177 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138102761 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89026545 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.706829343 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494057182 seconds)
  done (took 1631.543447437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804929518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.79305973 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.784484796 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.848953249 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.793961074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.797737934 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.84208975 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876210621 seconds)
  done (took 56.242678453 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.777802866 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.959880205 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.786601361 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.77847216 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.80313148 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.779226883 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.96896552 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.790318565 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.815825977 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.788393129 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.780529441 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.808360533 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.10109949 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.803058914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.779095096 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.822102243 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.811037737 seconds)
  done (took 72.864825323 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.780299566 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.961735256 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.821955626 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.796673736 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.590328548 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.782805926 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.769735177 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.793473868 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.784561712 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.888865209 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.403939261 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.828315416 seconds)
  done (took 88.905641761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.794299606 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.786105009 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.786599164 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.785217688 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.785272823 seconds)
  done (took 10.647218146 seconds)
done (took 2123.298113298 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.112858312 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.97072159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01248518 seconds)
  done (took 5.686414823 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.926171526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.975499213 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.09471054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.100855089 seconds)
  done (took 9.804028551 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.068296432 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.186552749 seconds)
  done (took 5.95928207 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.102590397 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.799803988 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.166561754 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.781995514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.782289015 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.782897581 seconds)
  done (took 22.055463521 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.784190105 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.786498216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.783925435 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.78660013 seconds)
  done (took 8.845018074 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.767833567 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.470587228 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.766596533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.783061355 seconds)
  done (took 20.491581062 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.935403299 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.900487764 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927755026 seconds)
  done (took 7.467704544 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.342418949 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.130893097 seconds)
  done (took 9.177956945 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.944946314 seconds)
  done (took 3.650126477 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.815209324 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.056349515 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.312205858 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.35694864 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.441240485 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.09433784 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.136297212 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.021971742 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.245769639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.273172662 seconds)
  done (took 24.460221486 seconds)
done (took 132.482996284 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.335445499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815651452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.98854569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.15395317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.026321767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9896517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.006833932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.153109366 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.843145689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.832424295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.169413583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.024929933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956167566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802423881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960250504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802650473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.017044049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.162327351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.837849403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.075248307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015807297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.796370448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.992830706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.811484518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.022950926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940968625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.344256645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.808505061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.971928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.354264883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.948744978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.212938248 seconds)
  done (took 165.881810279 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.787002408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786578238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.785872016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.78551325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.273246165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.787265804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.788372338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.787213265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.297613825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.294348277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.787464391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.268191805 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.789928738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788928426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.78674694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.788498233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.432756214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788490742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.787476835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78673019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.787067541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.090401796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.787378245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.09793913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.430027063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.787100791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.78765275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794843243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798183487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.798332644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799995922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787814716 seconds)
  done (took 206.836367772 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.766005529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.788855113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787342747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.788633052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.78838468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.79092805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.78831088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.789232918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411150188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426334637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800300532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.793818193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795126157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788139262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.796703304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.788642757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.795371467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.767921597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796999519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.800070348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.806546864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.623891609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.803725903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.598322554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.795136349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.79482718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.789778315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.796982593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798005325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.798411256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.80281128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.78900935 seconds)
  done (took 217.969717753 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.042987428 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.794719648 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.795169368 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.703199431 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.79478579 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.794205851 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.785999838 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.04174284 seconds)
  done (took 18.478048631 seconds)
done (took 610.88005857 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.284937654 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.132791226 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976424269 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.819193393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.061361677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.854006241 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.814747325 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.883640084 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.44615106 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.888169012 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.476958683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.840245415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.568626371 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.846924924 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.940891285 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.874994374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.362088361 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452522755 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.995467989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.88558931 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.988762748 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.744412459 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.897313937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.481352055 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.585140998 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.797970562 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.882998843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.360190208 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.827197816 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.980929213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.592135188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.139632099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.831362679 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.813489344 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.866957352 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.849081724 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.093979952 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.830350638 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.938875364 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.546991621 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88280781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.351622073 seconds)
  done (took 99.402439183 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.786628747 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.784218964 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.784110657 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.785066644 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.783874638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.785026844 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.784198618 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.78528536 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.786987096 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.786313674 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.785900354 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.78797632 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.787660402 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.787642325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.787538286 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.786856731 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.787960705 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.786606783 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.785573254 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.785662345 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.78684878 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.785742216 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.797562649 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.786157621 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.7867419 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.786012739 seconds)
  done (took 48.17493499 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.79732065 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.951264538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.041219161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.819956439 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.798627439 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.801118884 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.816488945 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.804072841 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.79943604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.80014096 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.889457 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.805078511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.818575636 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.039846821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.81768424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.798901589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.798650762 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800321933 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.957172841 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.816411103 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.819975275 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.804946682 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.818530058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.813288103 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800991248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.79982386 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.802776974 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.225007564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.80919527 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.893581404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.858029968 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.825432856 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.176473461 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.05096931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.858352051 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.811423039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799754699 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896402188 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.805748501 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.80032955 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81742354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.806990039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.038684954 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.291257645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.815380115 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.799461951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.234926255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.906926168 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.841753189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.813205799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042317457 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.819038076 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.801545264 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.800620489 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.837072919 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.805349321 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.800176878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.097396263 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.813569296 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.817788711 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806074753 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.80038978 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962037662 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.809934849 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.957311608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.812420187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.807882273 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.801971342 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.041725297 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820321384 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.285552353 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.816055973 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801081365 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.894143466 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.962076552 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.264061587 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.814819801 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963288862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.19307417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.828616786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.811454909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.216867679 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.831979701 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.810088827 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.80306217 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.803603845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.802152537 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.844086708 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.819082138 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.227429135 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.296587736 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.116003417 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.831096502 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.81769155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.802507182 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.098585257 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812923711 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.802266836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.037567073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.303456442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.817863512 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.809580225 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.278805727 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.819430839 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.822284814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.811509806 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.047387844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.822798479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.845981303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.802359881 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.808978777 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.806115059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.822799575 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.811008028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.80265833 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.272405426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.912160862 seconds)
  done (took 223.607761254 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.799980294 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.811924004 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.797807789 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.81518543 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.799239361 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.804302411 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.798151776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.798126706 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.803998743 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.798564008 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.797825514 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.800717992 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.801969263 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.801478171 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.813599805 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.804600321 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.405314484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.800599123 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.798245682 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.836872887 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.454277201 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.806499759 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.807008324 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.799547878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.801773163 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.801393392 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.805672184 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.815515148 seconds)
  done (took 165.503457586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.805542766 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.92248166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.828071039 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.833991705 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.813698564 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.802303812 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.829541285 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.821471637 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.811338079 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.802990575 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.802688327 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.867436016 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.816166539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.902707827 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.838658476 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.835760432 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.910327681 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.814000693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.805130146 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.804068351 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.835478241 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.800846287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.866076986 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.933994603 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.826893765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921397317 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.811545786 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.806690244 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.805471055 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.92357515 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.821982248 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.866122221 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.836201168 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.824427329 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.928100814 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92361643 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.911455046 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.835378338 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.810168968 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.804024835 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.804035745 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.794184811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923170611 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.828046177 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.806512424 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.911255152 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.827436045 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.808739628 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.816471495 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.806066593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.82021184 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.825971537 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.874120211 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.940291997 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.842240094 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.832026048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.830947044 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.110873032 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.818004198 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.906434342 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.802757196 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923503706 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.829014517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.795189682 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.808134886 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.81198028 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.83619922 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.840310448 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.911655576 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.815498702 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.906043525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.843270131 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.814276097 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.805256456 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.80884143 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.923372905 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.925220811 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.842876079 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.845927618 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.839502228 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.803812646 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.807669446 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.795903402 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.826293416 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.810884987 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924198447 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925471274 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.816557065 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.808903789 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.808570306 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.809785775 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.833666612 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934010368 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.844498726 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.902429388 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.878028546 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.884451099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.82594936 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.821148324 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.812579493 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.872473945 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.826601433 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.819430045 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.161873513 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.879814654 seconds)
  done (took 195.978571782 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.300222816 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.867580756 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.865320526 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.122552086 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.171641502 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.748314624 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.860742983 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.859105686 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.877301573 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.051705541 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.933662067 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.87735337 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.847227355 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.83132182 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.856232699 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.878311025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.86759664 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.178748154 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.968134438 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.995421946 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.841809978 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138539331 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.131029171 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.245103165 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.893195133 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.185536647 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.525275458 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.006034244 seconds)
  done (took 59.65796928 seconds)
done (took 794.036552124 seconds)
SAVING RESULT...
DONE!
