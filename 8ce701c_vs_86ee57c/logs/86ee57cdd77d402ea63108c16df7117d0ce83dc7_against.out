cset: moving following pidspec: 18175
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.238915457 seconds)
loading group "string"... done (took 0.634449199 seconds)
loading group "linalg"... done (took 7.664309692 seconds)
loading group "parallel"... done (took 0.157831285 seconds)
loading group "find"... done (took 1.145504342 seconds)
loading group "tuple"... done (took 1.772297099 seconds)
loading group "dates"... done (took 1.292297096 seconds)
loading group "micro"... done (took 0.216303775 seconds)
loading group "io"... done (took 0.912804173 seconds)
loading group "scalar"... done (took 37.535995018 seconds)
loading group "sparse"... done (took 11.502983363 seconds)
loading group "broadcast"... done (took 0.929703742 seconds)
loading group "union"... done (took 12.366876603 seconds)
loading group "simd"... done (took 4.347657368 seconds)
loading group "random"... done (took 8.502218889 seconds)
loading group "problem"... done (took 1.805571025 seconds)
loading group "array"... done (took 20.12677852 seconds)
loading group "misc"... done (took 1.647755347 seconds)
loading group "sort"... done (took 3.132784849 seconds)
loading group "collection"... done (took 17.24720792 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540607432 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1306647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138363198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127353137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153282353 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124436149 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132447679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091492281 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.896033807 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157993259 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11981565 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416893102 seconds)
done (took 5.456039687 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178196413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08742104 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088392351 seconds)
  done (took 1.276249122 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074943965 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133417382 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073491019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073197595 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073167319 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072554167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072691108 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072208606 seconds)
  done (took 1.672102969 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07882121 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074808489 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071675978 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074474879 seconds)
  done (took 1.402417167 seconds)
done (took 5.716424559 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.779369796 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213945247 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190198736 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400126231 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134045748 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179223875 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652569263 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316534187 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192017393 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08182747 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112809345 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350362948 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126138684 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646361408 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079800302 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095572405 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144859754 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427274525 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073122952 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087835621 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094683519 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134458695 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090186946 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079332157 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153127368 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073373674 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140196659 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085891842 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072136882 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.219865267 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178368805 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687551709 seconds)
  done (took 10.428130695 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104235131 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104386455 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074793053 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130719774 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103671881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075412714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081317681 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073241467 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098155791 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134659911 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097094136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111570137 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071352541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074879122 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089332704 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214274352 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085737791 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087171537 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075890559 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083822633 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113852733 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083988327 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085962284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08542924 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134106954 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185625454 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102427374 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103152395 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071911476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086825722 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1204044 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132649574 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071679831 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071483518 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131473287 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100926483 seconds)
  done (took 4.795718175 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.986099685 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146897817 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09440342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137668998 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07106969 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112355978 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074450472 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086183947 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212380834 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368949088 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590769827 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135659665 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115553655 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108715693 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073150435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074247443 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09706371 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073120269 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502361513 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105986647 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113831877 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087118102 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076247139 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07534835 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071869938 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073144492 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070325994 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074757411 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120425026 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080210487 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.306445916 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126169142 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073590339 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946692842 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172104641 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071438659 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.246162375 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169336203 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096320423 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144044116 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074210858 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071563704 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163593996 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070490555 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076814825 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071993165 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090189223 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108985783 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125556608 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071607987 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071719319 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172762367 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070739831 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087585199 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.148652253 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157965742 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071887044 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29421117 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095422672 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076160047 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071352656 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.170399214 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124937151 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073641128 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072940167 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073984651 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074587346 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377159914 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07343881 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.870222481 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075975356 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082555249 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075546868 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075072263 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070639348 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078012164 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07868938 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094093886 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071569166 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078923453 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074415284 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072180071 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072373 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088081324 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379426176 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.176022186 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074482637 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071319586 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096250112 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101345613 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072906644 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071378368 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104553773 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073530638 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072151922 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072180769 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089135333 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075313307 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119273201 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071844648 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092035862 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102762656 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074862057 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104360964 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084090921 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073653388 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.438289333 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070602819 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075801658 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069901065 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0709649 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073059777 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071653565 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073225884 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086813934 seconds)
  done (took 22.16356692 seconds)
done (took 39.475225531 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247132632 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074909892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075164748 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075657937 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075569395 seconds)
  done (took 1.733062761 seconds)
done (took 2.906833114 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12470513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103161159 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070624907 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102106329 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073031954 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105205088 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104270382 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081939213 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103658741 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070095753 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101505923 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070532698 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070358968 seconds)
  done (took 2.364772521 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089439042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089453224 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075915282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088378096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069937041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088096466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0876002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094286355 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087651779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078166508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069352453 seconds)
  done (took 2.083787617 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087692251 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08966538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075883024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087474612 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07147619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086900784 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087372692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091385389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087130009 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079859266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069514106 seconds)
  done (took 2.076638142 seconds)
done (took 7.685646332 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081767808 seconds)
  done (took 1.234019103 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.535444791 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.707132849 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084760732 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110108333 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193090453 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116722467 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.25104691 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089010571 seconds)
  done (took 8.398535473 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106395353 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078065206 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07694407 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074415317 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073988887 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074128273 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075666972 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07626703 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076728813 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07483081 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075203471 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074430571 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076814608 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077698292 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07771998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075605799 seconds)
  done (took 2.471021174 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097281955 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096155227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079398531 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080517107 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077863279 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077697729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079333417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078794244 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075862184 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07815641 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080818204 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078433688 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076813515 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069266144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079066725 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081203564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076280473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079429688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079966968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081053838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080308647 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06910216 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076885791 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079196065 seconds)
  done (took 3.158340736 seconds)
done (took 16.425476563 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110866626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073265238 seconds)
  done (took 1.339188718 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084458984 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085661097 seconds)
  done (took 1.337209194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085825035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070126298 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09294874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081669524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070646672 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070631392 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091006027 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070669181 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070768604 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070921096 seconds)
  done (took 1.942336368 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07292846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080998732 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074824448 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085203877 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077861207 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069148937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075845675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072402903 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080692881 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.068277367 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.076141909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088156509 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07542302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089815061 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076065323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073699853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075153893 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072069504 seconds)
  done (took 2.552948269 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070905521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072000679 seconds)
  done (took 1.317193876 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072411565 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068949156 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071271925 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071389529 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068679343 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067633913 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068569796 seconds)
  done (took 1.658305256 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390489721 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121032632 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305584829 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078041478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086780329 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259431121 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07265318 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077003634 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077001233 seconds)
  done (took 2.675319971 seconds)
done (took 13.994322587 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08630196 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093335362 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100506161 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385163696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097537498 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072722147 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119189702 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184439718 seconds)
done (took 2.322710482 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219416202 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.77180014 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.484721782 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209297092 seconds)
  done (took 2.63962219 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344236455 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093425731 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.179831017 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073133247 seconds)
  done (took 1.874657345 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072576427 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075650404 seconds)
  done (took 1.329624989 seconds)
done (took 7.241253093 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073007151 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07228333 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069974149 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072450936 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06981202 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06984498 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072346834 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072213919 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089184871 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.071719174 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.072303555 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072135977 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069379838 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069456861 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069436883 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071497302 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071669276 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069257776 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069699369 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07169131 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069295109 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071783522 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069384245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06956809 seconds)
  done (took 2.927324032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088513467 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071593453 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076049693 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075336269 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073626899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075624479 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075913741 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071563975 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076107642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074082048 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073299777 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07337821 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07368133 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073462044 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073597458 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074027949 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076169071 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071896594 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073990913 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073864228 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075675176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072009638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074080785 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076230417 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07360657 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073932267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073920488 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07184822 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075960843 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07387287 seconds)
  done (took 3.429295837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075907756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068197127 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068813692 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076765829 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069093844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069399283 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068468473 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069015428 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069418463 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068853402 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069439945 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068695892 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068687258 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069641531 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06952183 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073020735 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085060629 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068470707 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068886094 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0697289 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075233366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068594905 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068782683 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068533798 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068535665 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068439772 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069274438 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068242929 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069634833 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068614186 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072398773 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07342734 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068728556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076568663 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073187631 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068278648 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073245016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06820901 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069133911 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068357991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068057817 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068528225 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068573504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076768944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068521643 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0697899 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068600741 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069754587 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069166365 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070725248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068356862 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068286962 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070544799 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069547625 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073194718 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068291126 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069578999 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068537623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069564404 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068488385 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068541767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068438294 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071784572 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069371385 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085808088 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076859016 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068800162 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07029979 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070003727 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072029271 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070860876 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084526293 seconds)
  done (took 6.281353242 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093778092 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093162262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071262688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070737443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066715602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069230765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07499634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069213692 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071415477 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088872208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069403083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071124204 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071406013 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073202829 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069767824 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071835935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07817133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066917982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069162012 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07313931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070265914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075087372 seconds)
  done (took 2.833489186 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153704154 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076520648 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111351725 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080406372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07572546 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080957995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07537142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075472791 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075246061 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073343836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073369934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0757991 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075030665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073057527 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072852495 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073121661 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075141004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073143294 seconds)
  done (took 2.667595572 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08274004 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071957489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093852193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072195051 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072561004 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074399459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075874212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079217355 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.074234833 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072237777 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079422547 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074442805 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074115078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072005176 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073996106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071665899 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074240156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072007967 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079244375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075803177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075779087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079372183 seconds)
  done (took 2.870412084 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085975322 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074007149 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086761607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073364004 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067035305 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069496138 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075452282 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071630987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075412238 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073595414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071445748 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069696705 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073791406 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071201407 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07401597 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071701576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074107907 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071288712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073737336 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066974249 seconds)
  done (took 2.670592497 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089587456 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073226774 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072691944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079319528 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073082274 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072750827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079293017 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072757334 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072659763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093158413 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072829819 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072935928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079287636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080016507 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072505833 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079322243 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080080975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079644751 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073250644 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07300037 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093979381 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072932919 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079743926 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07283289 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073030565 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073028846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072826069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077451757 seconds)
  done (took 3.358424959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072531783 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071910359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069511666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069850107 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069791811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069641817 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0697732 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06944059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071876522 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070264336 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071891556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071911051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071835649 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072049979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072441945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071698079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072050843 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06956503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069459999 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06960412 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072131649 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071785427 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071628218 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069676206 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069738892 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072064829 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069515629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069511291 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07184895 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069816081 seconds)
  done (took 3.331261888 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079886884 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078210318 seconds)
  done (took 1.364514602 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068017266 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086220587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068556569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077190837 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075633401 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072772122 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078474122 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074868926 seconds)
  done (took 1.803646157 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086471073 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080675194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071738826 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081165052 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080773885 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087590424 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128164947 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071264313 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078099536 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069977609 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084301326 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071217266 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078627194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072327331 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078035733 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079519161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069635903 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076089728 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072795857 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069717035 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072691942 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080740855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075106491 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067216814 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073656545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094566175 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082412757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070628482 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074782962 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079185913 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078035679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065701896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070817665 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071527861 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069157852 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080334503 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085433386 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074665857 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081331563 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07172576 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079856056 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066669006 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076401329 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079411608 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082933249 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07117278 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071424281 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066777453 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070371149 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074733844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066960753 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072625395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066056571 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079213412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075657434 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082187076 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070273991 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073602039 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075183809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074906555 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07869621 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074221978 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075220157 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071019053 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082609537 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077402547 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079343224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066657058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065698835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069785191 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081066905 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095623422 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078077849 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071644053 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07183638 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069712406 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075774483 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072109338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077910778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079013245 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070885393 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075854716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079488097 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072836203 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074644465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078130214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070123946 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073855042 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070483326 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087781126 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072967196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069639012 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.070558202 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081773561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075869391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070169191 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070347725 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079111374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06527483 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070528933 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070758934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07220436 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079843476 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073859651 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074048897 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079253286 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076544421 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07135281 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072948715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06713327 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197968892 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074024578 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081200015 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066902237 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076180271 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074133467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071986869 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080508634 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070633579 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071107869 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079872104 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078595985 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070598355 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068308953 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075595925 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071563639 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073846737 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080184449 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070379954 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066811938 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067105283 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075798161 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071315975 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076124223 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075347814 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075566987 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065862119 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069111347 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075497837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080297607 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072209852 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073407581 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078021271 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073491004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070811835 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078781228 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074714376 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071616184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07724854 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073466394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0673776 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073580307 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074767569 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070497759 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075982177 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07352844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073909859 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071532724 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069490779 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077106406 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071999955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071160782 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072992917 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070197271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082810275 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074180654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066508276 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06874437 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078515157 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070406844 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070641711 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071366972 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074621685 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071692306 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069365026 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071110154 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074329678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079377862 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074228962 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071593214 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076995854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08478891 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070651677 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074326168 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070725831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071744572 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071382386 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081626391 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077966876 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075084978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074689315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068915554 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07712585 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08019511 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071778589 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069671658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071698278 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074541689 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078217191 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07504352 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071707463 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070010583 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073510862 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073844015 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074674713 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070851996 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072286541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076330041 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069304326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076279932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071090707 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082114949 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074893827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06616407 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072663306 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069449522 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077800496 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065464838 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069500615 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07066965 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070542383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069021707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073308898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064650966 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20900647 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081111745 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073757827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072555492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07161868 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08038086 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07437832 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076231755 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076471397 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077859103 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082563964 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072485705 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079043868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083144359 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071253812 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066372276 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0773257 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070169278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070775557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070867734 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070083126 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075520654 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078535193 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078341626 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065648437 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075085448 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069890943 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071710588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067089555 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077280225 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07515051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073830634 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079233297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07182963 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071556452 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07544071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070712764 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071811314 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071769777 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07469021 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071536519 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074644281 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071805434 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075349254 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071271388 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069564701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073896614 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070955602 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073009324 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076619047 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070947914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072060706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074500397 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071555739 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072860684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072703919 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07199146 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075338582 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073101182 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072683415 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074628869 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067061097 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079961324 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070645233 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079590636 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072792669 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068926299 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077026852 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074219016 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075611217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071798059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071500471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073632731 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070897756 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074772624 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079444167 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070695616 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082313049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078931306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073225682 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075117584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073298465 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073753414 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071861829 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073637405 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072487732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073390497 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071631466 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07643572 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074994973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072843813 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07377572 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072571067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073517374 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072805089 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066750221 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071499558 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072136983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.071165557 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079992882 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070998619 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071865535 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069990635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071255113 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070388853 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06788951 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077021121 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07726343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070734668 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077194065 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07073254 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072643097 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081208992 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064997183 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068569769 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.20172676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071567002 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080649894 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072389577 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081986021 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073797418 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072698212 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069365915 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072342309 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070906332 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066393118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069699047 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076866862 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072090115 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070732382 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071301815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075392065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07284142 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081182042 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071361091 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073054403 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072364144 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068958829 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071744048 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072261183 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075075099 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072286554 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07055009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069134738 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070819382 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073588466 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074467197 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070958674 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073544313 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079130312 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071165299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075258758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074179622 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066939564 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07514246 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070943957 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070918396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071385045 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078529517 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075448002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072319961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081245782 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071324685 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07390031 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071215782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069350443 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070666459 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070775437 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071087596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07170524 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072535863 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080104446 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069639396 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075300795 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073323307 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073286568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078785553 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074963961 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076812658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072918984 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073927585 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080454803 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07476902 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075746003 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072046267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073615368 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07791681 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072026357 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078887454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072764863 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071672136 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073892521 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071005277 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071308086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071978141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070717428 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077988258 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071769339 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071715612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072232932 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069392713 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073170662 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073580092 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080306888 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074528468 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075474957 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067067257 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069035632 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072073908 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07083588 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073934126 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074778917 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078182323 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074631684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072617247 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.07007064 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080899796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077155033 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075407065 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070638516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075110608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071032459 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074266498 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073050139 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071908803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071407955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074827529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072804121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070386873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076809487 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074223598 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.203417566 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075612386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074830593 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074029443 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067573504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072028767 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074848111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077149486 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075533037 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071556006 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083009241 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070463241 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073166714 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074148113 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071113864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.077035267 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066534179 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074862961 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071972376 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072354538 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067455943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072204198 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071190555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074873986 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071599799 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06701007 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08246731 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081838886 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074990499 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070918649 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070452004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066877091 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0670385 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071812371 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072123961 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073692458 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08211005 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071537556 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071313154 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066626357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071527499 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075342538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07618697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06889401 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066709857 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072256372 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075141161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077828288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070859074 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071039967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075665201 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074102439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069560682 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073812174 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068827657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075507191 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083910209 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07144834 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07347864 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078172855 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080236594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071600278 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066637917 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071971704 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075384368 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073252349 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072147455 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072236927 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086645001 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075644224 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071636647 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070290396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0775655 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071913539 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079901025 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072136882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071466883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077545224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074480845 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079225337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075736681 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078849617 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075183695 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075474798 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070791348 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072670944 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069465296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071715554 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072348538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071704218 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075873138 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078228671 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071857057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083177399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08105496 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074239027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068758205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072292154 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072111598 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066948569 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071475133 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069074966 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069139285 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069648728 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069935387 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072762602 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07614028 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072989806 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071019835 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070050583 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065264162 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074017442 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073775515 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072786845 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067578109 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070099032 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.203600899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077365492 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075255213 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071453478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074966406 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075212931 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073194092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067263076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079903594 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071536903 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073767895 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072494848 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072071052 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072543867 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076398554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076282743 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072441569 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.075136165 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076084511 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073112652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068977788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068988711 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07712326 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069821436 seconds)
  done (took 45.849862731 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104909176 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068962698 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06767486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067175486 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077771095 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068063963 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067219516 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068130672 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068532435 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069953603 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067152246 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067027665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07475535 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081938256 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07782862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07154311 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066964864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06814354 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067052538 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06801808 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075231702 seconds)
  done (took 2.798094632 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078054454 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082829611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080017028 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087398205 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076179127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0750409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079664728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075001348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083164227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077681397 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083164065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07511514 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078052068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077582538 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077534855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074913175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083157093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076103364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074616859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079688694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074964446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079857973 seconds)
  done (took 3.003570636 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071673092 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071066003 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073453313 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066265739 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070876905 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06646038 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073422673 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069045756 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073785778 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079656344 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.071758225 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071593809 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07394343 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066781194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072329624 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068977414 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112192635 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074013659 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070758471 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071659345 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066392986 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073497461 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067121563 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067250372 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071258162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073668716 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071635672 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069525374 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071216429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071615363 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07108409 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06916551 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074292582 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072443803 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071148734 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070993762 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07351548 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071584031 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066839697 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070276749 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072230278 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06712716 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071383777 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072858358 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069272813 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070225992 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073910262 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070805492 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066755325 seconds)
  done (took 4.796056875 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083394101 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113964305 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072869746 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093572212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084255856 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076946628 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075505544 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09366295 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068534979 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06971361 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085544023 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08310665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070471044 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074842432 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075969915 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070706151 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071701769 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069712564 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073993249 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070156749 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07421283 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077370656 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084740758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082251358 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074525111 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069711317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070035321 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07486851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082259438 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075127783 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074978774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075510943 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085158087 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075429081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070053316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073040079 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086207309 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070703758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072779808 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068302672 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07270068 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074751763 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077727522 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086114793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070892727 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075604014 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070296927 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068030524 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082188306 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072906292 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078137698 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083570611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074076332 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071250248 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074878733 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085046474 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070528663 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069137388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073498727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081720237 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068980734 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074427986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083175436 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07211646 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077385209 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083135829 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075416666 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074206578 seconds)
  done (took 6.616424423 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08099019 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10232578 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08762396 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089291825 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081047766 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080979615 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081006859 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081116387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089376216 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084749444 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080724167 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121451742 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.076630978 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083689282 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08104826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081596947 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081583396 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081442584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081146494 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080868277 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081225919 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087525081 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081202548 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087937328 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084086334 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076966443 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081429337 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080953644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088293016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080951448 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084103673 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081508641 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081322489 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087941222 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084307972 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080846791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070380231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080771377 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080907946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081259777 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07658996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087309032 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080767076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076385257 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081345961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081016007 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08760171 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08472067 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083573653 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084631481 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081136461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087671023 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097110599 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08071983 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087536607 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089695016 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087044135 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087078911 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080537804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086962242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087268219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090093254 seconds)
  done (took 6.523969806 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086472261 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077662205 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089645408 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06663574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068969322 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077277069 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069777935 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070063456 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07773587 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078240779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080144272 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077559517 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079498881 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0799411 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077174154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080352058 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077151824 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077268205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078387073 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077504133 seconds)
  done (took 2.86857685 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080804584 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088654076 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072687137 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077394643 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074720164 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076746512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074129539 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074658987 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072360306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074844158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080726383 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080857379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072490374 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076669989 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081227929 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076841896 seconds)
  done (took 2.542550493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088378679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077659674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083535163 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070828322 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072733032 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067707904 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070660518 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067076086 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067361875 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083903189 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070603519 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082219028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070429632 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069768743 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068268542 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076515228 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067219144 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068510988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070771689 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082010352 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074626244 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069395506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074536654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070703354 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073798201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075333113 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070151702 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071660571 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068112548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071427839 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073998109 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074775127 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06808923 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069375284 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069846024 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068307309 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07069537 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071288617 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076418001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070999205 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069438032 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073373333 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071062879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071706802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067532419 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071213073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067596882 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074033508 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06870396 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074271337 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070777028 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073064767 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071428481 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078289293 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073736509 seconds)
  done (took 5.293591245 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086611392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075281618 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067066051 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068776875 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075277373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073317276 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075103747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072202259 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072624176 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069146537 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073145317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074053639 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072423841 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075601422 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072772089 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074646458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066678845 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071864725 seconds)
  done (took 2.638843113 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078323907 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071564569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07901382 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07199734 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07153308 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074256363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067001972 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069831421 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069615728 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072103187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071817904 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073814971 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069474726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073595158 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072092788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071723815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074458935 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069596555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071387678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067104553 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073763612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070088355 seconds)
  done (took 2.895393041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098978779 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088678743 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14333933 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084733862 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091861375 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077457263 seconds)
  done (took 1.898356073 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097215255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105313561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072358903 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075106262 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081071879 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075497473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075302611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075239391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082672817 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080685312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078145644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082736639 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082556402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082272141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080641351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080609709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075411137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075700265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072235272 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088078495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075887807 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082735678 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075851911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075472701 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075589504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082711888 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083180098 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080606638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075569795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083038918 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080852564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075832437 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083443394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080486911 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074948752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083344094 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075748879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087678173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080827963 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082285135 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074670833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080435964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083049403 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079693605 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082710852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07599904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079362405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075938594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076067984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089264793 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080788708 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082532799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08081913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083189959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082945169 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088873063 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080428561 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08222416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080640852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080530283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082136528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080767059 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082398029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080293133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080847289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082312803 seconds)
  done (took 6.641057333 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109926889 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072962173 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076283236 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080686541 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082259416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075687196 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075602149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07578895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076211323 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072855365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113065977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075949426 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082677616 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082013554 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075837615 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076110258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075892569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082515194 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072775273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089259938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075588504 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082431904 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082070387 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082225098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08055513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080686844 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075455342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075580802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075442508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075806362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079692439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075891419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082495796 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072834828 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082414293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076111093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076437259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079674061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076186075 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080850773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082301473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087618266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075651374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075780534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080737567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075641552 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07565527 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072450276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075449875 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072590549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08031843 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080548026 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080663962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082520034 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076102701 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076446255 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075368013 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075680762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075528041 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080526025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082042061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075541622 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089308141 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075733521 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075870592 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082495698 seconds)
  done (took 6.570230654 seconds)
done (took 135.656084842 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198461807 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175848003 seconds)
  done (took 1.677561856 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074600793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101328321 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081792313 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134306145 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072373311 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106782388 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104289857 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082393798 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071806458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071487931 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071803723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073833497 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136428376 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072204546 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071456215 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074554343 seconds)
  done (took 2.725071538 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102593507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161294671 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106103795 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070920058 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102976675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077759612 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073159642 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080358017 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075897812 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070945239 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07745145 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075748237 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071298741 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074996784 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076165041 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077374414 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07078296 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077862764 seconds)
  done (took 2.850861587 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101809955 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096342455 seconds)
  done (took 1.525196692 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162532716 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138143654 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206910174 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343228162 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159078527 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146897665 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14672859 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145993181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118830462 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141428377 seconds)
  done (took 3.032650709 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105502501 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155218678 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27854258 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121467384 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078483681 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09579372 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122850588 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084586075 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084247458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084619003 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08406108 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080939792 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104539222 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0784358 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080346754 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081064 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107991267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079674226 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080668035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08041648 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105666269 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071895019 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078607026 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079074699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081861318 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081705287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072031704 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072196857 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080507991 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080225297 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081779599 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094758897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081707473 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107017317 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076878774 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107455707 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08174289 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078529966 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080598838 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078364631 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082371807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082469357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0793201 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080946879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072205826 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081630557 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071931288 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072042964 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082186554 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07269157 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082541394 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081385379 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10684553 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072974961 seconds)
  done (took 6.214761331 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11302884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11155787 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075890648 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117045435 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108860438 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074939375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110326097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102912742 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112263221 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075579414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073670602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075409147 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084019879 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085379201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119967057 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111832963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077543612 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074808003 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11242221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111254246 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074496614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105940737 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102191565 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111523174 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073159807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07535643 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073979049 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075242521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080651153 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081953719 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074463346 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083734768 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088620834 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081563285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072834313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073554103 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074141554 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08332748 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083444893 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082666331 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081449914 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073052297 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073617341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074526589 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074612168 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073115593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082140399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082964838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08200833 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073706414 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075328359 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074399628 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074592993 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083060454 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080946415 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084183368 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083633849 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074030975 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074337929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076511826 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083500074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082819794 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082880219 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077211588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083223884 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074063726 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084142831 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087176915 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073923991 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074924146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073902149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073993145 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074637778 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081392019 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081577312 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074984706 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073955422 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073990091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083626374 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08167577 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074097977 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081613101 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073106118 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074117835 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076230448 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075495307 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080516777 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082569533 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075155408 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073572569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073607604 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073130105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072116443 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079273622 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081496827 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080816776 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080478989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073607558 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08050988 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080330966 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208765676 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083254144 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075222794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075891778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076451808 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082135952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08139676 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083143676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073899094 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07386322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082483392 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084761767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07417259 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082280855 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08349583 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082939229 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073343104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085098873 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074943951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083459093 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074582645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084035312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074630763 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082587701 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074021537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072930242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074628979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082506991 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075259154 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07397757 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074942533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07400388 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082495284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086075073 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075780154 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081002209 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081288343 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07561037 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082255902 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07411284 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082592009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074142647 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074886564 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073196176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084839906 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074509059 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074105326 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073921926 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083443343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074524499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083279848 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081693205 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073013877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085007393 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08369268 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080466969 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083515344 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074937379 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073700074 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074157624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073777118 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081125466 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082328453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075273263 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073777181 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08100491 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083115147 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073001907 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081612949 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081656252 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081738017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073665439 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07382835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083721778 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083796241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081353027 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081504807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08184682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073989682 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081076581 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08157541 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074121421 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087538261 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074675746 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086292263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08276752 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080716638 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082252578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083549869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083328055 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083369232 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085628724 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072842541 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073291217 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081382619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073200393 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072523874 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079485466 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073993165 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073744663 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084231165 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072852065 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219322509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074312337 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083786653 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074159086 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075667641 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086311729 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074562201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078865893 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082640978 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074304472 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082009923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084415403 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081905312 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075230015 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075088207 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083389385 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083336576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075013059 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073809794 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076250075 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081946051 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081316664 seconds)
  done (took 19.650707708 seconds)
done (took 39.018546461 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199854909 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151271586 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16248072 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117721763 seconds)
  done (took 2.043864668 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115649872 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102943135 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094033154 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070957644 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100233976 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070797875 seconds)
  done (took 1.914770415 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280508817 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194742349 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177951121 seconds)
  done (took 2.009683153 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203543383 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187941758 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.434970209 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267336382 seconds)
  done (took 2.547656384 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142409027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090773169 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07201511 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08853546 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130714783 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15831875 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100473911 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125438252 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083805415 seconds)
  done (took 2.39925834 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149079067 seconds)
done (took 12.426708587 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.217681719 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127119341 seconds)
    (3/309) benchmarking ("sort", Int8, false)...
    done (took 0.179331312 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088602693 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.234527004 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077146945 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.148102461 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.237049185 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073509165 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08045076 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.227771163 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174143188 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100249137 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254160359 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1179799 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083934597 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.305837079 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081526124 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198041152 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.242029574 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078196279 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.137774653 seconds)
    (23/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094489835 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185454615 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05969477 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154158172 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079428069 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.200382937 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084583406 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079334119 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079974979 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.21576021 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079721057 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08043212 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.119427522 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.123161777 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1444124 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.182554527 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078620317 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082994978 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078806238 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187062779 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.218053955 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115352169 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184069555 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094778884 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097056289 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124840817 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092236658 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.078337553 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095223012 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09400731 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.169898127 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078916747 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070513574 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.227458896 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080073847 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080455418 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200503527 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092425817 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 0.159273984 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196131677 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161361645 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081149668 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068177391 seconds)
    (66/309) benchmarking ("sort", Float32, false)...
    done (took 0.136477261 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.071936821 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058061262 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119937927 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092052892 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077596377 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070464132 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079418756 seconds)
    (74/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095588298 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074135841 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071770663 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069609097 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094324137 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058296385 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117368938 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078749617 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173275302 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068596585 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102320308 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193799844 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083936177 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080558444 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098196117 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154593217 seconds)
    (90/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057974954 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.116947061 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134185602 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081679171 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172852729 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080585077 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070223426 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070036268 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169500716 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157705485 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093289931 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194072819 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081963011 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091264243 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158449622 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096081939 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056590568 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080785332 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095223879 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154795281 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069761021 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079421128 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072153281 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075950638 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094620284 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056413314 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080669333 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.170049605 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070973077 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080335075 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068912791 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192454023 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058062716 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086362554 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162109216 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078179975 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193191559 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.106279409 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056589427 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08193651 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083763675 seconds)
    (131/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.116654081 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.056683591 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074740052 seconds)
    (134/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169841607 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096934207 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056498759 seconds)
    (137/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068771547 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056703088 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07001866 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081993746 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078085212 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089107658 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069441005 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090766018 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076181198 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077827424 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071468997 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075624819 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05741584 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07623219 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070986742 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132798772 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.149522272 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077077863 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114340903 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075904995 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06859604 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191133565 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122279711 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094303489 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069494879 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068741333 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083752445 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150810278 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057613517 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07580684 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120097499 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125270779 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058679053 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07828666 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.105373861 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069588598 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128035278 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.104189997 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075397607 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14882042 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057476544 seconds)
    (178/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075871195 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056078446 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071655458 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.463053224 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096483372 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060793226 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.074584581 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061593018 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.118159829 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062085387 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063444281 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.059613538 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 0.141344256 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.12129185 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059307409 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.125080619 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073812895 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120063683 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07410537 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.072026742 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08615255 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077227224 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08031537 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.077159257 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060721385 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080237647 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157861683 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081314762 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090385295 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082096094 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069223381 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072843498 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.079980732 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070423952 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06110097 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071757181 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.059160698 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150132073 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082610062 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079945235 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148398601 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.123916951 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077247261 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075764256 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132743445 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075392119 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096826856 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175348672 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073630801 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080149893 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059367782 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.072700375 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078230387 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131421934 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072179448 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072156904 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072479459 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05749896 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122725309 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074533012 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072055048 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058375258 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060517134 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058287965 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09252012 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058221882 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101200619 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.074966502 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145140332 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086488562 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070154483 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.08028486 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078170317 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058832516 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070236444 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080003617 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094376945 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05830263 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158812213 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.058531407 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.058329799 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092684561 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074533516 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058153883 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05900301 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074175841 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057752232 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05956271 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071137258 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097550377 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071874766 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05874459 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071789679 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058166944 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058772441 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154535478 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080867032 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057835481 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058189247 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058804631 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0838124 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080136989 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057911416 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084210488 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071916202 seconds)
    (283/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077845484 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059585985 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057871889 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079660067 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061825225 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07223817 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072932678 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059061798 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080216868 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145630132 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071910044 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072516589 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058252497 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072661865 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07104568 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078371197 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077903094 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078806928 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.057886629 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100350591 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07903579 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058848321 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059029396 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071321361 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.347620919 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189116936 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074316493 seconds)
  done (took 32.718945687 seconds)
done (took 34.090580359 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090652999 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10066367 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083940187 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10113384 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089920697 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085081857 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08199695 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087071982 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089788581 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090670766 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087882082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.063729677 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083677205 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082524442 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083165639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098661904 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087330306 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081057677 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081219666 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072068766 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081139009 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073056111 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074286029 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062089613 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08647924 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079422151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081792234 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081193115 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072201546 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072370788 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076402626 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080870085 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071877871 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086737601 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080453027 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.080388679 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08160509 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08392941 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074049652 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072589838 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082028896 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071970412 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080227862 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080422809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079125941 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078230467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079804431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083978979 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096631618 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074277555 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082050418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082847525 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083818343 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079903784 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076579106 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080687073 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077907532 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097072594 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081183953 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074289239 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08202841 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080789278 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078198058 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.08024072 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080093677 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082559778 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083510279 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077872364 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082000332 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078452982 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.072274472 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080063189 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076152462 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074800878 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08328235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084886902 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071112338 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07846389 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080079355 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080874618 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071457226 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07401253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073535536 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078877127 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074019762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061744067 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076587992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079280209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071161913 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080478157 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.079107828 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079695025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07371773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084285028 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071306177 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077858676 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072234794 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072137895 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073878185 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076732005 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071754396 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074452277 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083539723 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073610724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078900888 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086055405 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07212107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079308166 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071181896 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.071588376 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085245385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082397661 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07156273 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074054763 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070778359 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078856337 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071078304 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071051121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071259859 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07106086 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078105864 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.07164878 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073350665 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078730977 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.22551379 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072496191 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077300604 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075026187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072446412 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078754663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072392659 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071993207 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.074040249 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06985492 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074391341 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072709458 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07958782 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075004441 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080115812 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07375853 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080946771 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077310235 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079210912 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078326819 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071499395 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067421884 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075233837 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075080753 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073923311 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072269415 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073103943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071494028 seconds)
done (took 13.547508383 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072924853 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138571329 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098297249 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099153892 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089444721 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073118791 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08066066 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100687014 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074554491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103167975 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093605227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091685666 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115295414 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071056821 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072811065 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076109102 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07363098 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086201306 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10150479 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092906484 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117200309 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072351656 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097040158 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093317143 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091639168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106645588 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073187394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076355871 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076019118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096408071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094558109 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.079092879 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072916414 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100717494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096791748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08719572 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072677875 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087201855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072948657 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072127364 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07399369 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100994427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085375796 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085424781 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076472404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082712072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073582384 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087684775 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093149798 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083413865 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089937355 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103712145 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075097899 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088730087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070865169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089858724 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081136974 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074834561 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07267432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.080236502 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072346682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075725472 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085397127 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084551717 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07639726 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088528039 seconds)
  done (took 7.163926986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090166388 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101613731 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089623979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089682881 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071934512 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073358393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072810508 seconds)
  done (took 2.102610508 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073009406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092702394 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093598565 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09385647 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086951016 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096494305 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082452279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072575751 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097545833 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072190755 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092899674 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103033482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075705723 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083991328 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094845152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072552036 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095286303 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072985093 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075451718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095173886 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076941123 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099848224 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083661318 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073250403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086576841 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.073121172 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117306033 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082291188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073505977 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075931245 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073234065 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11203513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085411057 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084645165 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072943267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086675004 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086699766 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075301144 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083912936 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082389225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085976058 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075643173 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073952608 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07341674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077028049 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082358527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073978791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075987943 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075837268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091880258 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072027689 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085484315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075603714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077938662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.078392704 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077354881 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083726981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074111206 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092278634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073176285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088333517 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087300578 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085759742 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087698129 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075100066 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086012379 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08652757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075796183 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074879647 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.077241302 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087648192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.075550323 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074961254 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082928751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075702584 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095205461 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095126583 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074926135 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086242871 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073697188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073825201 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073099624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095103325 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077955878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073087566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077268981 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075746168 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076032143 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.072256216 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077380476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07356285 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077768842 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076022508 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076292701 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075618651 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088089069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072832287 seconds)
  done (took 9.44002492 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075226723 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074803164 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075890957 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073928317 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074193692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073888272 seconds)
  done (took 1.984631509 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095841987 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074536385 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085668111 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077545243 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109826326 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091799634 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092224935 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083022693 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088551668 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084379383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.092201127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093276506 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096544664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078091241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091903412 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077105122 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092170054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080070687 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083840191 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078356354 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091041372 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.078329464 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079404798 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086065446 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.081490159 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077696935 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.084058707 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084491702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083572685 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082740532 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078044699 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081037321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076125713 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082674701 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091941757 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075923179 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079386639 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082803518 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077609615 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081028928 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092988022 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078006308 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079787847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082717701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082455515 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076087045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082870741 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084996162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091668209 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082503308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082274728 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077059615 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08113866 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082561159 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07600371 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082724336 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082649119 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092171085 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078244589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07631264 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074554988 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.081404096 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082508914 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08229522 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082921226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082694768 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076058179 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078358515 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078195249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076805684 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083097999 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074959769 seconds)
  done (took 7.489544762 seconds)
done (took 29.679905239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54690095 seconds)
  done (took 2.038948213 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613932225 seconds)
  done (took 2.135974409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.589272575 seconds)
  done (took 8.106506235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378430672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486475603 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.72713112 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141511797 seconds)
  done (took 3.288355365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722527177 seconds)
  done (took 2.251290848 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241918275 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232525718 seconds)
  done (took 2.009508981 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.357573369 seconds)
  done (took 1.875078728 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143595762 seconds)
  done (took 2.663759714 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238287256 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167306086 seconds)
  done (took 1.929977803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447085463 seconds)
  done (took 1.969274276 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.896589214 seconds)
  done (took 6.424335317 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225457045 seconds)
  done (took 1.78967848 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243620081 seconds)
  done (took 1.768381202 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738345385 seconds)
  done (took 3.267207084 seconds)
done (took 43.052539229 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088760646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091280547 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090864873 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087282651 seconds)
  done (took 1.864715711 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082104773 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078315006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08265325 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078166685 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081928315 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078489914 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080557174 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081750148 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078529636 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078661134 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078534212 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078524833 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081177796 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080003324 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077057928 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080855759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081663198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078359606 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081154045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07833289 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076673716 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080440056 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080569878 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077711235 seconds)
  done (took 3.440021634 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084060335 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078650083 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080859486 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078021594 seconds)
  done (took 1.85645982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084478713 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095819024 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093985545 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085174661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09601477 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091227838 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075338131 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0749015 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076688611 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084867816 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074123197 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100375512 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093196764 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083837405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086418495 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071655877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073343418 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092187588 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084903247 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085166426 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076152492 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084961383 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073980725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094503383 seconds)
  done (took 3.562321042 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086579144 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106464268 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086095249 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095642335 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097833846 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071467607 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084596439 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097725159 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131628673 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071450567 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077374959 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071321819 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080102109 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07400128 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085910837 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11365678 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117284083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075260181 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103884177 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071743954 seconds)
  done (took 3.343587024 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078163486 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075830786 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076302595 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071528125 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083308659 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078724944 seconds)
  done (took 2.007942525 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07462169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073150902 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07332114 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072519742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077906485 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073191837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072942103 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073085265 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073954254 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073601807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072711584 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07177948 seconds)
  done (took 2.422000609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.188036276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074168886 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074434242 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071541558 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076695102 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072061189 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087474547 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073593353 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097562395 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072698199 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.073301148 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074669944 seconds)
  done (took 2.57815513 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199517745 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081443404 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230403828 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154382832 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111612627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115901695 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115450647 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115707771 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140439828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102558593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163373138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165028135 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109837147 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139270663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094432398 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106750219 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153692896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166475793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11010216 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164866192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14511554 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129827281 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148139583 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105544778 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108579035 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122178611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077290437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084710821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168176409 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133839958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149336689 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115478082 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0956538 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175586468 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168631484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1420182 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151414331 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088602468 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106696128 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134469426 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202482621 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093031652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305044239 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115320545 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085794669 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136534275 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121771951 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123691522 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109383976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09456553 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14636955 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180241771 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136219252 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091213692 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125950116 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115503784 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11440192 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116850444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173708456 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158824879 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131431424 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077551064 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111739646 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151119108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136934233 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110233465 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125505032 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095681054 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133867239 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154027287 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124324144 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142115288 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117143757 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092317862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123226624 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139188176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129672544 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160373149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127495834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078582638 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124453215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102687893 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0853303 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148571841 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080808646 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175256799 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105090047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109805451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125580919 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110992778 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111392221 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155612002 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288334346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108234268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073289921 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109763544 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121999876 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14598018 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092457997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113051439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118946036 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083325755 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135599051 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081212234 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125516707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082737563 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127012858 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132316899 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082896556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12586763 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107656928 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10602827 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132547074 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15873861 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092899694 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085753029 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16435314 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124323901 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105861276 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142510926 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155874997 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105894314 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102690013 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146577815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168370113 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094005366 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161635156 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107808906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087840834 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092680486 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125650155 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113827309 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126376674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086185241 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120544351 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164765707 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080408229 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100388218 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137053127 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084715545 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08566908 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10823541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106951681 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100652449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102105876 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105360697 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137055919 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276251132 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110438654 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126812862 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103083054 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167910542 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092775871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10692622 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108639027 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075999892 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133711545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155338079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083552201 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15906651 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124137305 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119636859 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122339098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088255318 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137007954 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08425708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07581364 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142743009 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114587122 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112134368 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149386541 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118225153 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125404112 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120728613 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132564647 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131545102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131106311 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109780797 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093452455 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115853859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128785174 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078633013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094769728 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085110424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108420651 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098772686 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087786544 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141746934 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124894155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111163639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114998467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100889426 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147261535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08165824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128873576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122522275 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09943277 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150229754 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150228726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133690117 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102643538 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284776846 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076421194 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080671472 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092284494 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125157874 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088739492 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088326963 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116832878 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146418939 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1294379 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138042395 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126506791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122030263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154364725 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076275804 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123390947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144510223 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123915956 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108386259 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095450966 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102941558 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141912201 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107935524 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174944563 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116768629 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126937188 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157035097 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106924765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085052594 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106295008 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133438362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106232335 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144552225 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103112939 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09253462 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111341439 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081298878 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101868725 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129224266 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119983273 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138582215 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116833102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134660058 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083165883 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117135395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125225268 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122806556 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070452634 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11991666 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164640216 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0986983 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118951977 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298710241 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084635035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140241283 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171034711 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145260077 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0901726 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11026599 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123236546 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127593073 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121841888 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13840291 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108358874 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138903606 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114209859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090476003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091507017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099500301 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107578978 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098939563 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105867357 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115849809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100530585 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133556492 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107196639 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114021071 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120353717 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103888376 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097542267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100604843 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172796602 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120965069 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167700576 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104524293 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141550123 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159518845 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080362619 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08447257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083974497 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137765771 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089861866 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132167865 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114189201 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119454239 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12598162 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139699306 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099994256 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074627057 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112181885 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134495461 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125498202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101907453 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104810887 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160111654 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102496726 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083309994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261418521 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120154085 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107620254 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168920223 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068453731 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110331396 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082124977 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084981544 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127900956 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149478657 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085983822 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104646404 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123021843 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11424182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127342924 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102365137 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111537103 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126124803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147115177 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129147156 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094443129 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1138503 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13157348 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153180035 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105396589 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102193628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168789444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150739665 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157611806 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090412319 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117022818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117202048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112657099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138247646 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088439625 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159880987 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086915993 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136323572 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105621818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093060632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130186233 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114880188 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093255196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146028374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120254535 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087657757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082870082 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11750681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121040436 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10642256 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080027849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28809554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079939846 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136485357 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160087563 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086577415 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108927424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10035423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08585617 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108823094 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105660956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091709763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104604911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169397583 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090322112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14717449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135237151 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114495117 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135922591 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106156651 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644372886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08246645 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14936186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117252822 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168676145 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103294604 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120471655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113431147 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122527964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142950889 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105651176 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181918998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132803806 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119061274 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083885968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10579782 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107138816 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091816088 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110643008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116309537 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117979157 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097017747 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118770377 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125182626 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.088210806 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100529531 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155195142 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118525199 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144328461 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137529097 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08850589 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119629661 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137013865 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232317836 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121075475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151194978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109080526 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1030841 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086797811 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103091231 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159051281 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096071314 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156429906 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125832426 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113524035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11680448 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112328701 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131926543 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107852709 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124042427 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095785094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111466571 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116340176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086295468 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081762026 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108364108 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112796914 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10257893 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100329049 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104137329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149875504 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078181201 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102031379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118337675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14302179 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168575794 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093111248 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08783101 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122334292 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118307744 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114898383 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123955083 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084314355 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086282809 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084277103 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086838314 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110280247 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117485358 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116684823 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113364765 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16012698 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089159561 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229714255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099804918 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107881591 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075550633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083100929 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100574257 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100546642 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256977828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113038709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159431486 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100662509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094833966 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095994224 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081104153 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08905338 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128651299 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114699191 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120926184 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105335163 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068824045 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110718292 seconds)
  done (took 60.177312963 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112449697 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088571201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102622216 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147513547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126762599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205807416 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15629032 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194340957 seconds)
  done (took 2.773506847 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074504486 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100316672 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10899918 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088279057 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072384217 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073884519 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230148873 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086347844 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072370538 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098203602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083294355 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074538103 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41329953 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072339451 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073265119 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068043538 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073749988 seconds)
  done (took 3.492936578 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.399391523 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620017873 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349255161 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083285486 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.960245468 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098117574 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.168120272 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141086668 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085184433 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545186126 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.417590884 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136521157 seconds)
  done (took 18.648643023 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087739334 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08148943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094088012 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093693572 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083852461 seconds)
  done (took 2.079842778 seconds)
done (took 109.804187423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088584158 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435262224 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060031219 seconds)
  done (took 2.163023395 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09261771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090519823 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090625799 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088184671 seconds)
  done (took 2.007273194 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079683147 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082902897 seconds)
  done (took 1.799965174 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232555063 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173332521 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101786084 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088016137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085039559 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085453087 seconds)
  done (took 1.906091921 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077586928 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080773607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078741743 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081320124 seconds)
  done (took 1.959732628 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081107714 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058077478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060672275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06420685 seconds)
  done (took 1.906395612 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091545925 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089270706 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084157812 seconds)
  done (took 1.909218266 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10559722 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093166515 seconds)
  done (took 1.844568572 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086030722 seconds)
  done (took 1.730831649 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094918422 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104062648 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13741829 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11925125 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142712525 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119054757 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089933029 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091252795 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084408273 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091498918 seconds)
  done (took 2.718491478 seconds)
done (took 22.179038528 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08445925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372944597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365037722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094482449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694993442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36240008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998403775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098171832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14616064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073704484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090454201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678494196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990138262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33186504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979145096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331365216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655527254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074901611 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074163589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074372123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984822473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074278325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074470335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075323763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654594375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379118243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075075074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.348246245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0743102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076439163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36182465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075362553 seconds)
  done (took 16.450192989 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076125524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124830434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079208595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089936613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075842335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077957626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075463484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127223617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074615551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091491571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074606695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078653246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075468517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093999166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077655604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076065675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075632416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075041658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075256275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09293776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07450816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074768595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075420496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074623632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086929849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074950312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074413081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075379049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076783842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077625909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075141415 seconds)
  done (took 4.262989044 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121903217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12922829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080058592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109675166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117407284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077163237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150011924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099238455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133716048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074469872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091261025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074853239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107856872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075495012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094802038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075023411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075921656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075442121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075519861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074702261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093929783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074761828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075090979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076009121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075027597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089209705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075012042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075185943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07529344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077536869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078399867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075169062 seconds)
  done (took 4.511208077 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078483708 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080951591 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088242791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089194332 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075213201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.078210215 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079454029 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07558205 seconds)
  done (took 2.304943316 seconds)
done (took 29.180675552 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084703229 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075376274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079242348 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094779652 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079684491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083391687 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072896069 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082856457 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079684014 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080210968 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081187563 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073809755 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07827448 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073574291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.08046038 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07426048 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084998602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078272714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084315828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0845084 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076328766 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079220902 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081728167 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084333696 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083992027 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083982049 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083050851 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078751663 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07408838 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076622754 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082660113 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08912269 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073920432 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084468076 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073704169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074159005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077718456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07379634 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083987488 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082328093 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076198807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082707464 seconds)
  done (took 4.995775965 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093920181 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09731069 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09061715 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068573666 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073989593 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071741805 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094640566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066203535 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066661071 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094071306 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06322335 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066478986 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070040153 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06113182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0669081 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064145525 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068458111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061963161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.067072056 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065829014 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095181757 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061011384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084387594 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069937203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063144658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068859127 seconds)
  done (took 3.583299226 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08058581 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088789852 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096443684 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148147681 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116307148 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083669687 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084948275 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097952106 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09941564 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072681378 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076871649 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099226315 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093721053 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079651565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073383632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089897362 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090731268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074980867 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078429807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10045998 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091686526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091014682 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097351863 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087351202 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072641947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075838597 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077656197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086528568 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075760048 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08282674 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07620298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076687148 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075419367 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08513239 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076467642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075098371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099035667 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083985378 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084535339 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074813709 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081707715 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074714056 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096769296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13070278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072921016 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078931894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077077723 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083833541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073226854 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099620181 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084643078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073424877 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076616113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072762484 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072824456 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076457401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075362497 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07577518 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082258649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078960874 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09768474 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07828994 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089164131 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073095744 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081876419 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073209451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074360167 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072646441 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098161216 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07519925 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113822972 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074300227 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074472964 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082733483 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08183103 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080068479 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073755683 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091098558 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083771212 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076676079 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082505715 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076208137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076036821 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102386523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076164414 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07529609 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074378934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079145819 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076593202 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074566383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086073282 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073999739 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075956613 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08990714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073223438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075246851 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079005014 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077537113 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073260176 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084699884 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077526458 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074661322 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083515527 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07388089 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076136308 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086005331 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08050162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07311114 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077789669 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07852072 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074372699 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075261172 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076319577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074904527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082266658 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080086423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077815925 seconds)
  done (took 11.331856254 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166838863 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158103342 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076869909 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149837931 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082197486 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083989479 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151915476 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098151659 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073731496 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074804695 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073551227 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113489406 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108942289 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119489404 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084036025 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073752964 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095881362 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117995264 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153225264 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148865482 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096169863 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081939949 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075861846 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075255225 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075511812 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083532859 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090185788 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082521485 seconds)
  done (took 4.56626551 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085898836 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108691367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080137411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096608924 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095304548 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073821599 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076390123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075620142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090671052 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08400237 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073649809 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078350491 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080300584 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076562264 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074659355 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080567275 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080057162 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074961361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07746865 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081119586 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083832934 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096586944 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077151312 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073017311 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078080434 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072735629 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06868192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08869897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074359401 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098441888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071444461 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078526655 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087629991 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075021544 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073567433 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073396758 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073562418 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073506997 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075146777 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072046988 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072286162 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063890121 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07255571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084077022 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08694877 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062373053 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078183164 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0785852 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078854729 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070994817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076668447 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07654666 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076426451 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080850963 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077691305 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079584077 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074990206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081469659 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081976857 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07362409 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070559741 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072441554 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078275976 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070633164 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088511579 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078324308 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072191917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073799404 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075078806 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087360109 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073706334 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078728665 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071139183 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075755842 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078268562 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07564203 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074911895 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072291223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073872526 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074355401 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061399643 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073541035 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059691213 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076658404 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071932093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0722048 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073638244 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078511601 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084939896 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075420169 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079258003 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075308881 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073412991 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076574151 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066137262 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076487114 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084518055 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087645822 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073970253 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071763324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086227428 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078796593 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072912756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063724018 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077847273 seconds)
  done (took 9.815242463 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096838873 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076036413 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087329284 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094759363 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092349563 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.08054535 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084251141 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075477266 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089691296 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080376089 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082891343 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073853745 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08485784 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083550841 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076134651 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083936178 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077751671 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088722973 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088035432 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073964631 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082056199 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086555057 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094920445 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086430826 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085038111 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086387989 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095608445 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083510186 seconds)
  done (took 4.083070565 seconds)
done (took 40.031617721 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.754132817 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.909686425 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.740190301 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.046947169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.96221396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.766620881 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.940069714 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.736189476 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.011799621 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.776240588 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.059949235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.825600833 seconds)
done (took 65.326774708 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.783490189 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.903310805 seconds)
    (2/2) benchmarking "String"...
    done (took 1.964735581 seconds)
  done (took 5.535038672 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.940745441 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.44479856 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.974304032 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.734171719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.741484728 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.993713434 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.529644288 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270126576 seconds)
  done (took 30.354557973 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.899614359 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.964499919 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.445313274 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477269839 seconds)
  done (took 15.503562356 seconds)
done (took 62.873084456 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.730786075 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.777317772 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775512917 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.721647059 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.795486974 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.746599087 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.049573399 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.790290218 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.735552043 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.722550427 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.737842631 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172781543 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750559269 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.746870165 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.735082318 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.7477298 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.764697634 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.264061243 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.893721356 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.754394867 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.759578136 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.746489394 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.738050677 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.745659888 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.794554626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.736219926 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141850745 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.743764837 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.586705133 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.73860681 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.790741679 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.760623497 seconds)
  done (took 202.362320833 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.736475733 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.915616879 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.971227686 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783509012 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.440689366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.916134287 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.839815052 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.45936292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.739401516 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744235387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.982962265 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.736806626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.994929053 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.683116556 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.788920688 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.819603651 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.973763875 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.020458867 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.793902118 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908823997 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737792511 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776989118 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.72796056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.987517663 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.780517918 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.758000421 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.756177069 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.763046909 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.932347666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.951206142 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.747854993 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.751477296 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943364784 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610665472 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.743213471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.758049404 seconds)
  done (took 169.643546699 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.921597833 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.739407886 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.738175125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739055764 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745680193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738009068 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.862432788 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866554963 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.381967103 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.0507041 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792829725 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.737432289 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53241742 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.737929514 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806248032 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.75129593 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740986154 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.73906139 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753297806 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.76585989 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740044014 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740934872 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866013163 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.751903296 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.737726182 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746755274 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.739867657 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744158239 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.108853592 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.738933907 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.898095462 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739394451 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744979019 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.980630492 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.741311043 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740287096 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596323416 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.262572015 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827345693 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742402225 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746199136 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.740984838 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.95885712 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.740702023 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739404298 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.740719562 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.742707459 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888020918 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.739194158 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867667699 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740733748 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217012606 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.739790733 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740845779 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.631603151 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.313620994 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.740084354 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742887662 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.740836087 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740466431 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.747249607 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.43184513 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.811891502 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.74119152 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.744967624 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747311399 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.741437865 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.772030878 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742085239 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.440511157 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.801829506 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.859047874 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863173789 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741946131 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.741371404 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807890894 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836344141 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.742715408 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743952035 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742097993 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.741861019 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.822373516 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.741920338 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.870765609 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748928107 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.744340538 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795086518 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810810039 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.741648506 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586802098 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742004744 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.743007163 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013723265 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809342591 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741517802 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742604696 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.872548315 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866024526 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454472056 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.742746115 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.484198727 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.883173551 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743298323 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.877737412 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.743659218 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824933905 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7491727 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742612768 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.744251051 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.742708152 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.741203072 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776883998 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.743486712 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.796678976 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116631871 seconds)
  done (took 398.191225344 seconds)
done (took 773.842459115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.363142651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.33058468 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.431043053 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.348934564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.335526046 seconds)
  done (took 13.479668431 seconds)
done (took 15.151248528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.830465647 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836245831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768754029 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.833086566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76575762 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.832242418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816810678 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.77093209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.800023983 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.77098008 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.802744336 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769101322 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754890742 seconds)
  done (took 25.025179247 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984813281 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979708831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813034317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.969118566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790399919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.972929308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907175999 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896146078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893641219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760986863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757086555 seconds)
  done (took 22.399631734 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976261174 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978291369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819890826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978711275 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796125262 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9794089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905170882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896761075 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897115779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761491523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756921213 seconds)
  done (took 22.419264582 seconds)
done (took 71.518180387 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754812185 seconds)
  done (took 3.427096491 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.781283091 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.947465153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.758524124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.755449209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753400799 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.751409187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758405374 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.750472787 seconds)
  done (took 15.932158541 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.750886846 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.751095827 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.75155315 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.748845294 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.747127942 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.748377147 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.748842051 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.750087969 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.751575308 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.747417194 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.748962855 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.748581551 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.751042737 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75117762 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75338593 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.748344097 seconds)
  done (took 29.67156591 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.748439312 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.747224982 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.747197618 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.749240636 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.74722409 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.747639171 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.748961419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.747295391 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.74599173 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.747353209 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.748745269 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.748290509 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.748125658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.748484553 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.749653841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.748126134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.748902338 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.748024633 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.752775373 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.747947921 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.748878051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.742927099 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742139097 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742913083 seconds)
  done (took 43.618187823 seconds)
done (took 94.323349835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.46790376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.459002771 seconds)
  done (took 9.594466782 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.745730079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.743020969 seconds)
  done (took 5.333991455 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.742850417 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.742675547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.742946797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.743234967 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.742153075 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.741144507 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.742777873 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.742798709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.74303582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.741882034 seconds)
  done (took 19.090909835 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.742912876 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.743613747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.739820107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.743264329 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.742792197 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.741516485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.742924988 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.742659619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.744335003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.740904093 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.742728627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.740721107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.743169985 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739627892 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742270201 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.741662725 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.740596907 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.741815533 seconds)
  done (took 33.022433418 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743634745 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.744752086 seconds)
  done (took 5.15460839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.74075082 seconds)
    (2/7) benchmarking "second"...
    done (took 1.739842289 seconds)
    (3/7) benchmarking "month"...
    done (took 1.73940813 seconds)
    (4/7) benchmarking "year"...
    done (took 1.741056058 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.740497565 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.740328211 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.740200079 seconds)
  done (took 13.847962552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.743812726 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.884874926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.946151017 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393717103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.743817333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.746083459 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.65400993 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.750066192 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.747344684 seconds)
  done (took 19.274942514 seconds)
done (took 106.98739461 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610079019 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.741942482 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.9653687 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.801752203 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828295971 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.081493519 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.762409892 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.02887794 seconds)
done (took 42.485747384 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.827238632 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.40849824 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.450749425 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.769062025 seconds)
  done (took 15.293378825 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728387456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.035300877 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.74498158 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.653003805 seconds)
  done (took 21.831884286 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.103537558 seconds)
    (2/2) benchmarking "read"...
    done (took 2.081689191 seconds)
  done (took 5.846816096 seconds)
done (took 51.466726451 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732889862 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733608167 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.730849193 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.733686032 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.73033656 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.732268595 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733922817 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.734281322 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.730488357 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.734354801 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.73443068 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734951848 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729835182 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728763407 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.729283858 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73159377 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731243132 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.729499438 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729130256 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731457966 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729429357 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732477925 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.730985617 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729505325 seconds)
  done (took 43.217742785 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.733432471 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.73010975 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.732614758 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.734034729 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.730892155 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.73195415 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.733072182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.729846478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732293034 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732754221 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728876837 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.7296658 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.731824149 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.730021394 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732066429 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729823713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.733121529 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730181189 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733312103 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.731086568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.732590571 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731224012 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.730171275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733604409 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.730642958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730409135 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.735865362 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.730367363 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732800232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.730519592 seconds)
  done (took 53.60437116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.737859646 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.740899748 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.733045547 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.733853962 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.733030352 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.733018102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.73334628 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.737175717 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.732139738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.733217614 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732408818 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.732070681 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.732777156 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.734515961 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.731443322 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731592942 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.731667959 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.732874831 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.732133947 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.731549772 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.731063943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731571981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.730440078 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.731880165 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733095248 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.732248818 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.730735703 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.729946198 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.730361238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.73038794 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.731227113 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.729601191 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.728910898 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.729178731 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.729276304 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.729346483 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.735123212 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.735689665 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.728356689 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.72863306 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.729341608 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.729653747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.729304054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.728181278 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.728192438 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.727800776 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.728854733 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.728602266 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.727313409 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.72773241 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.727258899 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.727698196 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.72723752 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.727911974 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.727024875 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.727416202 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.727525916 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.727166691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.727294521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.729746493 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.726534076 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.727516626 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.72671518 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.727113552 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.727603422 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.728527386 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.727287071 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.726972561 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.727061141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.727958233 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.728228432 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.726729225 seconds)
  done (took 126.234047786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.727420033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.724679694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.726263693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.725413132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725358388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.727434456 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.725354204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728623668 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725763551 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.729124384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727007413 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.72537823 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724766265 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.728357411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727476692 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725319803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.726024924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724873283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.725222298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.727134244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726140047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.726593218 seconds)
  done (took 39.630816576 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725333245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725662692 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.722871572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726846483 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723433589 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726015185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72670075 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72611357 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725908489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724629646 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724053513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725641366 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723361389 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723229628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723576536 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724146262 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726763403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723824707 seconds)
  done (took 32.696423735 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.724367006 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.723381544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.725986371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.722838203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.723828308 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.726578437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723563941 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726578629 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.726163167 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.722883186 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.725690947 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725623594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.725667697 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723734572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727652255 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.723162184 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.725865992 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723573695 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725907865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724130307 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.723665388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726470985 seconds)
  done (took 39.596709412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725186548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.726379033 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.724283732 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.723223314 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.72235609 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.725754713 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.725811645 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.724011911 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.726276814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.726857801 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723404707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.725501943 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.723605981 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.723550635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.722619756 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722421602 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724935401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.723351595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726222261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722497582 seconds)
  done (took 36.137467594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726224816 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726462478 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.726540379 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726702661 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72717623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.729899141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726214611 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.726139373 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726519375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727910973 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.726574834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.726716138 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725969327 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725854807 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725645198 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726200313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727332995 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726223176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726488093 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725372891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725835227 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726095571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726688692 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72592583 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725999003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726380949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72532749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725556094 seconds)
  done (took 49.990073293 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724620796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724422303 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.722002184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.721786188 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723313618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.722168209 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.722544136 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.722356912 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.72539173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723127158 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.726597911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.724828124 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724418672 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.723689875 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.723774391 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.724283896 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72437847 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.72179478 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721526581 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720972775 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.723456655 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723416452 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.725804151 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720869266 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721045313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.724192177 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721971349 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.721888614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726374021 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721708468 seconds)
  done (took 53.34752925 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.743268952 seconds)
    (2/2) benchmarking "in"...
    done (took 1.742669714 seconds)
  done (took 5.132835281 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.720582923 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724495835 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.724163375 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72194894 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7226207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.724864379 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724283734 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.721469181 seconds)
  done (took 15.431928529 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.724069801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.724420981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.726311781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.729041855 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.726473125 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.724329086 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732096436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.724651456 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.726052736 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.726797172 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.728706571 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.729768381 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72606041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724384439 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.725024043 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724886485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.724498207 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.726145539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.72613475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.725622584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727230454 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726305223 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726823073 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.722315287 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.725767478 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.734025868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.7289998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.72522246 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.724796588 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.728858207 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.725169471 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.723845905 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.726728705 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.727021746 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.724454998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.726837003 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73278336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727057333 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.733154199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726609958 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.726227708 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.723005064 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.726348997 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.727861367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726415717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.726161624 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.725821115 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.722970836 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.726006475 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.728734325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.728680817 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.725795554 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.72339817 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728973288 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.728842176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734101952 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.727878401 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.728937708 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731430256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.735311356 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.738531716 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.7311848 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.728144731 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.727339693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735241124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.744922381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733423598 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.724330958 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.723721611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.726253903 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.733352507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.738490869 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.735303155 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.728782873 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728733645 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.727345805 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727465691 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727490194 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733934961 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.73105567 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.728464792 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729365108 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736431793 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746834295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.726758141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.729056041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.728452599 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.728914464 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.728753055 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740373002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.731758738 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.727226396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.726536561 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.727198912 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.729247829 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.729796254 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.727079722 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728826131 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.725196702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.728533139 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729567173 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730228957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.735171436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729312019 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729344015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.733641362 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.729628772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72801491 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.735263632 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.72852571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728890942 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.728143863 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.734138211 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.726136583 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730937494 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.734857156 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.730365768 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.731945485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.732072687 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.728527861 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737281087 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.750131942 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.72925605 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.728845894 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.733438004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.741221769 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730479951 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.73186956 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.729435085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.727777559 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.727688887 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.730116114 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.730037185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.730290517 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.730914192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732642608 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.727793638 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.729797689 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.731618311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.73077711 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.730773152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.730588315 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.732117394 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.73295371 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.732027035 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.732528423 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.736470729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.731774108 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.732031875 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731982516 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.728836831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730950466 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.732737915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.732379191 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.731271166 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732419223 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.72977603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.731489412 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.732322115 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.731216249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731570918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.731618684 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732978499 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.732323786 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.736536481 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.731022404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.728144111 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.731375358 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.731432259 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.731516328 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.73225806 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.730831955 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.733638504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.737854495 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.731393345 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.732735408 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.735201227 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734551519 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732022226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.733100303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.733419118 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.739893121 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.733716275 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.738966459 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.733030427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733001603 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.732193135 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.73361045 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.730621507 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.733009256 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.734757336 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.737624029 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744168658 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73975008 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.738409356 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.735867092 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.73375398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.736243934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.737505135 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.73605316 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.733329731 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734689802 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732769092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733719834 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.735474429 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.733638149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.732920918 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.733368903 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.73332416 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.734407731 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733589461 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.73504304 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736135738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.730040505 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733448902 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733897784 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.73345021 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.730281424 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.732288357 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.734663252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.733621992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.7343462 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.741939502 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.731200571 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.734969707 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73573189 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.733339229 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.733339721 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.733318411 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.737984369 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.734212648 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740974035 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.734113979 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.735578486 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741145528 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.734605143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.733139279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.736892217 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.734005635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.732403121 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.736480084 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.740288316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.734408221 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.73519522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.734901447 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735693364 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734951304 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.742439003 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.732262799 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.733283344 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.737140268 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.736033456 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.733675112 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.736554163 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.735400847 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.736524372 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738790813 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735004148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.734858426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736420777 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.736259097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.737407062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.736919156 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737920749 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.742829246 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.739703493 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.735303342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.737391438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.737600904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.738222904 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.736962928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.737082131 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.735473723 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.7480087 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.743581789 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742159469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.737067246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.735728986 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742380014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.736915093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.738298544 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737339728 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737187293 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.735532376 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.735488082 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.733777199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.736809262 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.737188833 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737646134 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.736432216 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.739235641 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.736948744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.735323006 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.737936947 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.736708169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.737576659 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.736562867 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.738093594 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.740103001 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739081175 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.735697951 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.737292859 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745102541 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737573625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.737764507 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.737231817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.737401654 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.737540253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.7387651 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.738435076 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.739737101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.743672676 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.740364225 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.744704913 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.740063575 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747185187 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.739162242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.740555784 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.746437409 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.735667236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.737445504 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.737795068 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.739247809 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745333334 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74024709 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.740593293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.74198253 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739432334 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.740456936 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.738278913 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.73846677 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739176124 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.739809859 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748362761 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.738693571 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.740946018 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741119857 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.736522381 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.73953559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.738901349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.737549105 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742798676 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.74159375 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.739452634 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.739045814 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.739521168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.739076182 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.740467233 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.740614229 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.736168791 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.740882044 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746216113 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.739756554 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744059397 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.740495088 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.74726285 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740920145 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746136634 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.740966775 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.739687602 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.742204001 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.739396494 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.742013168 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.740058687 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.740660385 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.741710863 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.741067023 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.744637182 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.74237686 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.741798616 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.74111861 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.743227031 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.740380103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749311381 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760069939 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.741012682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743707817 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.739207725 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.741715577 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.744702309 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.740984786 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.740064672 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741669598 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75003311 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747108768 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.740317555 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.743321005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741527078 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7436206 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.741147774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.740362564 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.741889784 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.741483732 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.74141053 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.743301884 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74467153 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.740946909 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.741867793 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741787943 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.742111881 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.751593999 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.741657404 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.74410662 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742326659 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740903543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.742553485 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.744654807 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.742596353 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741918848 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74231744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.742839017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748614823 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746287445 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.746603966 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.741554842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.743341752 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.742718592 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.743452488 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743471799 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.744946966 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.743041722 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.743706616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.743333742 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.744377542 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.741456403 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.742183569 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743619554 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742884592 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744683105 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.748875795 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744187643 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.739630597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.743573099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74364297 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.745086005 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.743462978 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.752644468 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.746563347 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.751447996 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.750773371 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.748935175 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.743786195 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744838919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.749809882 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.742186662 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.743844648 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.745557354 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.744559032 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.74410004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.747215567 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745184469 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.751320185 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.743608395 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.74372913 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752866329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.745481405 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744945136 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.746220249 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.74628437 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.743703758 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.741277491 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.744160158 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.743699218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751546803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.745666642 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746407613 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747015595 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.743530879 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745515954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749505975 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745139173 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.746679382 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.741476336 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.746153316 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746263234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746852618 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.741842905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.744789745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744381632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.747803057 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.75059785 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.741400969 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747166509 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.745036942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.745797134 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746477548 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745790916 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.744780084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.744209819 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.746343191 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74652719 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.745882285 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.750662472 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.745729047 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.746342864 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.745989242 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746781253 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.7496871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.753747241 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.751385412 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.743784116 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.745892817 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.746127824 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.749983143 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747232942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.748706414 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746287958 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.747733237 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.746381623 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747989526 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.74519793 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.747622898 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761217305 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.746526834 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747066317 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.747275511 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75027257 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.746462959 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.744361056 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.746843627 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.750819929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.748356738 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.754052221 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.747647815 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754250888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747828056 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.748818031 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.749984703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.74979324 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753700302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749679235 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748959748 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.749505457 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.750913111 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.760705126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748322108 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.756643081 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772868047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.749332854 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.750699172 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.750425794 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748472013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.749085329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.7501052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.750267206 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.748124998 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74841644 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.749653177 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.749418108 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753530469 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.750441639 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.748519184 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.748425452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.748985394 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.750082592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.745350974 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.750013562 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.748911616 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.749944944 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.751661902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.750353337 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748805089 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760947149 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.757010105 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.749468673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.74996476 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.747747361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.752155801 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.751372198 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757592025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.755495094 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.750896301 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.751078117 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.750964135 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751616286 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.746796351 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.750958977 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.749332666 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750352622 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.746346846 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.762078698 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757365397 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.755033692 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.750743057 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751014433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.749821023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75155699 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750406053 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.751904633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.752528124 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.751134797 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755357651 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.749667213 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.750113576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.752557142 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.756576254 seconds)
  done (took 1038.139889044 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.748376591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747970715 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748257457 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750120161 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748635321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749001809 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748270798 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74804763 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.749041113 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749293859 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.748825815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750461961 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749673309 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748658492 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748625185 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750749178 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749302449 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74991267 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750085681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748735507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749722181 seconds)
  done (took 38.404279552 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752118592 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748821072 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749137357 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752235696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749863044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751541395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750517241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751193417 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751250521 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749344528 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.752515178 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752586405 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.749291942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.749079925 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748811009 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751679709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752158389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750126989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.75171393 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749470325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752196076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.750304815 seconds)
  done (took 40.190244179 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.753899817 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.753010998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.752153398 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.750020687 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.752660354 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.750807593 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.75376864 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.752212763 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.753300176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.752689673 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.753724829 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.754905579 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.75788452 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.757070794 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.755267792 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.754706408 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.896902932 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.754562781 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75582251 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.754752106 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.750333917 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.759982919 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.750999224 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.750735816 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.752240489 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.75348683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.754666149 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.754499411 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.754327098 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.755017706 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.757726636 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.754345968 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.754922393 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.75486068 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.753369922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.756510593 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.756704106 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.754879976 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.753004601 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.754436957 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.762405489 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.770078348 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.754832864 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.761126078 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.75588427 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.754302011 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.756591517 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.761423487 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.751772731 seconds)
  done (took 87.811144401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.753969111 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75465275 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.75483958 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.754190935 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.754334678 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.754888299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.754996279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755022403 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.752679135 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.751356771 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754987604 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.753561856 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752724849 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.754735076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.756011671 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752676633 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75338939 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753698122 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.752666554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.755284647 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.753457395 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.75492692 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.757759162 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.75327064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755512164 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.752480134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752839887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.7551749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.75461727 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.753917322 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.757068071 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755933078 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.756721781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.753296291 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754172946 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.755997672 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.75880828 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.753267672 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755814264 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.754414015 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.756164463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755671797 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.757003245 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.757134563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.753431366 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753645202 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.753819713 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.753600314 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.754017561 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.755974672 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.757050032 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754071711 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756910714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.756006746 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.757528464 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.75697395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.755074966 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.754849805 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.756077323 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.754981556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.754462553 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.757655595 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754808805 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.756127244 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.756907892 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.75443905 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.754422379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75724571 seconds)
  done (took 121.015313222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757643451 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.759586889 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760584744 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759512048 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759568722 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.759638702 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758470564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.759783665 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75870879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760491953 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760361737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758444446 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.759588303 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.758538463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759690351 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759447374 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759580505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760006392 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760465907 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759599839 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.759514073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760485298 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761640239 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760650901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761167818 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.759830971 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760328603 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761066044 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759951215 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760460362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760787248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.760740938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759959837 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760991454 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.760377573 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.760245908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763232087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760538876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760788924 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761712502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760827632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761004389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762573482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.760664052 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761025313 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760542662 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761461726 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.761351716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760027793 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760668057 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.761097 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760858449 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761584935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763969517 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761238464 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.760313261 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762136587 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762371954 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761676754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762017749 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761782624 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.760657099 seconds)
  done (took 110.835953123 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760350028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760997532 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758302956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.758249566 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760575545 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758080946 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76008213 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.762022066 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761913403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.760931557 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760044034 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757658424 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75957405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760208336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75811701 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760145178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758673136 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758529415 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761530359 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758676684 seconds)
  done (took 36.876764777 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.7591296 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.760185712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758521954 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759175035 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.760827967 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.758879431 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.761437357 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761344854 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75950636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761875401 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761333032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762480521 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758965506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757720813 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762070331 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.7591174 seconds)
  done (took 29.846647802 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.759716677 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.761514814 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.763450807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.766090655 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.759646566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.759108588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762130517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.759822357 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.759479347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.762501377 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.761846221 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.761973431 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.7628666 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.763031466 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.759612076 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.763112583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.760006651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.759507488 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.761958141 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.763792138 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.763769407 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.760794876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.764166503 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.763411014 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.760452233 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.760618328 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.760192151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.760157372 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.760544562 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.763458963 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.761090972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.7609083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.760801411 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.760741681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.76488843 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.760857377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.763612926 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765881906 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.764504954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.764307797 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765291091 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.761921117 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.76386866 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.764492329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.760533042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763829256 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.762557234 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.761843963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.761400304 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.762024666 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.76374011 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.765239291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.763790811 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.764252209 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766696651 seconds)
  done (took 98.612260735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764496401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764407864 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.762323481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.764583053 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.764719969 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.762366334 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764308753 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.762583363 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761883052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.764441541 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762056726 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.765101679 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763769703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764348255 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762749314 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765812172 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.761876193 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762135235 seconds)
  done (took 33.430194277 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761881787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762862129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.766027602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763232813 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.762819431 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766896707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762817017 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.765011776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76594576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762996595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763265294 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.765572295 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765492986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.766218027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764078918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762858815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766886008 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765713941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763002947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763308847 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766478324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76505198 seconds)
  done (took 40.506660516 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.76483382 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.765558231 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.780709224 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.780310494 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785921389 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.791348763 seconds)
  done (took 12.356589095 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763732674 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768852663 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763550651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7674845 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767004147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764268772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764171837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76354463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765300339 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765555865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764412358 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766522291 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766508017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764270253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767387864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766651022 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764597625 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764953863 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765109008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767002593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766369314 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767418136 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764777616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76511822 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76536652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764928661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767583282 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764857521 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76532948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767707446 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767517992 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765026313 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766797175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765521767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768404928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770161626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766064545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769173251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768985246 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766093775 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768340276 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76807848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767610641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766727599 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767917896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766141388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766780162 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766188729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766170281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770144475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769108428 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766274798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768869095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76970399 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769109975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769229796 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766863025 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766561702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769112616 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766406143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767242185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768560268 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766135962 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766861987 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76970331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766255195 seconds)
  done (took 118.293911994 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766704192 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765686553 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767417724 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766958516 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767273678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766756807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766552579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767287475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767090467 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767695174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770516007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766653988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767235989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76770936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767799693 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767056066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766936384 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766604551 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768354916 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772180206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76827055 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769198411 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767425637 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76855065 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767885673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770535354 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769179055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767726377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768371734 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768214891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768926964 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767592464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768446497 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768245438 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768492339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767850049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770753784 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769021893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769864855 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770781777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767750058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770006918 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767572024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768576465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768953429 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768748635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76840661 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769266127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768350713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767612041 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768348106 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768693856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768600892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771284828 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769122653 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769005468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769477378 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76944031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768835074 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771451535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769640363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769715765 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77264266 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769596925 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769321434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769678817 seconds)
  done (took 118.418207814 seconds)
done (took 2421.419218301 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.812855577 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.753679099 seconds)
  done (took 15.258835444 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.934835818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.885571113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.770248163 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.801673928 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.771631277 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.788949534 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.791762306 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.770769721 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.771019923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.771746876 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.771359743 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.957712565 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.823689295 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.770131766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.771341753 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.864232963 seconds)
  done (took 50.713791181 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.774895353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.775829662 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.785013625 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.777011719 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773935882 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.786492427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.807827878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.777265376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.806820968 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.786338733 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.840417662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.783189406 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.77430543 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.822783673 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.786355378 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.789860598 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.861299921 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.846033813 seconds)
  done (took 34.049680812 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.850471281 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.795065005 seconds)
  done (took 10.345350818 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.777920664 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.834559645 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.835303573 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.770139696 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.789461133 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.777639405 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.801646393 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.796232339 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.775549533 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.820373844 seconds)
  done (took 69.677773029 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.780758341 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776132166 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.778693351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.773344933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.768415068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.772551758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.773759127 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.767401024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.427800739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.807178583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.780696993 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.780075923 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.774712296 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777471304 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773962526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.797648004 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.893325129 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.773031987 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.772440765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.782433682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.774462081 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.826141775 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.787092384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.775913805 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.802727359 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.430449872 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.783706951 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.783681523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.873218453 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.773241202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.775174968 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.776848921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.777535915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.171528541 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.030819404 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.774612259 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.788821515 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.783386158 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.774071008 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.888065222 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.779177184 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.785178053 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.480111175 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.015374316 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.872920154 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.815187558 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.097943394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791016826 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.7782904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.805153715 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.77783819 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.777913711 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.788822853 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.258814409 seconds)
  done (took 127.0079658 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.771394312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.124232202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940835037 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.7713731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058367513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981297619 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.773933232 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821888175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.773550678 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008416517 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028093979 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879188262 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774394375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.774129374 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776478544 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771512235 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.927676275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846247456 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.774119154 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.772112927 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803587417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014831377 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.895621643 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.772766378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.802660752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985871277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.895930801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.878186302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.564934028 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.772134201 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838592318 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.774196287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.774323577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.77345009 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930921459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86989697 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856122118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.775124493 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771906011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77205246 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.435055084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97479784 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.869742285 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.905911601 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02765476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.980996777 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554975748 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.772986125 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.514923817 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941911472 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.00363111 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.008129489 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.897376805 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776384768 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.122269619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773441292 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773089622 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.024730254 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996492848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.873342822 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77520471 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.774545773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772753096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015427717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777952057 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871286132 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77523965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775268665 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872951878 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874580622 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007521827 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990174217 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.807969852 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.118694731 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.280500017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023368801 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.84244182 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026203996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777405531 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.77412722 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855435844 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.61566651 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030776785 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019965356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022220052 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811611542 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.504979162 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.774622566 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004286576 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998601376 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03780798 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021983287 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.018975668 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.112956918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774296334 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.774522901 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.030382366 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.902179557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777125863 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121473387 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006809272 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.298380192 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805353747 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08070455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908050674 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.776727115 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.408856445 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.777603016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006803754 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818575 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.776577905 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777147056 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997690062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.768594883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777361457 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.437898602 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.840292149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.778989572 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010586068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.779889881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046113462 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778388679 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010502215 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.222053955 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809132269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.952785323 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.024255841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778263471 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017016024 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022745132 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893367542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.999313655 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.495937043 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.778350759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063284192 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778462333 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.776825662 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949928222 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778819523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921617364 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.778765344 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071137618 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801854267 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0197486 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779907307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.036627668 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81232007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829646272 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780120309 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911377965 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780496103 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.025375271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.93822066 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780379118 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.777450518 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.338306184 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.77773658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929507953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006086319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80156533 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852058299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.448733058 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77769783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862421976 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.804314474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.16580129 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.778172998 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.033614674 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.781218989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.778572554 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.777176035 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.016281221 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.964895171 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781640746 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.779282162 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.685028804 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.77937468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778284135 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961986137 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.130704251 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778184336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983572189 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.781071325 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908219811 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783223464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.851197167 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.116298856 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.779206608 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.780723111 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.780302156 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.780333805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779308264 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990849221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.805972682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.274679622 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.920104703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052692977 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.092329031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.021717488 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.824402348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.779777616 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036338456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.782252805 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844279722 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.78155491 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803275496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010463738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783088315 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990928943 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052568376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.631388787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830295572 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783539207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781426977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.780314206 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.925980463 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865327517 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.783722223 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.780520734 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897348261 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.903130943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993822605 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.782715111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.840078977 seconds)
  done (took 882.323952296 seconds)
done (took 1191.07129294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.781434448 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783577441 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.768550159 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783151168 seconds)
  done (took 28.824486033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789194767 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.785454231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.788881175 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.786625063 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788509838 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786661319 seconds)
  done (took 12.432148582 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.843885143 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.782710978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783007178 seconds)
  done (took 21.116700421 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.855461668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.16983064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.894223265 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.207134168 seconds)
  done (took 9.834939901 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.78876947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.788218323 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.789067713 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789848772 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.789476162 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.790123333 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.787839624 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788577908 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.791131149 seconds)
  done (took 17.812080596 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.826399231 seconds)
done (took 95.553457765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.013555043 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.186840619 seconds)
    (3/309) benchmarking ("sort", Int8, false)...
    done (took 4.686396854 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.051800181 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.770698126 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.062089257 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.783967146 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.161778894 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924474491 seconds)
    (10/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920247147 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.110849742 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.853725938 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.785765215 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.737156641 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.404232982 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.808091223 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.784909036 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897842408 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.782664903 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.193504797 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.169467634 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.728519279 seconds)
    (23/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.793556759 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.783452341 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.769706789 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.197840209 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.951356909 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.950514066 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.793900628 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808626154 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.883577862 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085341433 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.817802435 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.848721158 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.945954627 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.900639676 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.92419599 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.640906325 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.926778377 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.786408926 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.391837785 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.961259262 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.772492928 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89413487 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.785080749 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.733242272 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.574313114 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.78902225 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.503646058 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.878750259 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.413754602 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.875768317 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.981010322 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963996173 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.891173551 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.771549594 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.888449547 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.868213596 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.984650387 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.047173733 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 2.009898446 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.185011488 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.88943381 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.92730808 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.136664846 seconds)
    (66/309) benchmarking ("sort", Float32, false)...
    done (took 5.539092955 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 5.473054136 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.922625978 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.902527768 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186138146 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.041590807 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.941796029 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.808199476 seconds)
    (74/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.984496393 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.847633229 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.807402803 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968263404 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.786986882 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.987636787 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.322833407 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.812908855 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.885336266 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.856304687 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.45981692 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.296737108 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.282602662 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.814373817 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.829966392 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.020365817 seconds)
    (90/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062744393 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.775064708 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.165301925 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793058273 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.343662018 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.896975514 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.792192336 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.804290177 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.014401944 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.945691514 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.816006834 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.839824978 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.803047369 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.910539371 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.421840236 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.800277163 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.994117342 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.809231464 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.43908933 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.913606451 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.128493496 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.935344066 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.999020503 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.151214222 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.616618123 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.675704608 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.894776027 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.311058343 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.962314166 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.799378885 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.974371156 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.111037981 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420085586 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.997706389 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.997915105 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.824240535 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 6.799085658 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.869595896 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.151178063 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.93779354 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.700175662 seconds)
    (131/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.963191916 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.824929703 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.886441291 seconds)
    (134/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.200006596 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.809888489 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.994433669 seconds)
    (137/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.792948431 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.976797897 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211111843 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.296915013 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.845928763 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.729099532 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.812943249 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.806701042 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.052551261 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.816086211 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.025059885 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.144549934 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.080368606 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.822682445 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.803158178 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.908996762 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.084020277 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.831705241 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.952870729 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.039873638 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.963617374 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.091177904 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.941691522 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.482837429 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.160072581 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.823545142 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.936497261 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.935960923 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.209989933 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.263949907 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.808425515 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.995639786 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.786941261 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.622036623 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.09141031 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150119839 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.844517523 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.897726742 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.965664679 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.803337965 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.237160719 seconds)
    (178/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.914263419 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.296172587 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.142453396 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.082925093 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.751926677 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.793628861 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.588167441 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.875689671 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.051551748 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.350827203 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.794066551 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.714666606 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 5.58658429 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.934370441 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099675801 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.046283805 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211751473 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.794413453 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.195290141 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.057223038 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.49507371 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.874668719 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.869528299 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.821361664 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.129337874 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.066276856 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.806503007 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.835352764 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.68372671 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.820073054 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.260368562 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.005823068 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.048744928 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.929982991 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.794638927 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.863698273 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.34094752 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.809616246 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.658563347 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.008565638 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.803168369 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.997118951 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.903379272 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.866544826 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.942143395 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.866691517 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.134176621 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.810857361 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.820543139 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.829551591 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.90201488 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.127976237 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.894359495 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.917382159 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144986578 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.50600621 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.807276834 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.612930044 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.923985348 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.196466043 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.07507072 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.950111063 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.796296825 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.200625863 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.933180979 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.189609476 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.931437438 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.981066627 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.804246857 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.691098685 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.319858368 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.832223937 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.826099787 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.907316416 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915419168 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.829730687 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.725493504 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.125311377 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906128075 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.794741885 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.10742412 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.747860769 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.950211549 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.175849516 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.798908438 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.01570718 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.009173023 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.242930533 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.902625203 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.833754966 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.024650994 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.904576435 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.145386755 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.130735454 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.935601605 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.81137052 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.821005111 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.96294826 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.176631016 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.89555299 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.167972773 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.158063695 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.045765907 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.375254254 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.821978776 seconds)
    (283/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.909186482 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.712675139 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.912136164 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.835121717 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.275768078 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.90330778 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.941217025 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.296548821 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.813483174 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.971077851 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.808324338 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.275650308 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.904148155 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.005755014 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.171130266 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.627997165 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.838978933 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.832155843 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.04456145 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.93554465 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.833214699 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.098411202 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.096030252 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104994236 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.812706966 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.810562153 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.0275902 seconds)
  done (took 986.689975955 seconds)
done (took 988.455138293 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.842635959 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835077756 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.818805219 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.840817819 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.930627833 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.846661625 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.829007691 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.821433134 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.867176109 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.868795115 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.816638756 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.845178888 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.821012589 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.819145001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.81900483 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83314341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.135384764 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.851141461 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.837002721 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.828762677 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.835122211 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.815664431 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.869157114 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.845968935 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.824562336 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.823792045 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.822769742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.838121276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.931568725 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.823069989 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822958496 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.831279797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.135595449 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.8514707 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.815301975 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.840303707 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.830841686 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.830075375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.824840122 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.851995509 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.224954182 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.863426577 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.823901684 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.821944063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.821732632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.825567877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.822440001 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.828283765 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835514102 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834609595 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.214361133 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.877417205 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.824264467 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.821798776 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.83220034 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.821724914 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.825019583 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838013836 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.840195306 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836204416 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.118970353 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.85697791 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.823616003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.838633465 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.829686971 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.248924915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859206749 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.826268543 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.222520375 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.868899688 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.249396001 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872138131 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.824266893 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.836135942 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.853577673 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137004009 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.84906298 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.822282496 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.830102931 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.82154456 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832771452 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835101429 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.827500619 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.82346723 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836605487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.850358036 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.835342253 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.826105744 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.833133654 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.842438966 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.830926387 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.834798165 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.827330734 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.820670818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.833284485 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.826805099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.826107057 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.825898645 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.828775561 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.83350546 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.222592281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88239078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.820187799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.821625856 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.823813875 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.838925103 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.221230188 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.866787375 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.845130713 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.870712466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.825473954 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.1195349 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.858901429 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839500472 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.833524127 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.828492063 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.820775827 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.119791853 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.249147446 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.880944653 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.827365321 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.821452478 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840128934 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.827486906 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.821993006 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.139951836 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.858642027 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839674953 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948599835 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.834999204 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.85751402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.821560581 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.828753038 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.856907254 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841136664 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.856965879 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.82944436 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842233079 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.841724107 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.822689764 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.837191792 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.837780971 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.827668178 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.832068771 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.820969925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.856927423 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839767341 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838921163 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.848140622 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.948034792 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.824674631 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.122519152 seconds)
done (took 286.750388751 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.894042506 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.815768012 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.919332095 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.821691235 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.904553606 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.911475546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.819041135 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.818758739 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.819606167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.197761735 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.819109458 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819776045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.817580547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.820437456 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907657748 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.822376364 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.819712749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.160529612 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.823018474 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.893948538 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.822334268 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.819885723 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.822518474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.199991478 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.816990017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.819298684 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.893591046 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.822692462 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.162594214 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.818035666 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822315924 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.163799575 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.914237418 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.84128398 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.833196536 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.831073789 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.907351459 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.828040819 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.903456463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.904292947 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.919826522 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.863410584 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.820578249 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.825037558 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.827446273 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.826666654 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.820857088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.850279295 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.821594724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.82173461 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.163068488 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.833533788 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.833385118 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.821489309 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.820996329 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.847014628 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.820798603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.825746538 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.914980568 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.826166042 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.887633609 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.199791445 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.201279259 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.825307849 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81803898 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.825569788 seconds)
  done (took 181.176923544 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.891988513 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.903712345 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.88952861 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.829357227 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.876362207 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.892995915 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.830212964 seconds)
  done (took 14.856182947 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.831170517 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826418149 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877862321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.877384474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.826065595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.979766437 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826957468 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.837322055 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.833155587 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.853202189 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.826182257 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825982033 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.832305062 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.821428542 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.876637753 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.836247866 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.942083455 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.827527973 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.827173969 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.976795035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827107712 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.83258641 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.850518025 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.837263821 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.827062492 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.832580605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.419038247 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827428401 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.824149645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.826631944 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824368969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.866705661 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.827224103 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.82869798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825344427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.940890043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.829292709 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.824113398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.827323229 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.823337911 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.827432403 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.828348898 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.828791054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.8255864 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.827667997 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.850103203 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826121143 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.831588868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.82685725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82922493 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.851252089 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.828678942 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.825023089 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.82582092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.869875895 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834975015 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.829004091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.824821375 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827860516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825271143 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.978433761 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.876797998 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.828390723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878735589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.82923751 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.82923633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.827940338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.82903479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923355669 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.828579828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879946724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.825739344 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.986561496 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.851899755 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.830596542 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.831174245 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.831687486 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831177214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.829829141 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.833887992 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.827887342 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.829623038 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.836831924 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828729208 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826616313 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941688434 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.965444564 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.827030515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.842630105 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.837298034 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828807193 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.873094245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.829190189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.829262187 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88578402 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.946594857 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.85518003 seconds)
  done (took 201.647868532 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.834773136 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.839305639 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.832182638 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.847107675 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.831278463 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.830659562 seconds)
  done (took 12.762500064 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.831619665 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.833287883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.829596836 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.831125772 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.831681639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.831100646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.83162672 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.831941548 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.836441093 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.829208057 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.830743553 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.832609295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.831067368 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833266304 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.831840485 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.831304374 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831655665 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829729539 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830318899 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831319213 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.976000582 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.83161949 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.831736469 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.831845285 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.836202748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.830963745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.83968208 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.830467468 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.831417089 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837509226 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.83722948 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.833311373 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.832526816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.836284735 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.837146182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.83167006 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835435024 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.832661084 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829984766 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.832301333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.834219706 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833168924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831599801 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.834018277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.8349948 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.836502226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.839919596 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.839251468 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.83446598 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.834061514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.834120762 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.832404607 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.833051073 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.835027601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.835662139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837400457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.838990193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.834786875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.834473747 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.832896227 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.834263473 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.833764 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834172662 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.839923949 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.841136074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.833635533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.834299424 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838165893 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832173347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.833527809 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.833548814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.829316899 seconds)
  done (took 134.916399262 seconds)
done (took 547.119069318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.932830987 seconds)
  done (took 8.68177645 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.891431294 seconds)
  done (took 8.679379654 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.458651676 seconds)
  done (took 10.218295156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.857261919 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875159542 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.839303504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.829712299 seconds)
  done (took 29.17817027 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.208635253 seconds)
  done (took 8.959254967 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.850699494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.82728564 seconds)
  done (took 15.491492576 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942343793 seconds)
  done (took 8.693826348 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.929696557 seconds)
  done (took 8.686954084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846207365 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.846043881 seconds)
  done (took 15.456906117 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.812924691 seconds)
  done (took 8.564003859 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.4647242 seconds)
  done (took 11.29834313 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.853000432 seconds)
  done (took 8.699583012 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912288303 seconds)
  done (took 8.664245721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.908859591 seconds)
  done (took 8.660193823 seconds)
done (took 161.682512964 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.83315543 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.831810173 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.829298158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.828054958 seconds)
  done (took 29.073256931 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.867392101 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.8691147 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.868987507 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.87909283 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.870622001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.867223403 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.861684014 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.860695811 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.879142845 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.871625376 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.869735587 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.870671561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.867622701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.859574726 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.87081919 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.870039405 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.878825624 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.869348685 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.860630293 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.87119819 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.835583105 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.879615045 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.872465528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.836688433 seconds)
  done (took 46.560342998 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.028532316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.905909203 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.988853725 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.888652587 seconds)
  done (took 9.564266613 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.887253158 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.888521703 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.900289699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.939062972 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.97305941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.89881398 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.86258954 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.856798221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.845965442 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.889699283 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.964444432 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.884334498 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973353925 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.837747284 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.014615351 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.835407141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.836502885 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.888212331 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.940507068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.95172026 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.837768858 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.888008205 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.891789872 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.884020086 seconds)
  done (took 47.322725765 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.834799797 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.843003741 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.841639646 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.834940027 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.838457808 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.836901477 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.841996574 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.838522649 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.857714257 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.83691866 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.835857882 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835068619 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.837580612 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.836830074 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.835978249 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.85058949 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.85046229 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836974314 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.840227196 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.842292949 seconds)
  done (took 38.562241546 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.831325502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.682786014 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.182428352 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.088128491 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.832282529 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.833819556 seconds)
  done (took 31.205157124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.850784252 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.844202651 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.837602957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.894852392 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.980160242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.845483572 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.837557115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.8492821 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.886143931 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907088533 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.86247195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.867754893 seconds)
  done (took 24.218590898 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.836128719 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.840123054 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.8343062 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.854356476 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.849908699 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.848331325 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.844699879 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.832750407 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.850745737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.857971474 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.846521575 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.850335321 seconds)
  done (took 43.905075179 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922971248 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.720635541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444629896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541734353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371418584 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043271692 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.363106461 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013776708 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.837082656 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106560814 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.357834599 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064630436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087333211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834442589 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906461759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292579011 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121032847 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057431808 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856818298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468032752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942565441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.46235446 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.559030591 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94859612 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044743095 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965889591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.094694561 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.788817797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963755391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86889056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844494032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836915724 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109149862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049145052 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921083503 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845363635 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487539368 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.550459196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.822340033 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.501315481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.434223903 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954886485 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842503783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836383865 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768776661 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438236064 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020683675 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.840200592 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.537743247 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837090795 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846918365 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922631301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.83887681 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.650694305 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788304243 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114286406 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.834782087 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842057182 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397488526 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890880748 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.564742533 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.776763521 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.927092144 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535870904 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291567986 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.984826403 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.839621418 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839799356 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769218754 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.53032794 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950975664 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980460055 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.856285351 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48441172 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134100984 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.401511434 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904545545 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121359943 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.720032254 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.781166588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063721805 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792154081 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769558594 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.679628784 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770091579 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091043693 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870363059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.476476509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870908704 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01458697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84838464 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858891899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844019925 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059777844 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.718943541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839715751 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.298504904 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107000171 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859756534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019714463 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77051998 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.84149973 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09207185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.048448427 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176528209 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294400584 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997244491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839382889 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.927981217 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.839296626 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851603437 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.113270018 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895755255 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883464821 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957539579 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.794906816 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124862914 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861825441 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.012668943 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.368693267 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088054185 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.150689481 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085994216 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923831279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841512309 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840660316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561592551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450735989 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.062889636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.840349406 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423716498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.854661589 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.841436232 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773470238 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.507759732 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350340664 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.942963667 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062001625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.88042967 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114726485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772192996 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984222626 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.834938573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.061673081 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.495696251 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.90511958 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098646385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417424313 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.175854181 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85567379 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861139699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923153391 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862232872 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.367509767 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098152391 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.844261182 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.844622565 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550857392 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.904805322 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842341902 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.846176452 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636266422 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121183451 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86453121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848694651 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72897273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.854592228 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925511935 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846592105 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850386959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371403159 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591779428 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.853298586 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.498021039 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06526395 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851601376 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.533228593 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021610513 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.93040277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115032265 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901501609 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.77550103 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.544307488 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.544390373 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843415425 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776018396 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.843283527 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850337268 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85274473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.03414481 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125748881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887272558 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.533082818 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.945358161 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853998259 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.847948021 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844280734 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.343488754 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8923012 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.541201102 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.854518426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979124736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.857462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777185616 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847828094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847866252 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843935723 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.798570503 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895666652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.535223824 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167171612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101517715 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.496115346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860310812 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.501640141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.960754304 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.870142528 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.304853315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006441787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.856929756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931405168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.854146573 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.535215284 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.613744152 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407007211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146468386 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154677909 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273786341 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.30085788 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200306116 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021831361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077757591 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372042695 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905354787 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026927138 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789278627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93373074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.49904288 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186717729 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863949709 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073636069 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227569486 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.364218196 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993873422 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055906762 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880502338 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.737753161 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886708572 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.36859817 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002970524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.352518346 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056541707 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023292197 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.305583072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.946153848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.845165107 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284934255 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92091399 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.558883463 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2072497 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.463476071 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.383888304 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208442549 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853791108 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293972998 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198684815 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255233651 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.944933321 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781672698 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85678232 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858285067 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.84645097 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.828852223 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.729480116 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.110333895 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857193668 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081710982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.210786165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116316934 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.747904891 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.852107054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847540231 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130824809 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.596220742 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089618674 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.261669932 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.440562527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860636085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780700325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780411882 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551487587 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857531213 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822536846 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06802587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.953488566 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800726931 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304268916 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174519627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101447733 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.862768439 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120961264 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122393317 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.580528611 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877481154 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.948415154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.30756224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.547301482 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.072430606 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082355426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646816145 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07781183 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45302472 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.816268059 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.849540182 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062813388 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.074910419 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.368430428 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082275831 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.571279939 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.859526144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216580117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908350372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.374603 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051905795 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.94053671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860694098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930017048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859227439 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.861054696 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859937021 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894952089 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385472204 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971849988 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.865455499 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940792724 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898122686 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431273677 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.864012678 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125751211 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20204078 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175190086 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910395958 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852222045 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861151007 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784117213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988920144 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.294525046 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125185742 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980193998 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.991518769 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87741527 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.303255214 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.183675975 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174964069 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126587324 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.747494782 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853075627 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941198699 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.078185378 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862509865 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.061251513 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074267146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158374631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317608473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.055956113 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144831798 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126319548 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220742923 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854436074 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442094021 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.861215922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351833092 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.886129541 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.380104714 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126143398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861233567 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060777737 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872399334 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.053871698 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.306439794 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547450471 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203402842 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837363337 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901990866 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129384028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248712395 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165597948 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934185176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864328733 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.548979415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992000177 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.769907569 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097722249 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854741095 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063486453 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.566033943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86326342 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137040464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162420463 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.852446197 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.795772298 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893183046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.86295413 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07470844 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109161531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101073923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863889223 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.863431434 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.668652052 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135762866 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913641248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787776137 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.857584348 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94543363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099523719 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875797081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.371757087 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.558436837 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148667126 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.767550488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877280047 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331640832 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308983237 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188063507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.382796856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084297466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408066905 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.788639897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238983672 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.859792739 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312797737 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24265763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.859800594 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426350225 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977475302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.127293684 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180904538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.867200861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576964464 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.888777439 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077468896 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447778951 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797487545 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859346851 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.917071947 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857842713 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.852517412 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868266928 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.832415265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781752276 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.708317859 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348425109 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.861642262 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.843911727 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.331723515 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.46762205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973229247 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014816999 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862727448 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.566305138 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.162101499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109904772 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427974709 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939570301 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.861690721 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858045583 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78332978 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053281492 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.051333932 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152428365 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.274841817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.977379325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861939713 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.072224082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067687543 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.385834783 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002961215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314963316 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979570447 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.786193849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.570447188 seconds)
  done (took 1664.74218921 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890865049 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88700801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.89216888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913299131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919974386 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89353863 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.95788643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909738538 seconds)
  done (took 57.044873009 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.857958126 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067069515 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.867205197 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.859139091 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.903004943 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.86055225 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.035802426 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.87137859 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.884609827 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.868689361 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.859329148 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.87185097 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.75789074 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.887216826 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.861320439 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.86528168 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.882087595 seconds)
  done (took 74.902807535 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.865208684 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.244778738 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.929433209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.886628892 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.949192868 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.871924381 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.018882458 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.90527413 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.869875655 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.046814115 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.20455305 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.878286508 seconds)
  done (took 90.455698269 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.879526628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.870035943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86969242 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.869592124 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.869630576 seconds)
  done (took 11.152824251 seconds)
done (took 2170.480295964 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.097636302 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.04883156 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094182456 seconds)
  done (took 5.927403962 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.010219882 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059071739 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.177315776 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.19760593 seconds)
  done (took 10.231738206 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.151406222 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.245749815 seconds)
  done (took 6.181986731 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.193695096 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.89017143 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28466587 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.867790012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862994541 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867451919 seconds)
  done (took 22.389602968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.866431581 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.869763911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.867210464 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.8704881 seconds)
  done (took 9.259928326 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.849359583 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.538162685 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.852566097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.865505986 seconds)
  done (took 20.89287289 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.01607938 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.002334447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.010355221 seconds)
  done (took 7.81402312 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.368184772 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784666465 seconds)
  done (took 8.940672742 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.028940491 seconds)
  done (took 3.81374186 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.894774982 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137871185 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.357118561 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.392887038 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.453564233 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.704939037 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.205532752 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.102201177 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.310258864 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.327234209 seconds)
  done (took 24.671955057 seconds)
done (took 135.375497888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.217608054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896370255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.067055591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.229980615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.14071486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.066125464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.08617388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.237065484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.93705268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.933181717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.278673493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.134270876 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03672278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887581446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047424136 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.889500266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.105460603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269108492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.926851791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.157972445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.101320967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878734092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.068562274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.899714475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.103562416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0236314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.421968675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894196572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.054982958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435121873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.023135771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.29819248 seconds)
  done (took 168.534842666 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.868740519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.867995011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868318381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868503578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.376813018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874812318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.869048904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.867013452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.298775599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.298189423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869410435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361246209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.870216381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.867180457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.869477862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.868718712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.459125588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869942543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.868057972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872930936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.868710887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.198630363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.8736303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.208170715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.447583915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868108691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.868137583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.866824579 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867030768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.867920287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.869086975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.868426284 seconds)
  done (took 209.298095725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.868248413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870956127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.874380156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870651392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.872345116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874023761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871961776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871713039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.624570433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.619033451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.870814541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.872112044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873869284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870817115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873201892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873040199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.868543899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.871839127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.876508655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.869763631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.871934798 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.593025139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871436659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.599751973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.873247623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.872110723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.870911254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872107685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.868533454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.872467428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.870168026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.870553428 seconds)
  done (took 220.635593791 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.131943281 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.874187456 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.876664742 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.784353787 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878382779 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.875391641 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.882145339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.125345568 seconds)
  done (took 19.221893412 seconds)
done (took 619.486446732 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.352970329 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.197300326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.050596463 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.90141513 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.142498525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.936335213 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.896050832 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.965964046 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.528615856 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.968511455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.570083796 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.916720438 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.651764539 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.925832638 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.022917281 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.960098781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.484102175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573293116 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.075440325 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.968902754 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.069596234 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833234755 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.981672698 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.551285773 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.675801134 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880858722 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.96709448 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.489551879 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.90809164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.059015882 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.648972566 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.205244554 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.911802779 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.896219323 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953873327 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.932082708 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.161299361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.911724843 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.0214849 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643891246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961498963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.421718148 seconds)
  done (took 102.968077203 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.867917408 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.86708346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.864716362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.866124259 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.86621985 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.867395325 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.867112261 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.865664404 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.866788008 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.864838564 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.869712931 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.864273353 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.865420889 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.867161365 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.864905726 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.86664584 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.868672574 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.867148926 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.865118705 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.865486391 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.866852549 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.866231533 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881948292 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.866072756 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.865613975 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.865101197 seconds)
  done (took 50.345001972 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.879257334 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.032304703 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.117397005 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900685532 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.8788497 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.883832296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.89908893 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.884991098 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.882456099 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.882679386 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.971394002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.889757932 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.900011119 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.121610349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.899324563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.884335252 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.880814576 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.880396995 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.043480005 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898002374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.901371119 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.886629755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.899356627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.895086175 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.883087218 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881974173 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.883940506 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.31911019 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.890163569 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.974552475 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.931346816 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.905954836 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.257812428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.128548357 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937668951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.893576734 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.882264509 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.976749976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.890175425 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882295547 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.899335912 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.887492038 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.117422447 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.376136381 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897588332 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.883429369 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.329165935 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.985836871 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927402158 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894586471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.121182129 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.902488148 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.885413134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.882711871 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.919793047 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.887287562 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.881876985 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.176848228 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.898653235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.901884632 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.888614774 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.88648091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052732587 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894760984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035809956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895572184 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.891449048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.883085899 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.121130638 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903792266 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.376580008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.898775806 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.88393135 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.975915092 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.041403925 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.35902464 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900065373 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051961667 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.274643858 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.911682806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.895862051 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.310930427 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.914668031 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.89554063 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.888995609 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888588921 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.888016637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.929902143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904107296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.317145572 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.384447123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.201328374 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.914930645 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.901776567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.887165749 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.181346109 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.896911131 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887527858 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.118113174 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.388433705 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.898853498 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.895069076 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.367884054 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.903500745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.903932669 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.896064015 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125171111 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.904012221 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.93015195 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.887980915 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.893183174 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.891373745 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.908477804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.894185695 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.888262306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.36634445 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998072302 seconds)
  done (took 233.44649765 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.883498784 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.887895475 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.880286666 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889046951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.88040414 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.8894398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.882996617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.882091347 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.889163174 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.883276806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.88207644 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.883971311 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.885726958 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.890370953 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.892926169 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.890435732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.489947864 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.884969535 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.881755643 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.884051919 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.537270791 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88904147 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.883121145 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.882203313 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.884948043 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.883470052 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.892630723 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.887391659 seconds)
  done (took 167.861434699 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.888882853 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.001935608 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.907814163 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.915408818 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.899994993 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.888897228 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.914672326 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.906639171 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.894369159 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.888627968 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.889882089 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.951908212 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.901047542 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.989787711 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.921255789 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.922585887 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.993157931 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.896421096 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.889434424 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.885385574 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.917186572 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.885573178 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.952362847 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.01283902 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.909385968 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.009680917 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895304989 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.891116746 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.891322775 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008452437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.90579385 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.951784393 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.920401149 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.910171227 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.011132833 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00478176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995807096 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.921212159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.894554276 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.892400227 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.888847834 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.878276451 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.006605379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.909083375 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.891327778 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.9942315 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.909377677 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.893361796 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.898121619 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.89073884 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.903145323 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.910265098 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.957811652 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.022408849 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.923772024 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.916939444 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.915849082 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.168474316 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902450897 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.990623448 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.884250599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.008118595 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.912747384 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.881238203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.890618655 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.895974706 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920610193 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.924157207 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993419615 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.897927514 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.990221725 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.927928979 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.900746763 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.889741209 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.895351996 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.00741907 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.010948472 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.925632955 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.929525167 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.921921607 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.886833094 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893812514 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.87766582 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906324131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.896942738 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006518952 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009441202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.898499119 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.894282227 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.896109371 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.892904504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.919162234 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019082651 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.927806354 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.985671265 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.960045189 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.967005823 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.907883398 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905423154 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.895033209 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.956623941 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907738898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.905167707 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.218480318 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.966000321 seconds)
  done (took 204.816895722 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.340750177 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.945239288 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.950826036 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.205282476 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.237760887 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832757527 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.941637755 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.944904093 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.966474183 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.12609764 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.017356458 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964232166 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.928833536 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915995504 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.941744739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.964169291 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.951008181 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.284375407 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.04623999 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.070902555 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.92290392 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.2339591 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.219484367 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.32329167 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.979747433 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.291754911 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.603338663 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.087463272 seconds)
  done (took 62.055489398 seconds)
done (took 823.285902767 seconds)
SAVING RESULT...
DONE!
